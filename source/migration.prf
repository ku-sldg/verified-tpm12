(migration
 (makeKey_TCC1 0
  (makeKey_TCC1-1 nil 3583161091 ("" (tcc))
   ((inverse const-decl "integer" keydata nil)) nil))
 (makeKey_TCC2 0
  (makeKey_TCC2-1 nil 3592662869 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil migration nil))
   nil))
 (makeKey_TCC3 0
  (makeKey_TCC3-1 nil 3592662869 ("" (subtype-tcc) nil nil) nil nil))
 (rewrap_scheme_TCC1 0
  (rewrap_scheme_TCC1-1 nil 3580754653
   ("" (lemma keyEncDatStoreAsymkey)
    (("" (lemma keyEncDatMigrateAsymkey)
      (("" (lemma check_decrypt3) (("" (grind) nil nil)) nil)) nil))
    nil)
   ((keyEncDatMigrateAsymkey formula-decl nil data nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (privKVAL type-eq-decl nil keydata nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (privKey adt-accessor-decl "[(tpmStoreAsymkey?) -> privKVAL]" data
     nil)
    (encData adt-accessor-decl "[(encrypted?) -> tpmData]" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (encrypted?)]" data nil)
    (encrypt const-decl "tpmData" key nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (badData const-decl "tpmData" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (check_decrypt3 formula-decl nil key nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil migration nil))
   nil))
 (rewrap_scheme_TCC2 0
  (rewrap_scheme_TCC2-1 nil 3580754653 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (updateLoc const-decl "mem" memory nil)
    (encrypt const-decl "tpmData" key nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil migration nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil))
   nil))
 (rewrap_scheme_TCC3 0
  (rewrap_scheme_TCC3-1 nil 3580754653
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (rewrite encStoreAsymkey?)
        (("" (inst -1 "par!1") (("" (grind) nil nil)) nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil migration nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (makeKey const-decl "(tpmKey?)" migration nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   shostak))
 (rewrap_scheme_TCC4 0
  (rewrap_scheme_TCC4-1 nil 3580754653 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (updateLoc const-decl "mem" memory nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validEncScheme const-decl "bool" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (b2n const-decl "nbit" bit nil)
    (encrypt const-decl "tpmData" key nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil migration nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (makeKey const-decl "(tpmKey?)" migration nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (rewrap_scheme_TCC5 0
  (rewrap_scheme_TCC5-1 nil 3580754653
   ("" (lemma keyEncDatMigrateAsymkey)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((keyEncDatStoreAsymkey formula-decl nil data nil)
    (badData const-decl "tpmData" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (autData adt-accessor-decl
     "[(OUT_AuthorizeMigrationKey?) -> (tpmMigKeyAuth?)]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (key adt-accessor-decl "[(tpmMigKeyAuth?) -> (tpmKey?)]" data nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validEncScheme const-decl "bool" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (b2n const-decl "nbit" bit nil)
    (encrypt const-decl "tpmData" key nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (makeKey const-decl "(tpmKey?)" migration nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil migration nil))
   shostak))
 (rewrap_scheme_TCC6 0
  (rewrap_scheme_TCC6-1 nil 3583521517 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (encrypt const-decl "tpmData" key nil)
    (b2n const-decl "nbit" bit nil)
    (/= const-decl "boolean" notequal nil)
    (validEncScheme const-decl "bool" keydata nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil migration nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (makeKey const-decl "(tpmKey?)" migration nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (rewrap_scheme 0
  (rewrap_scheme-2 "" 3583520881
   ("" (lemma keyEncDatMigrateAsymkey)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma inverse_private) (("" (grind) nil nil)) nil)) nil))
    nil)
   ((keyEncDatStoreAsymkey formula-decl nil data nil)
    (inverse const-decl "integer" keydata nil)
    (loadKey2? const-decl "bool" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (makeKey const-decl "(tpmKey?)" migration nil)
    (updateLoc const-decl "mem" memory nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (public const-decl "KVAL" key nil)
    (private const-decl "privKVAL" key nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validEncScheme const-decl "bool" keydata nil)
    (b2n const-decl "nbit" bit nil)
    (encrypt const-decl "tpmData" key nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (inverse_private formula-decl nil key nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil migration nil))
   shostak)
  (rewrap_scheme-1 nil 3580665163
   ("" (lemma inverse_private) (("" (grind) nil nil)) nil)
   ((HV formal-nonempty-type-decl nil migration nil)
    (inverse_private formula-decl nil key nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (encrypt const-decl "tpmData" key nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (public const-decl "KVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil))
   shostak))
 (migrate_scheme_TCC1 0
  (migrate_scheme_TCC1-1 nil 3581702476
   ("" (skosimp)
    (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil migration nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (migrate_scheme_TCC2 0
  (migrate_scheme_TCC2-1 nil 3581702476 ("" (tcc))
   ((minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (encrypt const-decl "tpmData" key nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (HV formal-nonempty-type-decl nil migration nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (migrate_scheme_TCC3 0
  (migrate_scheme_TCC3-1 nil 3582284032
   ("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil)
   ((TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (migrateKey? const-decl "bool" tpm nil)
    (checkDecrypt? const-decl "bool" key nil)
    (inverse const-decl "integer" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (badData const-decl "tpmData" data nil)
    (updateLoc const-decl "mem" memory nil)
    (TPM_MigrateKey const-decl "State" tpm nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (migrateKeyState const-decl "tpmAbsState" tpm nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil migration nil))
   shostak))
 (migrate_scheme_TCC4 0
  (migrate_scheme_TCC4-1 nil 3583600215
   ("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil)
   ((TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (migrateKey? const-decl "bool" tpm nil)
    (checkDecrypt? const-decl "bool" key nil)
    (inverse const-decl "integer" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (badData const-decl "tpmData" data nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil migration nil))
   nil))
 (migrate_scheme_TCC5 0
  (migrate_scheme_TCC5-1 nil 3583600215
   ("" (grind)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (HV formal-nonempty-type-decl nil migration nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil))
   nil))
 (migrate_scheme_TCC6 0
  (migrate_scheme_TCC6-1 nil 3583769286 ("" (subtype-tcc) nil nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (decrypt const-decl "tpmData" key nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (HV formal-nonempty-type-decl nil migration nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil))
   nil))
 (migrate_scheme_TCC7 0
  (migrate_scheme_TCC7-1 nil 3583769286 ("" (subtype-tcc) nil nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil migration nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil))
   nil))
 (migrate_scheme 0
  (migrate_scheme-1 nil 3581440418
   ("" (lemma inverse_private)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey)
        (("" (auto-rewrite-defs)
          (("" (assert)
            (("" (bash)
              (("1" (grind) nil nil)
               ("2" (assert)
                (("2" (lift-if)
                  (("2" (assert)
                    (("2" (lemma pubInversePriv)
                      (("2" (inst -1 ma!1)
                        (("2" (lemma pubInversePriv)
                          (("2" (inst -1 storage!1)
                            (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((keyEncDatStoreAsymkey formula-decl nil data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (makeKey const-decl "(tpmKey?)" migration nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (unXOR const-decl "tpmData" data nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (migrateKeyState const-decl "tpmAbsState" tpm nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_MigrateKey const-decl "State" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (pubInversePriv formula-decl nil data nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validEncScheme const-decl "bool" keydata nil)
    (b2n const-decl "nbit" bit nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (public const-decl "KVAL" key nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (checkDecrypt? const-decl "bool" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (TPM_ConvertMigrationBlob const-decl "State" tpm nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (loadKey2? const-decl "bool" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil)
    (inverse_private formula-decl nil key nil)
    (HV formal-nonempty-type-decl nil migration nil))
   shostak)))

