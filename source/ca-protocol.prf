(caProtocol
 (makeCertActivate_TCC1 0
  (makeCertActivate_TCC1-1 nil 3571591700 ("" (subtype-tcc) nil nil)
   nil nil))
 (makeCertActivate_TCC2 0
  (makeCertActivate_TCC2-1 nil 3571591700 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (B formal-nonempty-type-decl nil caProtocol nil)
    (HV formal-nonempty-type-decl nil caProtocol nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmAuthData? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil))
   nil))
 (cert_and_quote_with_prev_key_TCC1 0
  (cert_and_quote_with_prev_key_TCC1-1 nil 3571660660
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (TPM_Quote const-decl "State" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (readOut const-decl "tpmAbsOutput" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (hash formal-const-decl "[B -> HV]" caProtocol nil)
    (HV formal-nonempty-type-decl nil caProtocol nil)
    (B formal-nonempty-type-decl nil caProtocol nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (CPU_read const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_BuildQuoteFromMem const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (makeCertActivate const-decl "tpmAbsState" caProtocol nil)
    (minus_int_is_int application-judgement "int" integers nil))
   nil))
 (cert_and_quote_with_prev_key_TCC2 0
  (cert_and_quote_with_prev_key_TCC2-1 nil 3572209389
   ("" (subtype-tcc) nil nil)
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (activateIdentityBlob? const-decl "bool" data nil)
    (checkSig const-decl "bool" key nil)
    (checkSigStatus const-decl "bool" key nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "KVAL" key nil)
    (inverse const-decl "KVAL" keydata nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (quote? const-decl "bool" tpm nil)
    (TPM_Quote const-decl "State" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (readOut const-decl "tpmAbsOutput" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (hash formal-const-decl "[B -> HV]" caProtocol nil)
    (HV formal-nonempty-type-decl nil caProtocol nil)
    (B formal-nonempty-type-decl nil caProtocol nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (CPU_read const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_BuildQuoteFromMem const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (makeCertActivate const-decl "tpmAbsState" caProtocol nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (certify? const-decl "bool" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil))
   nil))
 (cert_and_quote_with_prev_key 0
  (cert_and_quote_with_prev_key-1 nil 3571591815 ("" (grind) nil nil)
   ((getPCRs const-decl "list[PCR]" pcr nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" tpm nil)
    (checkSigStatus const-decl "bool" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (hash formal-const-decl "[B -> HV]" caProtocol nil)
    (HV formal-nonempty-type-decl nil caProtocol nil)
    (B formal-nonempty-type-decl nil caProtocol nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (readOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (CPU_read const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_BuildQuoteFromMem const-decl "State" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (>> const-decl "State" StateMonad nil)
    (makeCertActivate const-decl "tpmAbsState" caProtocol nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (tpmRestore const-decl "(wellFormed?)" tpm nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (quote? const-decl "bool" tpm nil))
   shostak)))

