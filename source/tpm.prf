(tpm
 (IMP_StateMonad_TCC1 0
  (IMP_StateMonad_TCC1-1 nil 3566322273
   (""
    (inst 1 "(# pcrs := pcrsPower,
locality := 4,
keys := emptyset,
srk := privateKey(srkVal),
ek := privateKey(ekVal),
keyGenCnt := initKeyVal,
memory := empty,
restore := initSaveData,
permFlags := permFlagsInit,
permData := permDataInit,
stanyFlags := stanyFlagsInit WITH [`postInitialize := TRUE],
stanyData := stanyDataInit,
disableForceClear := FALSE #)")
    nil nil)
   ((FALSE const-decl "bool" booleans nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (TRUE const-decl "bool" booleans nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (tpmSecret? adt-recognizer-decl "[AUTHDATA -> boolean]" key nil)
    (AUTHDATA type-decl nil key nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (empty const-decl "mem" memory nil)
    (initKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (emptyset const-decl "set" sets nil)
    (set type-eq-decl nil sets nil) (KVAL type-eq-decl nil key nil)
    (pcrsPower const-decl "PCRVALUES" pcr nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (tpmPostInit_TCC1 0
  (tpmPostInit_TCC1-1 nil 3566305562 ("" (subtype-tcc) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (tpmStartup_TCC1 0
  (tpmStartup_TCC1-1 nil 3566305562 ("" (subtype-tcc) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (tpmRestore_TCC1 0
  (tpmRestore_TCC1-1 nil 3566305562 ("" (subtype-tcc) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (wellFormed? const-decl "bool" tpm nil))
   shostak))
 (changeLocalityState_TCC1 0
  (changeLocalityState_TCC1-1 nil 3566305562 ("" (subtype-tcc) nil nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak))
 (unsealOut_TCC1 0
  (unsealOut_TCC1-1 nil 3566305562 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (inverse const-decl "KVAL" key nil)
    (unseal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (unBindOut_TCC1 0
  (unBindOut_TCC1-1 nil 3566305562 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (unBind? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (unBindOut_TCC2 0
  (unBindOut_TCC2-1 nil 3566305563 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (unBind? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (certState_TCC1 0
  (certState_TCC1-1 nil 3566305563 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (inverse const-decl "KVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (executeCom_TCC1 0
  (executeCom_TCC1-1 nil 3566305563 ("" (subtype-tcc) nil nil)
   ((afterInit? const-decl "bool" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   shostak))
 (CPU_BuildQuoteFromMem_TCC1 0
  (CPU_BuildQuoteFromMem_TCC1-1 nil 3566305563
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil))
   shostak))
 (gen_cert_TCC1 0
  (gen_cert_TCC1-1 nil 3566305563 ("" (subtype-tcc) nil nil)
   ((tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (gen_cert 0
  (gen_cert-1 nil 3566305726 ("" (grind) nil nil)
   ((tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil))
   shostak))
 (init_post 0
  (init_post-1 nil 3566305727 ("" (grind))
   ((srkKeyVal const-decl "K" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil))
   shostak))
 (save_state_post 0
  (save_state_post-1 nil 3566305727 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_SaveState const-decl "State" tpm nil))
   shostak))
 (startup_post 0
  (startup_post-1 nil 3566305727 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (restoreState const-decl "tpmAbsState" tpm nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (deactivateState const-decl "tpmAbsState" tpm nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil))
   shostak))
 (startup_after_init 0
  (startup_after_init-1 nil 3566305728 ("" (grind))
   ((srkKeyVal const-decl "K" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (resetMonad 0
  (resetMonad-1 nil 3566305728 ("" (grind))
   ((srkKeyVal const-decl "K" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (pcrsReset const-decl "PCRVALUES" pcr nil)
    (CPU_sinit const-decl "State" tpm nil))
   shostak))
 (take_ownership_post 0
  (take_ownership_post-1 nil 3566305728 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (badkey const-decl "KVAL" key nil)
    (goodkey? const-decl "bool" key nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil))
   shostak))
 (take_ownership_pred 0
  (take_ownership_pred-1 nil 3566305729 ("" (grind))
   ((tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (badkey const-decl "KVAL" key nil)
    (goodkey? const-decl "bool" key nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil)
    (takeOwnership? const-decl "bool" tpm nil))
   shostak))
 (owner_clear_post 0
  (owner_clear_post-1 nil 3566305729 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerClear const-decl "State" tpm nil))
   shostak))
 (force_clear_post 0
  (force_clear_post-1 nil 3566305729 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (forceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ForceClear const-decl "State" tpm nil))
   shostak))
 (disable_owner_clear_post 0
  (disable_owner_clear_post-1 nil 3566305730 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableOwnerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableOwnerClear const-decl "State" tpm nil))
   shostak))
 (disable_force_clear_post 0
  (disable_force_clear_post-1 nil 3566305730 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableForceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableForceClear const-decl "State" tpm nil))
   shostak))
 (seal_post 0
  (seal_post-1 nil 3566305730 ("" (grind))
   ((tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" key
     nil)
    (tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil))
   shostak))
 (seal_pred 0
  (seal_pred-1 nil 3566305730 ("" (grind))
   ((tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" key
     nil)
    (tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (seal? const-decl "bool" tpm nil))
   shostak))
 (unseal_post_TCC1 0
  (unseal_post_TCC1-1 nil 3566305565 ("" (subtype-tcc) nil nil)
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (unseal_post 0
  (unseal_post-1 nil 3566305731 ("" (grind))
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unseal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil))
   shostak))
 (unseal_pred_TCC1 0
  (unseal_pred_TCC1-1 nil 3566305565 ("" (subtype-tcc) nil nil)
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (unseal? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (unseal_pred 0
  (unseal_pred-1 nil 3566305731 ("" (grind))
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unseal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil))
   shostak))
 (unseal_prev_post 0
  (unseal_prev_post-1 nil 3566305732 ("" (grind))
   ((tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" key
     nil)
    (tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (unseal? const-decl "bool" tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil))
   shostak))
 (unBind_post_TCC1 0
  (unBind_post_TCC1-1 nil 3566305565 ("" (subtype-tcc) nil nil)
   ((tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (unBind? const-decl "bool" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (unBind_post 0
  (unBind_post-1 nil 3566305732 ("" (grind))
   ((tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unBind? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil))
   shostak))
 (unBind_pred_test_TCC1 0
  (unBind_pred_test_TCC1-1 nil 3566305566 ("" (subtype-tcc) nil nil)
   ((tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (unBind? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (unBind_pred_test 0
  (unBind_pred_test-1 nil 3566305732 ("" (grind))
   ((tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unBind? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil))
   shostak))
 (unBind_prev_post 0
  (unBind_prev_post-1 nil 3566305733 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (unBind? const-decl "bool" tpm nil))
   shostak))
 (create_wrap_key_post 0
  (create_wrap_key_post-1 nil 3566305733 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil))
   shostak))
 (create_wrap_key_pred_test 0
  (create_wrap_key_pred_test-1 nil 3566305734 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil))
   shostak))
 (load_key_post 0
  (load_key_post-1 nil 3566305734 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil))
   shostak))
 (load_key_pred_test 0
  (load_key_pred_test-1 nil 3566316325 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (loadKey2? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (load_key_post2 0
  (load_key_post2-1 nil 3566316512 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (add const-decl "(nonempty?)" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (loadKey2? const-decl "bool" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (member const-decl "bool" sets nil))
   shostak))
 (load_key_prev_post 0
  (load_key_prev_post-1 nil 3566316373 ("" (grind) nil nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (updateLoc const-decl "mem" memory nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (member const-decl "bool" sets nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (loadKey2? const-decl "bool" tpm nil))
   shostak))
 (create_mig_blob_post 0
  (create_mig_blob_post-1 nil 3566305734 ("" (grind))
   ((tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil))
   shostak))
 (create_mig_blob_pred_test 0
  (create_mig_blob_pred_test-1 nil 3566305735 ("" (grind))
   ((tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil))
   shostak))
 (authorize_migration_key_post 0
  (authorize_migration_key_post-1 nil 3566305735 ("" (grind))
   ((tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil))
   shostak))
 (migrate_key_post 0
  (migrate_key_post-1 nil 3566305736 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_MigrateKey const-decl "State" tpm nil))
   shostak))
 (sign_post 0
  (sign_post-1 nil 3566305736 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (sign const-decl "tpmData" key nil)
    (signOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Sign const-decl "State" tpm nil))
   shostak))
 (sign_pred_test 0
  (sign_pred_test-1 nil 3566305737 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (sign const-decl "tpmData" key nil)
    (signOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Sign const-decl "State" tpm nil)
    (sign? const-decl "bool" tpm nil))
   shostak))
 (create_endorsement_key_pair_post 0
  (create_endorsement_key_pair_post-1 nil 3566305737 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (badkey const-decl "KVAL" key nil)
    (goodkey? const-decl "bool" key nil)
    (inverse const-decl "KVAL" key nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createEndorsementKeyPairOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateEndorsementKeyPair const-decl "State" tpm nil))
   shostak))
 (create_revocable_ek_post 0
  (create_revocable_ek_post-1 nil 3566305737 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (badkey const-decl "KVAL" key nil)
    (goodkey? const-decl "bool" key nil)
    (inverse const-decl "KVAL" key nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createRevEKOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateRevocableEK const-decl "State" tpm nil))
   shostak))
 (revoke_trust_post 0
  (revoke_trust_post-1 nil 3566305738 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (badkey const-decl "KVAL" key nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (revokeTrustOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_RevokeTrust const-decl "State" tpm nil))
   shostak))
 (revoke_trust_pred_test 0
  (revoke_trust_pred_test-1 nil 3566305738 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (badkey const-decl "KVAL" key nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (revokeTrustOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_RevokeTrust const-decl "State" tpm nil)
    (revokeTrust? const-decl "bool" tpm nil))
   shostak))
 (read_pub_ek_post 0
  (read_pub_ek_post-1 nil 3566305738 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (badkey const-decl "KVAL" key nil)
    (goodkey? const-decl "bool" key nil)
    (publicKey const-decl "(tpmKey?)" key nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ReadPubek const-decl "State" tpm nil))
   shostak))
 (make_identity_post 0
  (make_identity_post-1 nil 3566305738 ("" (grind))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setDigestAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil))
   shostak))
 (make_identity_pred_test 0
  (make_identity_pred_test-1 nil 3566305738 ("" (grind))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setDigestAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil))
   shostak))
 (activate_identity_post 0
  (activate_identity_post-1 nil 3566305739 ("" (grind))
   ((activateIdentityBlob? const-decl "bool" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil))
   shostak))
 (cert_activate_TCC1 0
  (cert_activate_TCC1-1 nil 3566305566 ("" (subtype-tcc) nil nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (activateIdentityBlob? const-decl "bool" key nil))
   shostak))
 (cert_activate_TCC2 0
  (cert_activate_TCC2-1 nil 3566305566 ("" (subtype-tcc) nil nil)
   ((tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "KVAL" key nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (cert_activate_TCC3 0
  (cert_activate_TCC3-1 nil 3566305567
   ("" (subtype-tcc)
    (("1" (postpone) nil nil) ("2" (postpone) nil nil)
     ("3" (postpone) nil nil) ("4" (postpone) nil nil)
     ("5" (postpone) nil nil) ("6" (postpone) nil nil)
     ("7" (postpone) nil nil) ("8" (postpone) nil nil)
     ("9" (postpone) nil nil) ("10" (postpone) nil nil)
     ("11" (postpone) nil nil) ("12" (postpone) nil nil))
    nil)
   ((tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (cert_activate 0
  (cert_activate-1 nil 3566305740 ("" (grind) nil nil)
   ((tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (private const-decl "KVAL" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil))
   shostak))
 (make_and_activate_identity_TCC1 0
  (make_and_activate_identity_TCC1-1 nil 3566305572
   ("" (subtype-tcc) nil nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (activateIdentityBlob? const-decl "bool" key nil))
   shostak))
 (make_and_activate_identity 0
  (make_and_activate_identity-1 nil 3566305741 ("" (grind))
   ((afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setDigestAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (CA_certify const-decl "State" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (updateLoc const-decl "mem" memory nil))
   shostak))
 (extend_post 0
  (extend_post-1 nil 3566305745 ("" (grind))
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil))
   shostak))
 (antisymmetryMonad 0
  (antisymmetryMonad-1 nil 3566305746
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((resetOne adt-constructor-decl "(resetOne?)" pcr nil)
    (resetOne? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (PCR_ATTRIBUTE type-eq-decl nil pcr nil)
    (LOCALITY_SELECTION type-eq-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pcrsReset const-decl "PCRVALUES" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (initKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkKeyVal const-decl "K" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (modify const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (antisymmetryMonad2 0
  (antisymmetryMonad2-1 nil 3566305746
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((resetOne adt-constructor-decl "(resetOne?)" pcr nil)
    (resetOne? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (PCR_ATTRIBUTE type-eq-decl nil pcr nil)
    (LOCALITY_SELECTION type-eq-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pcrsReset const-decl "PCRVALUES" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (initKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkKeyVal const-decl "K" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (antisymmetryMonad3 0
  (antisymmetryMonad3-1 nil 3566305746
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((resetOne adt-constructor-decl "(resetOne?)" pcr nil)
    (resetOne? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (PCR_ATTRIBUTE type-eq-decl nil pcr nil)
    (LOCALITY_SELECTION type-eq-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pcrsReset const-decl "PCRVALUES" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (initKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkKeyVal const-decl "K" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (pcr_read_post 0
  (pcr_read_post-1 nil 3566305746 ("" (grind))
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (pcrReadOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_PcrRead const-decl "State" tpm nil))
   shostak))
 (bad_nonce 0
  (bad_nonce-1 nil 3566305747 ("" (grind))
   ((afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil))
   shostak))
 (bad_signing_key 0
  (bad_signing_key-1 nil 3566305747
   ("" (grind)
    (("" (decompose-equality)
      (("" (decompose-equality) (("" (decompose-equality) nil nil))
        nil))
      nil))
    nil)
   ((IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (PCR type-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> list[PCR]]" tpm nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Quote adt-constructor-decl
     "[[list[PCR], (tpmQuote?), ReturnCode] -> (OUT_Quote?)]" tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" key
     nil)
    (CRYPTOSTATUS type-decl nil key nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?), CRYPTOSTATUS] -> (tpmQuote?)]"
     key nil)
    (PCR_COMPOSITE type-eq-decl nil pcr nil)
    (tpmCompositeHash adt-constructor-decl
     "[PCR_COMPOSITE -> (tpmCompositeHash?)]" key nil)
    (KVAL type-eq-decl nil key nil)
    (signed? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" key nil)
    (signed adt-constructor-decl "[[KVAL, CRYPTOSTATUS] -> (signed?)]"
     key nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (key adt-accessor-decl "[(tpmKey?) -> KVAL]" key nil)
    (clear? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" key nil)
    (clear adt-constructor-decl "(clear?)" key nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (TRUE const-decl "bool" booleans nil)
    (sig adt-accessor-decl
         "[d: {x: tpmAbsOutput | OUT_Sign?(x) OR OUT_Quote?(x)} ->
   {x: tpmData[B, HV] | IF OUT_Sign?(d) THEN TRUE ELSE tpmQuote?(x) ENDIF}]"
         tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_SaveState?(x)
           OR OUT_Startup?(x) OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_Seal?(x) OR OUT_Unseal?(x)
           OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_Sign?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_MakeIdentity?(x)
           OR OUT_ActivateIdentity?(x) OR OUT_Extend?(x) OR OUT_PCRRead?(x)
           OR OUT_Quote?(x)} ->
   ReturnCode]" tpm nil)
    (crstat shared-adt-accessor-decl
     "[{x: CRYPTOSTATUS | encrypted?(x) OR signed?(x) OR sealed?(x)} ->
   CRYPTOSTATUS]" key nil)
    (key shared-adt-accessor-decl
     "[{x: CRYPTOSTATUS | encrypted?(x) OR signed?(x) OR sealed?(x)} -> KVAL]"
     key nil)
    (sealed? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" key nil)
    (encrypted? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" key
     nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (digest shared-adt-accessor-decl "[d:
   {x: tpmData | tpmMigKeyAuth?(x) OR tpmQuote?(x) OR tpmIdContents?(x)} ->
   {x: tpmData |
            IF tpmMigKeyAuth?(d) OR tpmIdContents?(d) THEN tpmDigest?(x)
            ELSE tpmCompositeHash?(x)
            ENDIF}]" key nil)
    (tpmQuote2? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (externalData shared-adt-accessor-decl
     "[{x: tpmData | tpmQuote?(x) OR tpmQuote2?(x)} -> (tpmNonce?)]"
     key nil)
    (tpmID? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" key
     nil)
    (tpmEKBlob? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmAsymCAContents? adt-recognizer-decl "[tpmData -> boolean]" key
     nil)
    (crs shared-adt-accessor-decl "[{x: tpmData |
              tpmID?(x) OR tpmDigest?(x) OR tpmAuthData?(x)
           OR tpmMigKeyAuth?(x) OR tpmStoredData?(x) OR tpmSessKey?(x)
           OR tpmBoundData?(x) OR tpmKey?(x) OR tpmStoreAsymkey?(x)
           OR tpmQuote?(x) OR tpmQuote2?(x) OR tpmEKBlob?(x)
           OR tpmIdContents?(x) OR tpmAsymCAContents?(x)} ->
   CRYPTOSTATUS]" key nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (TPM_Quote const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "KVAL" key nil)
    (inverse const-decl "KVAL" key nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (check_PCRS 0
  (check_PCRS-1 nil 3566306182 ("" (grind) nil nil)
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (quote_post 0
  (quote_post-1 nil 3566305747 ("" (grind) nil nil)
   ((PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil))
   shostak))
 (quote_with_prev_key 0
  (quote_with_prev_key-1 nil 3566306408 ("" (grind) nil nil)
   ((PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (updateLoc const-decl "mem" memory nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil))
   shostak))
 (monotonic_locality 0
  (monotonic_locality-1 nil 3566305747 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (member const-decl "bool" sets nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (pcrs_unchanged 0
  (pcrs_unchanged-1 nil 3566305748 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (srk_unchanged 0
  (srk_unchanged-1 nil 3566305748 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (ek_unchanged 0
  (ek_unchanged-1 nil 3566305749 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (keys_unchanged 0
  (keys_unchanged-1 nil 3566305750 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (postInit_unchanged 0
  (postInit_unchanged-1 nil 3566305750 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (member const-decl "bool" sets nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (disableForceClear_unchanged 0
  (disableForceClear_unchanged-1 nil 3566305751 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (member const-decl "bool" sets nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (restore_unchanged 0
  (restore_unchanged-1 nil 3566305751 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (memory_unchanged 0
  (memory_unchanged-1 nil 3566305752 ("" (grind))
   ((changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (permFlags_unchanged 0
  (permFlags_unchanged-1 nil 3566305752 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (permData_unchanged 0
  (permData_unchanged-1 nil 3566305753 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (keyGenCnt_unchanged 0
  (keyGenCnt_unchanged-1 nil 3566305753 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" key nil)
    (badkey const-decl "KVAL" key nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (no_senter 0
  (no_senter-1 nil 3566305754 ("" (grind))
   ((srkKeyVal const-decl "K" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" key nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (pcrsReset const-decl "PCRVALUES" pcr nil)
    (CPU_sinit const-decl "State" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (private const-decl "KVAL" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil))
   shostak))
 (cert_and_quote_with_prev_key 0
  (cert_and_quote_with_prev_key-1 nil 3566306847 ("" (grind) nil nil)
   ((afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setDigestAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" key nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (CA_certify const-decl "State" tpm nil)
    (readOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (CPU_read const-decl "State" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (>> const-decl "State" StateMonad nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" tpm nil)
    (CPU_BuildQuoteFromMem const-decl "State" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil))
   shostak)))

