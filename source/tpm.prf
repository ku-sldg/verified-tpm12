(tpm
 (unique_error 0
  (unique_error-1 nil 3567442423
   ("" (grind) (("" (decompose-equality) nil nil)) nil)
   ((ReturnCode type-decl nil ReturnCodes nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (OUT_Error adt-constructor-decl "[ReturnCode -> (OUT_Error?)]" tpm
     nil))
   shostak))
 (sigQuote 0 (sigQuote-1 nil 3588351385 ("" (grind)) nil shostak))
 (tpmDefault_TCC1 0
  (tpmDefault_TCC1-1 nil 3588337277 ("" (tcc))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (tpmPostInit_TCC1 0
  (tpmPostInit_TCC1-1 nil 3588337277 ("" (tcc))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (tpmStartup_TCC1 0
  (tpmStartup_TCC1-1 nil 3588337277 ("" (tcc))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil))
   nil))
 (tpmRestore_TCC1 0
  (tpmRestore_TCC1-1 nil 3588337277 ("" (tcc))
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekKeyVal const-decl "K" tpm nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (wellFormed? const-decl "bool" tpm nil))
   nil))
 (changeLocalityState_TCC1 0
  (changeLocalityState_TCC1-1 nil 3588337277 ("" (tcc))
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (gen_key_state 0
  (gen_key_state-1 nil 3588606930 ("" (grind) nil nil)
   ((genKeyState const-decl "tpmAbsState" tpm nil)) shostak))
 (rand_state 0
  (rand_state-1 nil 3588607080 ("" (grind) nil nil)
   ((randState const-decl "tpmAbsState" tpm nil)) shostak))
 (takeOwnershipState_TCC1 0
  (takeOwnershipState_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (takeOwnershipState_TCC2 0
  (takeOwnershipState_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (takeOwnershipState_TCC3 0
  (takeOwnershipState_TCC3-1 nil 3590256780 ("" (tcc))
   ((/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (takeOwnershipState_TCC4 0
  (takeOwnershipState_TCC4-1 nil 3590256780 ("" (subtype-tcc) nil nil)
   nil shostak))
 (takeOwnershipState_TCC5 0
  (takeOwnershipState_TCC5-1 nil 3590256780 ("" (tcc))
   ((/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (takeOwnershipOut_TCC1 0
  (takeOwnershipOut_TCC1-1 nil 3588337277 ("" (subtype-tcc) nil nil)
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmAuthData? const-decl "bool" data nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (checkEncrypt? const-decl "bool" key nil)
    (encrypt const-decl "tpmData" key nil))
   shostak))
 (sealState_TCC1 0
  (sealState_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (sealOut_TCC1 0
  (sealOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (seal? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (sealOut_TCC2 0
  (sealOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unsealState_TCC1 0
  (unsealState_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil))
   nil))
 (unsealOut_TCC1 0
  (unsealOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (unsealOut_TCC2 0
  (unsealOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBindOut_TCC1 0
  (unBindOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (unBindOut_TCC2 0
  (unBindOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBindOut_TCC3 0
  (unBindOut_TCC3-1 nil 3590256780 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createWrapKeyState_TCC1 0
  (createWrapKeyState_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (createWrapKeyState_TCC2 0
  (createWrapKeyState_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil))
   nil))
 (createWrapKeyState_TCC3 0
  (createWrapKeyState_TCC3-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (createWrapKeyOut_TCC1 0
  (createWrapKeyOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (createWrapKeyOut_TCC2 0
  (createWrapKeyOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (validateLoadKey2_TCC1 0
  (validateLoadKey2_TCC1-1 nil 3590256780 ("" (subtype-tcc) nil nil)
   nil shostak))
 (validateLoadKey2_TCC2 0
  (validateLoadKey2_TCC2-1 nil 3590256780 ("" (subtype-tcc) nil nil)
   nil shostak))
 (getPubKeyOut_TCC1 0
  (getPubKeyOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (/= const-decl "boolean" notequal nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (getPubKeyOut_TCC2 0
  (getPubKeyOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createMigBlobState_TCC1 0
  (createMigBlobState_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil))
   nil))
 (createMigBlobOut_TCC1 0
  (createMigBlobOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createMigBlobOut_TCC2 0
  (createMigBlobOut_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (key adt-accessor-decl "[(tpmMigKeyAuth?) -> (tpmKey?)]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (createMigBlobOut_TCC3 0
  (createMigBlobOut_TCC3-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createMigBlobOut_TCC4 0
  (createMigBlobOut_TCC4-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil))
   nil))
 (createMigBlobOut_TCC5 0
  (createMigBlobOut_TCC5-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (createMigBlobOut_TCC6 0
  (createMigBlobOut_TCC6-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (convertMigBlob?_TCC1 0
  (convertMigBlob?_TCC1-1 nil 3590798567 ("" (subtype-tcc) nil nil) nil
   shostak))
 (convertMigBlobState_TCC1 0
  (convertMigBlobState_TCC1-1 nil 3588337277 ("" (tcc))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (convertMigBlob? const-decl "bool" tpm nil))
   nil))
 (convertMigBlobOut_TCC1 0
  (convertMigBlobOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (migrateKeyOut_TCC1 0
  (migrateKeyOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (migrateKeyOut_TCC2 0
  (migrateKeyOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (CMKCreateKeyState_TCC1 0
  (CMKCreateKeyState_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil))
   nil))
 (CMKCreateKeyState_TCC2 0
  (CMKCreateKeyState_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKCreateKeyOut_TCC1 0
  (CMKCreateKeyOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKCreateKeyOut_TCC2 0
  (CMKCreateKeyOut_TCC2-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil))
   nil))
 (CMKCreateKeyOut_TCC3 0
  (CMKCreateKeyOut_TCC3-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKCreateKeyOut_TCC4 0
  (CMKCreateKeyOut_TCC4-1 nil 3588337277 ("" (tcc))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (CMKCreateBlob?_TCC1 0
  (CMKCreateBlob?_TCC1-1 nil 3590787245 ("" (subtype-tcc) nil nil) nil
   shostak))
 (CMKCreateBlobOut2_TCC1 0
  (CMKCreateBlobOut2_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (CMKCreateBlobOut2_TCC2 0
  (CMKCreateBlobOut2_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKCreateBlobState_TCC1 0
  (CMKCreateBlobState_TCC1-1 nil 3588440968 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (CMKCreateBlob? const-decl "bool" tpm nil))
   nil))
 (CMKConvertMigration?_TCC1 0
  (CMKConvertMigration?_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKConvertMigration?_TCC2 0
  (CMKConvertMigration?_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (CMKConvertMigration?_TCC3 0
  (CMKConvertMigration?_TCC3-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (CMKConvertMigration?_TCC4 0
  (CMKConvertMigration?_TCC4-1 nil 3590858636
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil))
   nil))
 (CMKConvertMigrationState_TCC1 0
  (CMKConvertMigrationState_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKConvertMigrationState_TCC2 0
  (CMKConvertMigrationState_TCC2-1 nil 3590781024 ("" (tcc))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (unXOR const-decl "tpmData" data nil))
   nil))
 (CMKConvertMigrationOut_TCC1 0
  (CMKConvertMigrationOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKConvertMigrationOut_TCC2 0
  (CMKConvertMigrationOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (CMKConvertMigrationOut_TCC3 0
  (CMKConvertMigrationOut_TCC3-1 nil 3588337277 ("" (tcc))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (CMKConvertMigrationOut_TCC4 0
  (CMKConvertMigrationOut_TCC4-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatMigrateAsymkey)
      (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil))
   nil))
 (CMKConvertMigrationOut_TCC5 0
  (CMKConvertMigrationOut_TCC5-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil))
   nil))
 (CMKConvertMigrationOut_TCC6 0
  (CMKConvertMigrationOut_TCC6-1 nil 3590858636
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (certifyKeyOut2_TCC1 0
  (certifyKeyOut2_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (certifyKeyOut2_TCC2 0
  (certifyKeyOut2_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (certifyKeyOut2_TCC3 0
  (certifyKeyOut2_TCC3-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (skosimp)
        (("" (lemma keyEncDatStoreAsymkey)
          (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   shostak))
 (certifyKeyOut2_TCC4 0
  (certifyKeyOut2_TCC4-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (certifyKeyOut2_TCC5 0
  (certifyKeyOut2_TCC5-1 nil 3588337277 ("" (tcc)) nil nil))
 (certifyKeyState_TCC1 0
  (certifyKeyState_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (certifyKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil))
   nil))
 (createRevEKState_TCC1 0
  (createRevEKState_TCC1-1 nil 3588426787 ("" (tcc))
   ((badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (createEKPairState const-decl "tpmAbsState" tpm nil)
    (createEKPairOut const-decl "tpmAbsOutput" tpm nil))
   nil))
 (createRevEKOut_TCC1 0
  (createRevEKOut_TCC1-1 nil 3588426787 ("" (tcc))
   ((badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (createEKPairOut const-decl "tpmAbsOutput" tpm nil))
   nil))
 (makeIdentityState_TCC1 0
  (makeIdentityState_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil))
   nil))
 (makeIdentityState_TCC2 0
  (makeIdentityState_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (makeIdentityOut_TCC1 0
  (makeIdentityOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (makeIdentityOut_TCC2 0
  (makeIdentityOut_TCC2-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil))
   nil))
 (makeIdentityOut_TCC3 0
  (makeIdentityOut_TCC3-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (makeIdentityOut_TCC4 0
  (makeIdentityOut_TCC4-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil))
   nil))
 (makeIdentityOut_TCC5 0
  (makeIdentityOut_TCC5-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activateIdentityState_TCC1 0
  (activateIdentityState_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (activateIdentityOut_TCC1 0
  (activateIdentityOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (/= const-decl "boolean" notequal nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activateIdentityOut_TCC2 0
  (activateIdentityOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activateIdentityOut_TCC3 0
  (activateIdentityOut_TCC3-1 nil 3591455030 ("" (subtype-tcc) nil nil)
   nil nil))
 (activateIdentityOut_TCC4 0
  (activateIdentityOut_TCC4-1 nil 3591455030 ("" (subtype-tcc) nil nil)
   nil nil))
 (quoteOut_TCC1 0
  (quoteOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (quote? const-decl "bool" tpm nil)
    (sign const-decl "tpmData" key nil))
   nil))
 (quoteOut_TCC2 0
  (quoteOut_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (quote? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (quoteOut_TCC3 0
  (quoteOut_TCC3-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (quote? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (validatePCRVals_TCC1 0
  (validatePCRVals_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<< adt-def-decl "(well_founded?[list])" list_adt nil)
    (member const-decl "bool" sets nil))
   nil))
 (validatePCRs 0
  (validatePCRs-1 nil 3588350828
   ("" (induct select)
    (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (grind) nil nil))
    nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (member const-decl "bool" sets nil)
    (list_induction formula-decl nil list_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (validatePCRVals def-decl "nat" tpm nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil))
   shostak))
 (check_validatePcrs_TCC1 0
  (check_validatePcrs_TCC1-1 nil 3588337277 ("" (tcc))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (list2set def-decl "set[T]" list2set nil)
    (every adt-def-decl "boolean" list_adt nil))
   nil))
 (check_validatePcrs 0
  (check_validatePcrs-1 nil 3588350816 ("" (grind) nil nil)
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (list2set def-decl "set[T]" list2set nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (add const-decl "(nonempty?)" sets nil)
    (restrict const-decl "R" restrict nil)
    (member const-decl "bool" sets nil)
    (emptyset const-decl "set" sets nil)
    (validatePCRVals def-decl "nat" tpm nil))
   shostak))
 (changeAuthState_TCC1 0
  (changeAuthState_TCC1-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil))
   nil))
 (changeAuthOut_TCC1 0
  (changeAuthOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (changeAuthOut2 const-decl "(tpmSecret?)" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (changeAuthOut_TCC2 0
  (changeAuthOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (changeAuthOut_TCC3 0
  (changeAuthOut_TCC3-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (changeAuthOut2 const-decl "(tpmSecret?)" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (changeAuthOut_TCC4 0
  (changeAuthOut_TCC4-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (dataBindOut_TCC1 0
  (dataBindOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (buildQuoteFromMemState_TCC1 0
  (buildQuoteFromMemState_TCC1-1 nil 3588355313 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil))
   nil))
 (buildQuoteFromMemState_TCC2 0
  (buildQuoteFromMemState_TCC2-1 nil 3588355313 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil))
   nil))
 (buildQuoteFromMemOut_TCC1 0
  (buildQuoteFromMemOut_TCC1-1 nil 3588355313
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil))
   shostak))
 (certify?_TCC1 0
  (certify?_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil))
   nil))
 (certOut_TCC1 0
  (certOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil))
   nil))
 (certOut_TCC2 0
  (certOut_TCC2-1 nil 3589642387 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil))
   nil))
 (certOut_TCC3 0
  (certOut_TCC3-1 nil 3589642387 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil))
   nil))
 (certOut_TCC4 0
  (certOut_TCC4-1 nil 3589642387 ("" (tcc))
   ((inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (initSessKeyVal const-decl "K" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (executeCom_TCC1 0
  (executeCom_TCC1-1 nil 3588337277 ("" (tcc))
   ((afterInit? const-decl "bool" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   nil))
 (gen_quote_TCC1 0
  (gen_quote_TCC1-1 nil 3588337277
   ("" (lemma sigQuote) (("" (grind) nil nil)) nil)
   ((CPU_BuildQuoteFromMem const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (buildQuoteFromMemOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (buildQuoteFromMemState const-decl "tpmAbsState" tpm nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigQuote formula-decl nil tpm nil))
   nil))
 (gen_quote 0
  (gen_quote-1 nil 3588351386
   ("" (lemma sigQuote) (("" (grind) nil nil)) nil)
   ((CPU_BuildQuoteFromMem const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (buildQuoteFromMemOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (buildQuoteFromMemState const-decl "tpmAbsState" tpm nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (state!1 skolem-const-decl "(afterStartup?)" tpm nil)
    (x!1 skolem-const-decl "nat" tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigQuote formula-decl nil tpm nil))
   shostak))
 (gen_cert_TCC1 0
  (gen_cert_TCC1-1 nil 3595080246 ("" (subtype-tcc) nil nil)
   ((signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil))
   nil))
 (gen_cert_TCC2 0
  (gen_cert_TCC2-1 nil 3595080246 ("" (subtype-tcc) nil nil)
   ((signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil))
   nil))
 (gen_cert_TCC3 0
  (gen_cert_TCC3-1 nil 3595080246 ("" (subtype-tcc) nil nil)
   ((signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (initSessKeyVal const-decl "K" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil))
   nil))
 (gen_cert 0
  (gen_cert-1 nil 3588351386 ("" (grind) nil nil)
   ((signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (initSessKeyVal const-decl "K" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil))
   shostak))
 (init_post 0
  (init_post-1 nil 3588351387 ("" (grind))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil))
   shostak))
 (startup_post 0
  (startup_post-1 nil 3588351388 ("" (grind))
   ((deactivateState const-decl "tpmAbsState" tpm nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (restoreState const-decl "tpmAbsState" tpm nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (private const-decl "privKVAL" key nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (initKeyVal const-decl "K" tpm nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil))
   shostak))
 (startup_after_init 0
  (startup_after_init-1 nil 3588351389 ("" (grind))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (resetMonad 0
  (resetMonad-1 nil 3588351391 ("" (grind))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (add const-decl "(nonempty?)" sets nil)
    (restrict const-decl "R" restrict nil)
    (CPU_sinit const-decl "State" tpm nil)
    (finite_restrict application-judgement "finite_set[S]"
     restrict_set_props nil))
   shostak))
 (save_state_post 0
  (save_state_post-1 nil 3588351392 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_SaveState const-decl "State" tpm nil))
   shostak))
 (set_owner_install_post 0
  (set_owner_install_post-1 nil 3588351393 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (invalidAuth? const-decl "bool" data nil)
    (setOwnerInstallState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setOwnerInstallOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_SetOwnerInstall const-decl "State" tpm nil))
   shostak))
 (owner_set_disable_post 0
  (owner_set_disable_post-1 nil 3588351394 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (ownerSetDisableState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerSetDisableOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerSetDisable const-decl "State" tpm nil))
   shostak))
 (physical_enable_post 0
  (physical_enable_post-1 nil 3588351395 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (physicalEnableState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalEnableOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PhysicalEnable const-decl "State" tpm nil))
   shostak))
 (physical_disable_post 0
  (physical_disable_post-1 nil 3588351396 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (physicalDisableState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalDisableOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PhysicalDisable const-decl "State" tpm nil))
   shostak))
 (physical_set_deactivated_post 0
  (physical_set_deactivated_post-1 nil 3588351397 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (physicalSetDeactivatedState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalSetDeactivatedOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PhysicalSetDeactivated const-decl "State" tpm nil))
   shostak))
 (set_temp_deactivated_post 0
  (set_temp_deactivated_post-1 nil 3588351398 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (setTempDeactivatedState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setTempDeactivatedOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_SetTempDeactivated const-decl "State" tpm nil))
   shostak))
 (set_operator_auth_post 0
  (set_operator_auth_post-1 nil 3588351399 ("" (grind))
   ((tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (setOperatorAuthState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setOperatorAuthOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_SetOperatorAuth const-decl "State" tpm nil))
   shostak))
 (take_ownership_post_TCC1 0
  (take_ownership_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_TakeOwnership const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (take_ownership_post_TCC2 0
  (take_ownership_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_TakeOwnership const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (take_ownership_post_TCC3 0
  (take_ownership_post_TCC3-1 nil 3590853068 ("" (tcc))
   ((/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil))
   nil))
 (take_ownership_post_TCC4 0
  (take_ownership_post_TCC4-1 nil 3590853068 ("" (subtype-tcc) nil nil)
   nil shostak))
 (take_ownership_post_TCC5 0
  (take_ownership_post_TCC5-1 nil 3590853068 ("" (subtype-tcc) nil nil)
   nil shostak))
 (take_ownership_post_TCC6 0
  (take_ownership_post_TCC6-1 nil 3590853068 ("" (tcc))
   ((/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil))
   nil))
 (take_ownership_post 0
  (take_ownership_post-1 nil 3588351401 ("" (grind) nil nil)
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil))
   shostak))
 (take_ownership_post2 0
  (take_ownership_post2-1 nil 3588351404
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil)
     ("6" (lemma unique_error) (("6" (grind) nil nil)) nil)
     ("7" (lemma unique_error) (("7" (grind) nil nil)) nil)
     ("8" (lemma unique_error) (("8" (grind) nil nil)) nil)
     ("9" (lemma unique_error) (("9" (grind) nil nil)) nil))
    nil)
   ((TPM_OWNER_SET adt-constructor-decl "(TPM_OWNER_SET?)" ReturnCodes
     nil)
    (TPM_OWNER_SET? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INSTALL_DISABLED adt-constructor-decl
     "(TPM_INSTALL_DISABLED?)" ReturnCodes nil)
    (TPM_INSTALL_DISABLED? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT adt-constructor-decl "(TPM_NO_ENDORSEMENT?)"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_TakeOwnership const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (owner_clear_post_TCC1 0
  (owner_clear_post_TCC1-1 nil 3588337277 ("" (tcc))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerClear const-decl "State" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   shostak))
 (owner_clear_post 0
  (owner_clear_post-1 nil 3588351406 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerClear const-decl "State" tpm nil)
    (clear_post const-decl "bool" tpm nil))
   shostak))
 (force_clear_post_TCC1 0
  (force_clear_post_TCC1-1 nil 3588337277 ("" (tcc))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (forceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ForceClear const-decl "State" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   shostak))
 (force_clear_post 0
  (force_clear_post-1 nil 3588351407 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (forceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ForceClear const-decl "State" tpm nil)
    (clear_post const-decl "bool" tpm nil))
   shostak))
 (disable_owner_clear_post 0
  (disable_owner_clear_post-1 nil 3588351408 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableOwnerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableOwnerClear const-decl "State" tpm nil))
   shostak))
 (disable_force_clear_post 0
  (disable_force_clear_post-1 nil 3588351409 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableForceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableForceClear const-decl "State" tpm nil))
   shostak))
 (physical_presence_post 0
  (physical_presence_post-1 nil 3588351410 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (member const-decl "bool" sets nil)
    (physicalPresenceState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalPresenceOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TSC_PhysicalPresence const-decl "State" tpm nil))
   shostak))
 (reset_establishment_post 0
  (reset_establishment_post-1 nil 3588351412 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (resetEstablishment? const-decl "bool" tpm nil)
    (resetEstablishmentBitState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (resetEstablishmentBitOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TSC_ResetEstablishmentBit const-decl "State" tpm nil))
   shostak))
 (seal_post_TCC1 0
  (seal_post_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (seal? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (seal_post_TCC2 0
  (seal_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_Seal const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (seal? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (seal_post 0
  (seal_post-1 nil 3588351413 ("" (grind))
   ((tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil))
   shostak))
 (unseal_post_TCC1 0
  (unseal_post_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (unseal_post_TCC2 0
  (unseal_post_TCC2-1 nil 3591464798 ("" (subtype-tcc) nil nil)
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (unseal? const-decl "bool" tpm nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (unseal_post 0
  (unseal_post-1 nil 3588351414 ("" (grind))
   ((minus_int_is_int application-judgement "int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil))
   shostak))
 (unseal_prev_post_TCC1 0
  (unseal_prev_post_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (updateLoc const-decl "mem" memory nil)
    (seal? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (unsealState const-decl "tpmAbsState" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil))
   nil))
 (unseal_prev_post_TCC2 0
  (unseal_prev_post_TCC2-1 nil 3591464798 ("" (subtype-tcc) nil nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmAuthData? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (unseal? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil))
   nil))
 (unseal_prev_post 0
  (unseal_prev_post-1 nil 3588351419
   ("" (grind)
    (("1" (lemma pubInversePriv)
      (("1" (grind)
        (("1" (lemma pubInversePriv)
          (("1" (inst -1 j!1) (("1" (grind) nil nil)) nil)) nil))
        nil))
      nil)
     ("2" (lemma pubInversePriv)
      (("2" (grind)
        (("2" (lemma pubInversePriv)
          (("2" (inst -1 j!1) (("2" (grind) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((pubInversePriv formula-decl nil data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (updateLoc const-decl "mem" memory nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (unsealState const-decl "tpmAbsState" tpm nil)
    (unseal? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (TPM_Seal const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (seal? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (unBind_post_TCC1 0
  (unBind_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (unBindState const-decl "tpmAbsState" tpm nil)
    (unBind? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (unBind_post_TCC2 0
  (unBind_post_TCC2-1 nil 3588337277 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (unBindState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBind_post_TCC3 0
  (unBind_post_TCC3-1 nil 3590838464 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (unBindState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBind_post 0
  (unBind_post-1 nil 3588351423 ("" (grind) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (unBindState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil))
   shostak))
 (data_bind_post_TCC1 0
  (data_bind_post_TCC1-1 nil 3595080246 ("" (subtype-tcc) nil nil)
   ((afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (data_bind_post 0
  (data_bind_post-1 nil 3588351425 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil))
   shostak))
 (unBind_prev_post_TCC1 0
  (unBind_prev_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (unBind_prev_post_TCC2 0
  (unBind_prev_post_TCC2-1 nil 3588337277 ("" (tcc))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (unBindState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBind_prev_post 0
  (unBind_prev_post-1 nil 3588351426
   ("" (grind)
    (("1" (lemma pubInversePriv) (("1" (grind) nil nil)) nil)
     ("2" (lemma pubInversePriv) (("2" (grind) nil nil)) nil)
     ("3" (lemma pubInversePriv) (("3" (grind) nil nil)) nil)
     ("4" (lemma pubInversePriv) (("4" (grind) nil nil)) nil)
     ("5" (lemma pubInversePriv) (("5" (grind) nil nil)) nil)
     ("6" (lemma pubInversePriv) (("6" (grind) nil nil)) nil)
     ("7" (lemma pubInversePriv) (("7" (grind) nil nil)) nil)
     ("8" (lemma pubInversePriv) (("8" (grind) nil nil)) nil))
    nil)
   ((pubInversePriv formula-decl nil data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (unBindState const-decl "tpmAbsState" tpm nil)
    (unBind? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (inverse const-decl "integer" keydata nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (/= const-decl "boolean" notequal nil)
    (>>= const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (create_wrap_key_post_TCC1 0
  (create_wrap_key_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (create_wrap_key_post_TCC2 0
  (create_wrap_key_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (create_wrap_key_post_TCC3 0
  (create_wrap_key_post_TCC3-1 nil 3588337277 ("" (tcc))
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil))
   nil))
 (create_wrap_key_post_TCC4 0
  (create_wrap_key_post_TCC4-1 nil 3588337277 ("" (tcc))
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (create_wrap_key_post 0
  (create_wrap_key_post-1 nil 3588351428 ("" (grind))
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil))
   shostak))
 (load_key_post_TCC1 0
  (load_key_post_TCC1-1 nil 3590344165 ("" (subtype-tcc) nil nil) nil
   shostak))
 (load_key_post_TCC2 0
  (load_key_post_TCC2-1 nil 3590344165 ("" (subtype-tcc) nil nil) nil
   shostak))
 (load_key_post 0
  (load_key_post-1 nil 3588351431 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (b2n const-decl "nbit" bit nil)
    (/= const-decl "boolean" notequal nil)
    (validEncScheme const-decl "bool" keydata nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil))
   shostak))
 (load_key_pred_test_TCC1 0
  (load_key_pred_test_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (loadKey2? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (load_key_pred_test 0
  (load_key_pred_test-1 nil 3588351454 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (loadKey2? const-decl "bool" tpm nil)
    (b2n const-decl "nbit" bit nil)
    (validEncScheme const-decl "bool" keydata nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil))
   shostak))
 (load_key_post2 0
  (load_key_post2-1 nil 3588351460
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil)
     ("6" (lemma unique_error) (("6" (grind) nil nil)) nil)
     ("7" (lemma unique_error) (("7" (grind) nil nil)) nil)
     ("8" (lemma unique_error) (("8" (grind) nil nil)) nil)
     ("9" (lemma unique_error) (("9" (grind) nil nil)) nil)
     ("10" (lemma unique_error) (("10" (grind) nil nil)) nil)
     ("11" (lemma unique_error) (("11" (grind) nil nil)) nil)
     ("12" (lemma unique_error) (("12" (grind) nil nil)) nil)
     ("13" (lemma unique_error) (("13" (grind) nil nil)) nil)
     ("14" (lemma unique_error) (("14" (grind) nil nil)) nil)
     ("15" (lemma unique_error) (("15" (grind) nil nil)) nil)
     ("16" (lemma unique_error) (("16" (grind) nil nil)) nil)
     ("17" (lemma unique_error) (("17" (grind) nil nil)) nil)
     ("18" (lemma unique_error) (("18" (grind) nil nil)) nil)
     ("19" (lemma unique_error) (("19" (grind) nil nil)) nil)
     ("20" (lemma unique_error) (("20" (grind) nil nil)) nil)
     ("21" (lemma unique_error) (("21" (grind) nil nil)) nil)
     ("22" (lemma unique_error) (("22" (grind) nil nil)) nil)
     ("23" (lemma unique_error) (("23" (grind) nil nil)) nil)
     ("24" (lemma unique_error) (("24" (grind) nil nil)) nil)
     ("25" (lemma unique_error) (("25" (grind) nil nil)) nil)
     ("26" (lemma unique_error) (("26" (grind) nil nil)) nil)
     ("27" (lemma unique_error) (("27" (grind) nil nil)) nil)
     ("28" (lemma unique_error) (("28" (grind) nil nil)) nil)
     ("29" (lemma unique_error) (("29" (grind) nil nil)) nil)
     ("30" (lemma unique_error) (("30" (grind) nil nil)) nil)
     ("31" (lemma unique_error) (("31" (grind) nil nil)) nil)
     ("32" (lemma unique_error) (("32" (grind) nil nil)) nil)
     ("33" (lemma unique_error) (("33" (grind) nil nil)) nil)
     ("34" (lemma unique_error) (("34" (grind) nil nil)) nil)
     ("35" (lemma unique_error) (("35" (grind) nil nil)) nil)
     ("36" (lemma unique_error) (("36" (grind) nil nil)) nil)
     ("37" (lemma unique_error) (("37" (grind) nil nil)) nil)
     ("38" (lemma unique_error) (("38" (grind) nil nil)) nil)
     ("39" (lemma unique_error) (("39" (grind) nil nil)) nil)
     ("40" (lemma unique_error) (("40" (grind) nil nil)) nil)
     ("41" (lemma unique_error) (("41" (grind) nil nil)) nil)
     ("42" (lemma unique_error) (("42" (grind) nil nil)) nil)
     ("43" (lemma unique_error) (("43" (grind) nil nil)) nil)
     ("44" (lemma unique_error) (("44" (grind) nil nil)) nil)
     ("45" (lemma unique_error) (("45" (grind) nil nil)) nil)
     ("46" (lemma unique_error) (("46" (grind) nil nil)) nil)
     ("47" (lemma unique_error) (("47" (grind) nil nil)) nil)
     ("48" (lemma unique_error) (("48" (grind) nil nil)) nil)
     ("49" (lemma unique_error) (("49" (grind) nil nil)) nil)
     ("50" (lemma unique_error) (("50" (grind) nil nil)) nil)
     ("51" (lemma unique_error) (("51" (grind) nil nil)) nil)
     ("52" (lemma unique_error) (("52" (grind) nil nil)) nil)
     ("53" (lemma unique_error) (("53" (grind) nil nil)) nil)
     ("54" (lemma unique_error) (("54" (grind) nil nil)) nil)
     ("55" (lemma unique_error) (("55" (grind) nil nil)) nil)
     ("56" (lemma unique_error) (("56" (grind) nil nil)) nil)
     ("57" (lemma unique_error) (("57" (grind) nil nil)) nil)
     ("58" (lemma unique_error) (("58" (grind) nil nil)) nil)
     ("59" (lemma unique_error) (("59" (grind) nil nil)) nil)
     ("60" (lemma unique_error) (("60" (grind) nil nil)) nil)
     ("61" (lemma unique_error) (("61" (grind) nil nil)) nil)
     ("62" (lemma unique_error) (("62" (grind) nil nil)) nil)
     ("63" (lemma unique_error) (("63" (grind) nil nil)) nil)
     ("64" (lemma unique_error) (("64" (grind) nil nil)) nil)
     ("65" (lemma unique_error) (("65" (grind) nil nil)) nil)
     ("66" (lemma unique_error) (("66" (grind) nil nil)) nil)
     ("67" (lemma unique_error) (("67" (grind) nil nil)) nil)
     ("68" (lemma unique_error) (("68" (grind) nil nil)) nil)
     ("69" (lemma unique_error) (("69" (grind) nil nil)) nil)
     ("70" (lemma unique_error) (("70" (grind) nil nil)) nil)
     ("71" (lemma unique_error) (("71" (grind) nil nil)) nil)
     ("72" (lemma unique_error) (("72" (grind) nil nil)) nil)
     ("73" (lemma unique_error) (("73" (grind) nil nil)) nil)
     ("74" (lemma unique_error) (("74" (grind) nil nil)) nil)
     ("75" (lemma unique_error) (("75" (grind) nil nil)) nil)
     ("76" (lemma unique_error) (("76" (grind) nil nil)) nil)
     ("77" (lemma unique_error) (("77" (grind) nil nil)) nil)
     ("78" (lemma unique_error) (("78" (grind) nil nil)) nil)
     ("79" (lemma unique_error) (("79" (grind) nil nil)) nil)
     ("80" (lemma unique_error) (("80" (grind) nil nil)) nil)
     ("81" (lemma unique_error) (("81" (grind) nil nil)) nil)
     ("82" (lemma unique_error) (("82" (grind) nil nil)) nil)
     ("83" (lemma unique_error) (("83" (grind) nil nil)) nil)
     ("84" (lemma unique_error) (("84" (grind) nil nil)) nil)
     ("85" (lemma unique_error) (("85" (grind) nil nil)) nil)
     ("86" (lemma unique_error) (("86" (grind) nil nil)) nil)
     ("87" (lemma unique_error) (("87" (grind) nil nil)) nil)
     ("88" (lemma unique_error) (("88" (grind) nil nil)) nil)
     ("89" (lemma unique_error) (("89" (grind) nil nil)) nil)
     ("90" (lemma unique_error) (("90" (grind) nil nil)) nil)
     ("91" (lemma unique_error) (("91" (grind) nil nil)) nil)
     ("92" (lemma unique_error) (("92" (grind) nil nil)) nil)
     ("93" (lemma unique_error) (("93" (grind) nil nil)) nil)
     ("94" (lemma unique_error) (("94" (grind) nil nil)) nil)
     ("95" (lemma unique_error) (("95" (grind) nil nil)) nil)
     ("96" (lemma unique_error) (("96" (grind) nil nil)) nil)
     ("97" (lemma unique_error) (("97" (grind) nil nil)) nil)
     ("98" (lemma unique_error) (("98" (grind) nil nil)) nil)
     ("99" (lemma unique_error) (("99" (grind) nil nil)) nil)
     ("100" (lemma unique_error) (("100" (grind) nil nil)) nil)
     ("101" (lemma unique_error) (("101" (grind) nil nil)) nil)
     ("102" (lemma unique_error) (("102" (grind) nil nil)) nil)
     ("103" (lemma unique_error) (("103" (grind) nil nil)) nil)
     ("104" (lemma unique_error) (("104" (grind) nil nil)) nil)
     ("105" (lemma unique_error) (("105" (grind) nil nil)) nil)
     ("106" (lemma unique_error) (("106" (grind) nil nil)) nil)
     ("107" (lemma unique_error) (("107" (grind) nil nil)) nil)
     ("108" (lemma unique_error) (("108" (grind) nil nil)) nil)
     ("109" (lemma unique_error) (("109" (grind) nil nil)) nil)
     ("110" (lemma unique_error) (("110" (grind) nil nil)) nil)
     ("111" (lemma unique_error) (("111" (grind) nil nil)) nil)
     ("112" (lemma unique_error) (("112" (grind) nil nil)) nil)
     ("113" (lemma unique_error) (("113" (grind) nil nil)) nil)
     ("114" (lemma unique_error) (("114" (grind) nil nil)) nil)
     ("115" (lemma unique_error) (("115" (grind) nil nil)) nil)
     ("116" (lemma unique_error) (("116" (grind) nil nil)) nil)
     ("117" (lemma unique_error) (("117" (grind) nil nil)) nil)
     ("118" (lemma unique_error) (("118" (grind) nil nil)) nil)
     ("119" (lemma unique_error) (("119" (grind) nil nil)) nil)
     ("120" (lemma unique_error) (("120" (grind) nil nil)) nil)
     ("121" (lemma unique_error) (("121" (grind) nil nil)) nil)
     ("122" (lemma unique_error) (("122" (grind) nil nil)) nil)
     ("123" (lemma unique_error) (("123" (grind) nil nil)) nil)
     ("124" (lemma unique_error) (("124" (grind) nil nil)) nil)
     ("125" (lemma unique_error) (("125" (grind) nil nil)) nil)
     ("126" (lemma unique_error) (("126" (grind) nil nil)) nil)
     ("127" (lemma unique_error) (("127" (grind) nil nil)) nil)
     ("128" (lemma unique_error) (("128" (grind) nil nil)) nil)
     ("129" (lemma unique_error) (("129" (grind) nil nil)) nil)
     ("130" (lemma unique_error) (("130" (grind) nil nil)) nil)
     ("131" (lemma unique_error) (("131" (grind) nil nil)) nil)
     ("132" (lemma unique_error) (("132" (grind) nil nil)) nil)
     ("133" (lemma unique_error) (("133" (grind) nil nil)) nil)
     ("134" (lemma unique_error) (("134" (grind) nil nil)) nil)
     ("135" (lemma unique_error) (("135" (grind) nil nil)) nil)
     ("136" (lemma unique_error) (("136" (grind) nil nil)) nil)
     ("137" (lemma unique_error) (("137" (grind) nil nil)) nil)
     ("138" (lemma unique_error) (("138" (grind) nil nil)) nil)
     ("139" (lemma unique_error) (("139" (grind) nil nil)) nil)
     ("140" (lemma unique_error) (("140" (grind) nil nil)) nil)
     ("141" (lemma unique_error) (("141" (grind) nil nil)) nil)
     ("142" (lemma unique_error) (("142" (grind) nil nil)) nil)
     ("143" (lemma unique_error) (("143" (grind) nil nil)) nil)
     ("144" (lemma unique_error) (("144" (grind) nil nil)) nil)
     ("145" (lemma unique_error) (("145" (grind) nil nil)) nil)
     ("146" (lemma unique_error) (("146" (grind) nil nil)) nil)
     ("147" (lemma unique_error) (("147" (grind) nil nil)) nil)
     ("148" (lemma unique_error) (("148" (grind) nil nil)) nil)
     ("149" (lemma unique_error) (("149" (grind) nil nil)) nil)
     ("150" (lemma unique_error) (("150" (grind) nil nil)) nil)
     ("151" (lemma unique_error) (("151" (grind) nil nil)) nil)
     ("152" (lemma unique_error) (("152" (grind) nil nil)) nil)
     ("153" (lemma unique_error) (("153" (grind) nil nil)) nil)
     ("154" (lemma unique_error) (("154" (grind) nil nil)) nil)
     ("155" (lemma unique_error) (("155" (grind) nil nil)) nil)
     ("156" (lemma unique_error) (("156" (grind) nil nil)) nil)
     ("157" (lemma unique_error) (("157" (grind) nil nil)) nil)
     ("158" (lemma unique_error) (("158" (grind) nil nil)) nil)
     ("159" (lemma unique_error) (("159" (grind) nil nil)) nil)
     ("160" (lemma unique_error) (("160" (grind) nil nil)) nil)
     ("161" (lemma unique_error) (("161" (grind) nil nil)) nil)
     ("162" (lemma unique_error) (("162" (grind) nil nil)) nil)
     ("163" (lemma unique_error) (("163" (grind) nil nil)) nil)
     ("164" (lemma unique_error) (("164" (grind) nil nil)) nil)
     ("165" (lemma unique_error) (("165" (grind) nil nil)) nil)
     ("166" (lemma unique_error) (("166" (grind) nil nil)) nil)
     ("167" (lemma unique_error) (("167" (grind) nil nil)) nil)
     ("168" (lemma unique_error) (("168" (grind) nil nil)) nil)
     ("169" (lemma unique_error) (("169" (grind) nil nil)) nil)
     ("170" (lemma unique_error) (("170" (grind) nil nil)) nil)
     ("171" (lemma unique_error) (("171" (grind) nil nil)) nil)
     ("172" (lemma unique_error) (("172" (grind) nil nil)) nil)
     ("173" (lemma unique_error) (("173" (grind) nil nil)) nil)
     ("174" (lemma unique_error) (("174" (grind) nil nil)) nil)
     ("175" (lemma unique_error) (("175" (grind) nil nil)) nil)
     ("176" (lemma unique_error) (("176" (grind) nil nil)) nil)
     ("177" (lemma unique_error) (("177" (grind) nil nil)) nil)
     ("178" (lemma unique_error) (("178" (grind) nil nil)) nil)
     ("179" (lemma unique_error) (("179" (grind) nil nil)) nil)
     ("180" (lemma unique_error) (("180" (grind) nil nil)) nil)
     ("181" (lemma unique_error) (("181" (grind) nil nil)) nil)
     ("182" (lemma unique_error) (("182" (grind) nil nil)) nil)
     ("183" (lemma unique_error) (("183" (grind) nil nil)) nil)
     ("184" (lemma unique_error) (("184" (grind) nil nil)) nil)
     ("185" (lemma unique_error) (("185" (grind) nil nil)) nil)
     ("186" (lemma unique_error) (("186" (grind) nil nil)) nil)
     ("187" (lemma unique_error) (("187" (grind) nil nil)) nil)
     ("188" (lemma unique_error) (("188" (grind) nil nil)) nil)
     ("189" (lemma unique_error) (("189" (grind) nil nil)) nil)
     ("190" (lemma unique_error) (("190" (grind) nil nil)) nil)
     ("191" (lemma unique_error) (("191" (grind) nil nil)) nil)
     ("192" (lemma unique_error) (("192" (grind) nil nil)) nil)
     ("193" (lemma unique_error) (("193" (grind) nil nil)) nil)
     ("194" (lemma unique_error) (("194" (grind) nil nil)) nil)
     ("195" (lemma unique_error) (("195" (grind) nil nil)) nil)
     ("196" (lemma unique_error) (("196" (grind) nil nil)) nil)
     ("197" (lemma unique_error) (("197" (grind) nil nil)) nil)
     ("198" (lemma unique_error) (("198" (grind) nil nil)) nil)
     ("199" (lemma unique_error) (("199" (grind) nil nil)) nil)
     ("200" (lemma unique_error) (("200" (grind) nil nil)) nil)
     ("201" (lemma unique_error) (("201" (grind) nil nil)) nil)
     ("202" (lemma unique_error) (("202" (grind) nil nil)) nil)
     ("203" (lemma unique_error) (("203" (grind) nil nil)) nil)
     ("204" (lemma unique_error) (("204" (grind) nil nil)) nil)
     ("205" (lemma unique_error) (("205" (grind) nil nil)) nil)
     ("206" (lemma unique_error) (("206" (grind) nil nil)) nil)
     ("207" (lemma unique_error) (("207" (grind) nil nil)) nil)
     ("208" (lemma unique_error) (("208" (grind) nil nil)) nil)
     ("209" (lemma unique_error) (("209" (grind) nil nil)) nil)
     ("210" (lemma unique_error) (("210" (grind) nil nil)) nil)
     ("211" (lemma unique_error) (("211" (grind) nil nil)) nil)
     ("212" (lemma unique_error) (("212" (grind) nil nil)) nil)
     ("213" (lemma unique_error) (("213" (grind) nil nil)) nil)
     ("214" (lemma unique_error) (("214" (grind) nil nil)) nil)
     ("215" (lemma unique_error) (("215" (grind) nil nil)) nil)
     ("216" (lemma unique_error) (("216" (grind) nil nil)) nil)
     ("217" (lemma unique_error) (("217" (grind) nil nil)) nil)
     ("218" (lemma unique_error) (("218" (grind) nil nil)) nil)
     ("219" (lemma unique_error) (("219" (grind) nil nil)) nil)
     ("220" (lemma unique_error) (("220" (grind) nil nil)) nil)
     ("221" (lemma unique_error) (("221" (grind) nil nil)) nil)
     ("222" (lemma unique_error) (("222" (grind) nil nil)) nil)
     ("223" (lemma unique_error) (("223" (grind) nil nil)) nil)
     ("224" (lemma unique_error) (("224" (grind) nil nil)) nil)
     ("225" (lemma unique_error) (("225" (grind) nil nil)) nil)
     ("226" (lemma unique_error) (("226" (grind) nil nil)) nil)
     ("227" (lemma unique_error) (("227" (grind) nil nil)) nil)
     ("228" (lemma unique_error) (("228" (grind) nil nil)) nil)
     ("229" (lemma unique_error) (("229" (grind) nil nil)) nil)
     ("230" (lemma unique_error) (("230" (grind) nil nil)) nil)
     ("231" (lemma unique_error) (("231" (grind) nil nil)) nil)
     ("232" (lemma unique_error) (("232" (grind) nil nil)) nil)
     ("233" (lemma unique_error) (("233" (grind) nil nil)) nil)
     ("234" (lemma unique_error) (("234" (grind) nil nil)) nil)
     ("235" (lemma unique_error) (("235" (grind) nil nil)) nil)
     ("236" (lemma unique_error) (("236" (grind) nil nil)) nil)
     ("237" (lemma unique_error) (("237" (grind) nil nil)) nil)
     ("238" (lemma unique_error) (("238" (grind) nil nil)) nil)
     ("239" (lemma unique_error) (("239" (grind) nil nil)) nil)
     ("240" (lemma unique_error) (("240" (grind) nil nil)) nil)
     ("241" (lemma unique_error) (("241" (grind) nil nil)) nil)
     ("242" (lemma unique_error) (("242" (grind) nil nil)) nil)
     ("243" (lemma unique_error) (("243" (grind) nil nil)) nil)
     ("244" (lemma unique_error) (("244" (grind) nil nil)) nil)
     ("245" (lemma unique_error) (("245" (grind) nil nil)) nil)
     ("246" (lemma unique_error) (("246" (grind) nil nil)) nil)
     ("247" (lemma unique_error) (("247" (grind) nil nil)) nil))
    nil)
   ((TPM_FAIL adt-constructor-decl "(TPM_FAIL?)" ReturnCodes nil)
    (TPM_FAIL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (b2n const-decl "nbit" bit nil)
    (/= const-decl "boolean" notequal nil)
    (validEncScheme const-decl "bool" keydata nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (loadKey2? const-decl "bool" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (load_key_prev_post 0
  (load_key_prev_post-1 nil 3588351496 ("" (grind) nil nil)
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (updateLoc const-decl "mem" memory nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (b2n const-decl "nbit" bit nil)
    (validEncScheme const-decl "bool" keydata nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (loadKey2? const-decl "bool" tpm nil))
   shostak))
 (get_pub_key_post_TCC1 0
  (get_pub_key_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_GetPubKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (getPubKeyState const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (getPubKey? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (get_pub_key_post_TCC2 0
  (get_pub_key_post_TCC2-1 nil 3588337277 ("" (tcc))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (getPubKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (getPubKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_GetPubKey const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (get_pub_key_post 0
  (get_pub_key_post-1 nil 3588351529 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (getPubKey? const-decl "bool" tpm nil)
    (getPubKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_GetPubKey const-decl "State" tpm nil))
   shostak))
 (get_pub_key_post2 0
  (get_pub_key_post2-1 nil 3588351530
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil))
    nil)
   ((TPM_AUTHFAIL adt-constructor-decl "(TPM_AUTHFAIL?)" ReturnCodes
     nil)
    (TPM_AUTHFAIL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYHANDLE adt-constructor-decl
     "(TPM_INVALID_KEYHANDLE?)" ReturnCodes nil)
    (TPM_INVALID_KEYHANDLE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL adt-constructor-decl "(TPM_WRONGPCRVAL?)"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_GetPubKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (getPubKeyState const-decl "tpmAbsState" tpm nil)
    (getPubKey? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (create_mig_blob_post_TCC1 0
  (create_mig_blob_post_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (create_mig_blob_post_TCC2 0
  (create_mig_blob_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (tpmAuthData? const-decl "bool" data nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (create_mig_blob_post_TCC3 0
  (create_mig_blob_post_TCC3-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (key adt-accessor-decl "[(tpmMigKeyAuth?) -> (tpmKey?)]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (create_mig_blob_post_TCC4 0
  (create_mig_blob_post_TCC4-1 nil 3588337277 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (create_mig_blob_post_TCC5 0
  (create_mig_blob_post_TCC5-1 nil 3590838924 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil))
   nil))
 (create_mig_blob_post_TCC6 0
  (create_mig_blob_post_TCC6-1 nil 3595079918
   ("" (subtype-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil))
   nil))
 (create_mig_blob_post 0
  (create_mig_blob_post-1 nil 3588351531 ("" (grind) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil))
   shostak))
 (convert_mig_blob_post_TCC1 0
  (convert_mig_blob_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_ConvertMigrationBlob const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (convert_mig_blob_post_TCC2 0
  (convert_mig_blob_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_ConvertMigrationBlob const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (checkEncrypt? const-decl "bool" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (convert_mig_blob_post_TCC3 0
  (convert_mig_blob_post_TCC3-1 nil 3588337277 ("" (tcc))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ConvertMigrationBlob const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (convert_mig_blob_post 0
  (convert_mig_blob_post-1 nil 3588351534 ("" (grind) nil nil)
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ConvertMigrationBlob const-decl "State" tpm nil))
   shostak))
 (convert_mig_blob_pred_test 0
  (convert_mig_blob_pred_test-1 nil 3592324801 ("" (grind) nil nil)
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ConvertMigrationBlob const-decl "State" tpm nil))
   shostak))
 (authorize_migration_key_post 0
  (authorize_migration_key_post-1 nil 3588351539 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil))
   shostak))
 (migrate_key_post_TCC1 0
  (migrate_key_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_MigrateKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (migrateKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (migrate_key_post_TCC2 0
  (migrate_key_post_TCC2-1 nil 3588337277 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MigrateKey const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (migrate_key_post 0
  (migrate_key_post-1 nil 3588351540 ("" (grind) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MigrateKey const-decl "State" tpm nil))
   shostak))
 (cmk_set_restr_post 0
  (cmk_set_restr_post-1 nil 3588351542 ("" (grind))
   ((tpmCMKDelegate? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (CMKSetRestr? const-decl "bool" tpm nil)
    (CMKSetRestrState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKSetRestrOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_SetRestrictions const-decl "State" tpm nil))
   shostak))
 (cmk_approve_ma_post 0
  (cmk_approve_ma_post-1 nil 3588351543 ("" (grind))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (CMKApproveMAState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKApproveMAOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_ApproveMA const-decl "State" tpm nil))
   shostak))
 (cmk_create_key_post_TCC1 0
  (cmk_create_key_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_CMK_CreateKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (cmk_create_key_post_TCC2 0
  (cmk_create_key_post_TCC2-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKCreateKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateKey const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (cmk_create_key_post_TCC3 0
  (cmk_create_key_post_TCC3-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_CMK_CreateKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (cmk_create_key_post 0
  (cmk_create_key_post-1 nil 3588351544 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKCreateKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateKey const-decl "State" tpm nil))
   shostak))
 (cmk_create_key_post2 0
  (cmk_create_key_post2-1 nil 3588351547
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil)
     ("4" (rewrite unique_error) nil nil)
     ("5" (rewrite unique_error) nil nil)
     ("6" (rewrite unique_error) nil nil)
     ("7" (rewrite unique_error) nil nil)
     ("8" (rewrite unique_error) nil nil)
     ("9" (rewrite unique_error) nil nil)
     ("10" (rewrite unique_error) nil nil)
     ("11" (rewrite unique_error) nil nil)
     ("12" (rewrite unique_error) nil nil)
     ("13" (rewrite unique_error) nil nil))
    nil)
   ((TPM_MA_AUTHORITY adt-constructor-decl "(TPM_MA_AUTHORITY?)"
     ReturnCodes nil)
    (TPM_MA_AUTHORITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_CMK_CreateKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (cmk_create_ticket_post 0
  (cmk_create_ticket_post-1 nil 3588351549 ("" (grind))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validateKeyAlgo? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (CMKCreateTicket? const-decl "bool" tpm nil)
    (CMKCreateTicketState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateTicketOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateTicket const-decl "State" tpm nil))
   shostak))
 (cmk_create_ticket_post2 0
  (cmk_create_ticket_post2-1 nil 3588351550
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil))
    nil)
   ((TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_SIGNATURE adt-constructor-decl "(TPM_BAD_SIGNATURE?)"
     ReturnCodes nil)
    (TPM_BAD_SIGNATURE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_CMK_CreateTicket const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateTicketOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateTicketState const-decl "tpmAbsState" tpm nil)
    (CMKCreateTicket? const-decl "bool" tpm nil)
    (checkSig? const-decl "bool" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (validateKeyAlgo? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (cmk_create_blob_post_TCC1 0
  (cmk_create_blob_post_TCC1-1 nil 3588441312 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (CMKCreateBlob? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (CMKCreateBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateBlob const-decl "State" tpm nil))
   nil))
 (cmk_create_blob_post_TCC2 0
  (cmk_create_blob_post_TCC2-1 nil 3588441312 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (CMKCreateBlob? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (CMKCreateBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateBlob const-decl "State" tpm nil))
   nil))
 (cmk_create_blob_post 0
  (cmk_create_blob_post-1 nil 3588351550 ("" (grind) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (CMKCreateBlob? const-decl "bool" tpm nil)
    (CMKCreateBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateBlob const-decl "State" tpm nil))
   shostak))
 (cmk_create_blob_post2 0
  (cmk_create_blob_post2-1 nil 3588351552
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil)
     ("4" (rewrite unique_error) nil nil)
     ("5" (rewrite unique_error) nil nil))
    nil)
   ((TPM_MA_AUTHORITY adt-constructor-decl "(TPM_MA_AUTHORITY?)"
     ReturnCodes nil)
    (TPM_MA_AUTHORITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_MODE adt-constructor-decl "(TPM_BAD_MODE?)" ReturnCodes
     nil)
    (TPM_BAD_MODE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_CMK_CreateBlob const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateBlobState const-decl "tpmAbsState" tpm nil)
    (CMKCreateBlob? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (cmk_convert_migration_post_TCC1 0
  (cmk_convert_migration_post_TCC1-1 nil 3588337277 ("" (tcc))
   ((afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (set type-eq-decl nil sets nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_ConvertMigration const-decl "State" tpm nil))
   nil))
 (cmk_convert_migration_post_TCC2 0
  (cmk_convert_migration_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_CMK_ConvertMigration const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (checkEncrypt? const-decl "bool" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (cmk_convert_migration_post_TCC3 0
  (cmk_convert_migration_post_TCC3-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (<= const-decl "bool" reals nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_ConvertMigration const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (cmk_convert_migration_post_TCC4 0
  (cmk_convert_migration_post_TCC4-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_CMK_ConvertMigration const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (cmk_convert_migration_post_TCC5 0
  (cmk_convert_migration_post_TCC5-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_CMK_ConvertMigration const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (cmk_convert_migration_post_TCC6 0
  (cmk_convert_migration_post_TCC6-1 nil 3590781566
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (<= const-decl "bool" reals nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_ConvertMigration const-decl "State" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (cmk_convert_migration_post 0
  (cmk_convert_migration_post-1 nil 3588351553 ("" (grind) nil nil)
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_ConvertMigration const-decl "State" tpm nil))
   shostak))
 (cmk_convert_migration_post2_TCC1 0
  (cmk_convert_migration_post2_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_CMK_ConvertMigration const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (checkEncrypt? const-decl "bool" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (cmk_convert_migration_post2 0
  (cmk_convert_migration_post2-1 nil 3588351573
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil)
     ("6" (lemma unique_error) (("6" (grind) nil nil)) nil)
     ("7" (lemma unique_error) (("7" (grind) nil nil)) nil)
     ("8" (lemma unique_error) (("8" (grind) nil nil)) nil)
     ("9" (lemma unique_error) (("9" (grind) nil nil)) nil)
     ("10" (lemma unique_error) (("10" (grind) nil nil)) nil)
     ("11" (lemma unique_error) (("11" (grind) nil nil)) nil)
     ("12" (lemma unique_error) (("12" (grind) nil nil)) nil)
     ("13" (lemma unique_error) (("13" (grind) nil nil)) nil)
     ("14" (lemma unique_error) (("14" (grind) nil nil)) nil)
     ("15" (lemma unique_error) (("15" (grind) nil nil)) nil)
     ("16" (lemma unique_error) (("16" (grind) nil nil)) nil)
     ("17" (lemma unique_error) (("17" (grind) nil nil)) nil)
     ("18" (lemma unique_error) (("18" (grind) nil nil)) nil)
     ("19" (lemma unique_error) (("19" (grind) nil nil)) nil)
     ("20" (lemma unique_error) (("20" (grind) nil nil)) nil)
     ("21" (lemma unique_error) (("21" (grind) nil nil)) nil)
     ("22" (lemma unique_error) (("22" (grind) nil nil)) nil)
     ("23" (lemma unique_error) (("23" (grind) nil nil)) nil)
     ("24" (lemma unique_error) (("24" (grind) nil nil)) nil)
     ("25" (lemma unique_error) (("25" (grind) nil nil)) nil)
     ("26" (lemma unique_error) (("26" (grind) nil nil)) nil)
     ("27" (lemma unique_error) (("27" (grind) nil nil)) nil)
     ("28" (lemma unique_error) (("28" (grind) nil nil)) nil)
     ("29" (lemma unique_error) (("29" (grind) nil nil)) nil)
     ("30" (lemma unique_error) (("30" (grind) nil nil)) nil)
     ("31" (lemma unique_error) (("31" (grind) nil nil)) nil)
     ("32" (lemma unique_error) (("32" (grind) nil nil)) nil)
     ("33" (lemma unique_error) (("33" (grind) nil nil)) nil)
     ("34" (lemma unique_error) (("34" (grind) nil nil)) nil)
     ("35" (lemma unique_error) (("35" (grind) nil nil)) nil)
     ("36" (lemma unique_error) (("36" (grind) nil nil)) nil)
     ("37" (lemma unique_error) (("37" (grind) nil nil)) nil)
     ("38" (lemma unique_error) (("38" (grind) nil nil)) nil)
     ("39" (lemma unique_error) (("39" (grind) nil nil)) nil)
     ("40" (lemma unique_error) (("40" (grind) nil nil)) nil)
     ("41" (lemma unique_error) (("41" (grind) nil nil)) nil)
     ("42" (lemma unique_error) (("42" (grind) nil nil)) nil)
     ("43" (lemma unique_error) (("43" (grind) nil nil)) nil)
     ("44" (lemma unique_error) (("44" (grind) nil nil)) nil)
     ("45" (lemma unique_error) (("45" (grind) nil nil)) nil)
     ("46" (lemma unique_error) (("46" (grind) nil nil)) nil)
     ("47" (lemma unique_error) (("47" (grind) nil nil)) nil)
     ("48" (lemma unique_error) (("48" (grind) nil nil)) nil)
     ("49" (lemma unique_error) (("49" (grind) nil nil)) nil)
     ("50" (lemma unique_error) (("50" (grind) nil nil)) nil)
     ("51" (lemma unique_error) (("51" (grind) nil nil)) nil)
     ("52" (lemma unique_error) (("52" (grind) nil nil)) nil)
     ("53" (lemma unique_error) (("53" (grind) nil nil)) nil)
     ("54" (lemma unique_error) (("54" (grind) nil nil)) nil)
     ("55" (lemma unique_error) (("55" (grind) nil nil)) nil)
     ("56" (lemma unique_error) (("56" (grind) nil nil)) nil)
     ("57" (lemma unique_error) (("57" (grind) nil nil)) nil)
     ("58" (lemma unique_error) (("58" (grind) nil nil)) nil)
     ("59" (lemma unique_error) (("59" (grind) nil nil)) nil)
     ("60" (lemma unique_error) (("60" (grind) nil nil)) nil)
     ("61" (lemma unique_error) (("61" (grind) nil nil)) nil)
     ("62" (lemma unique_error) (("62" (grind) nil nil)) nil)
     ("63" (lemma unique_error) (("63" (grind) nil nil)) nil)
     ("64" (lemma unique_error) (("64" (grind) nil nil)) nil)
     ("65" (lemma unique_error) (("65" (grind) nil nil)) nil)
     ("66" (lemma unique_error) (("66" (grind) nil nil)) nil)
     ("67" (lemma unique_error) (("67" (grind) nil nil)) nil)
     ("68" (lemma unique_error) (("68" (grind) nil nil)) nil)
     ("69" (lemma unique_error) (("69" (grind) nil nil)) nil)
     ("70" (lemma unique_error) (("70" (grind) nil nil)) nil)
     ("71" (lemma unique_error) (("71" (grind) nil nil)) nil)
     ("72" (lemma unique_error) (("72" (grind) nil nil)) nil)
     ("73" (lemma unique_error) (("73" (grind) nil nil)) nil)
     ("74" (lemma unique_error) (("74" (grind) nil nil)) nil)
     ("75" (lemma unique_error) (("75" (grind) nil nil)) nil)
     ("76" (lemma unique_error) (("76" (grind) nil nil)) nil)
     ("77" (lemma unique_error) (("77" (grind) nil nil)) nil)
     ("78" (lemma unique_error) (("78" (grind) nil nil)) nil)
     ("79" (lemma unique_error) (("79" (grind) nil nil)) nil)
     ("80" (lemma unique_error) (("80" (grind) nil nil)) nil)
     ("81" (lemma unique_error) (("81" (grind) nil nil)) nil)
     ("82" (lemma unique_error) (("82" (grind) nil nil)) nil)
     ("83" (lemma unique_error) (("83" (grind) nil nil)) nil)
     ("84" (lemma unique_error) (("84" (grind) nil nil)) nil)
     ("85" (lemma unique_error) (("85" (grind) nil nil)) nil)
     ("86" (lemma unique_error) (("86" (grind) nil nil)) nil)
     ("87" (lemma unique_error) (("87" (grind) nil nil)) nil)
     ("88" (lemma unique_error) (("88" (grind) nil nil)) nil)
     ("89" (lemma unique_error) (("89" (grind) nil nil)) nil)
     ("90" (lemma unique_error) (("90" (grind) nil nil)) nil)
     ("91" (lemma unique_error) (("91" (grind) nil nil)) nil)
     ("92" (lemma unique_error) (("92" (grind) nil nil)) nil)
     ("93" (lemma unique_error) (("93" (grind) nil nil)) nil)
     ("94" (lemma unique_error) (("94" (grind) nil nil)) nil)
     ("95" (lemma unique_error) (("95" (grind) nil nil)) nil)
     ("96" (lemma unique_error) (("96" (grind) nil nil)) nil)
     ("97" (lemma unique_error) (("97" (grind) nil nil)) nil)
     ("98" (lemma unique_error) (("98" (grind) nil nil)) nil)
     ("99" (lemma unique_error) (("99" (grind) nil nil)) nil)
     ("100" (lemma unique_error) (("100" (grind) nil nil)) nil)
     ("101" (lemma unique_error) (("101" (grind) nil nil)) nil)
     ("102" (lemma unique_error) (("102" (grind) nil nil)) nil)
     ("103" (lemma unique_error) (("103" (grind) nil nil)) nil)
     ("104" (lemma unique_error) (("104" (grind) nil nil)) nil)
     ("105" (lemma unique_error) (("105" (grind) nil nil)) nil)
     ("106" (lemma unique_error) (("106" (grind) nil nil)) nil)
     ("107" (lemma unique_error) (("107" (grind) nil nil)) nil)
     ("108" (lemma unique_error) (("108" (grind) nil nil)) nil)
     ("109" (lemma unique_error) (("109" (grind) nil nil)) nil))
    nil)
   ((TPM_MA_DESTINATION adt-constructor-decl "(TPM_MA_DESTINATION?)"
     ReturnCodes nil)
    (TPM_MA_DESTINATION? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_MA_SOURCE adt-constructor-decl "(TPM_MA_SOURCE?)" ReturnCodes
     nil)
    (TPM_MA_SOURCE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_MIGRATION adt-constructor-decl "(TPM_BAD_MIGRATION?)"
     ReturnCodes nil)
    (TPM_BAD_MIGRATION? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SHA_ERROR adt-constructor-decl "(TPM_SHA_ERROR?)" ReturnCodes
     nil)
    (TPM_SHA_ERROR? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_CMK_ConvertMigration const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (sign_post 0
  (sign_post-1 nil 3588351597 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (sign? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil)
    (signState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (signOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Sign const-decl "State" tpm nil))
   shostak))
 (sign_pred_test 0
  (sign_pred_test-1 nil 3588351599 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (sign? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil)
    (signState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (signOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Sign const-decl "State" tpm nil))
   shostak))
 (certify_key_post_TCC1 0
  (certify_key_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_CertifyKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (certifyKey? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (certify_key_post_TCC2 0
  (certify_key_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_CertifyKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (certifyKey? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (certify_key_post_TCC3 0
  (certify_key_post_TCC3-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_CertifyKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (certifyKey? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (certify_key_post_TCC4 0
  (certify_key_post_TCC4-1 nil 3591464798 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "privKVAL" key nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CertifyKey const-decl "State" tpm nil))
   nil))
 (certify_key_post 0
  (certify_key_post-1 nil 3588351600 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (certifyKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CertifyKey const-decl "State" tpm nil))
   shostak))
 (create_endorsement_key_pair_post 0
  (create_endorsement_key_pair_post-1 nil 3588351601
   ("" (grind) nil nil)
   ((TPM_CreateEndorsementKeyPair const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createEKPairOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createEKPairState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil))
   shostak))
 (create_revocable_ek_post_TCC1 0
  (create_revocable_ek_post_TCC1-1 nil 3588426787
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((TPM_CreateRevocableEK const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createRevEKOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (createEKPairOut const-decl "tpmAbsOutput" tpm nil)
    (createEKPairState const-decl "tpmAbsState" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (badkey const-decl "KVAL" keydata nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (create_revocable_ek_post 0
  (create_revocable_ek_post-1 nil 3588351602 ("" (grind) nil nil)
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (createEKPairState const-decl "tpmAbsState" tpm nil)
    (createEKPairOut const-decl "tpmAbsOutput" tpm nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createRevEKOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateRevocableEK const-decl "State" tpm nil))
   shostak))
 (revoke_trust_post 0
  (revoke_trust_post-1 nil 3588351603 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (revokeTrustOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_RevokeTrust const-decl "State" tpm nil)
    (revokeTrust? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (revoke_trust_post2 0
  (revoke_trust_post2-1 nil 3588351604
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil))
    nil)
   ((TPM_PERMANENTEK adt-constructor-decl "(TPM_PERMANENTEK?)"
     ReturnCodes nil)
    (TPM_PERMANENTEK? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_AUTHFAIL adt-constructor-decl "(TPM_AUTHFAIL?)" ReturnCodes
     nil)
    (TPM_AUTHFAIL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_MODE adt-constructor-decl "(TPM_BAD_MODE?)" ReturnCodes
     nil)
    (TPM_BAD_MODE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (revokeTrust? const-decl "bool" tpm nil)
    (TPM_RevokeTrust const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (revokeTrustOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (read_pub_ek_post 0
  (read_pub_ek_post-1 nil 3588351604 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ReadPubek const-decl "State" tpm nil)
    (readPubek? const-decl "bool" tpm nil))
   shostak))
 (read_pub_ek_post2 0
  (read_pub_ek_post2-1 nil 3588351605
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil))
    nil)
   ((TPM_DISABLED_CMD adt-constructor-decl "(TPM_DISABLED_CMD?)"
     ReturnCodes nil)
    (TPM_DISABLED_CMD? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT adt-constructor-decl "(TPM_NO_ENDORSEMENT?)"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (readPubek? const-decl "bool" tpm nil)
    (TPM_ReadPubek const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (read_pub_ek_take_ownership 0
  (read_pub_ek_take_ownership-1 nil 3588351605 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ReadPubek const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (owner_read_internal_pub_post 0
  (owner_read_internal_pub_post-1 nil 3588351609 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (srkKeyVal const-decl "K" tpm nil)
    (ownerReadInternalPubState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerReadInternalPubOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerReadInternalPub const-decl "State" tpm nil))
   shostak))
 (make_identity_post_TCC1 0
  (make_identity_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (make_identity_post_TCC2 0
  (make_identity_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (make_identity_post_TCC3 0
  (make_identity_post_TCC3-1 nil 3591464798 ("" (subtype-tcc) nil nil)
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil))
   nil))
 (make_identity_post 0
  (make_identity_post-1 nil 3588351610 ("" (grind))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (sign const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil))
   shostak))
 (make_identity_post2 0
  (make_identity_post2-1 nil 3588351611
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil)
     ("4" (rewrite unique_error) nil nil)
     ("5" (rewrite unique_error) nil nil))
    nil)
   ((TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (activate_identity_post_TCC1 0
  (activate_identity_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (activate_identity_post_TCC2 0
  (activate_identity_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (activate_identity_post_TCC3 0
  (activate_identity_post_TCC3-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterStartup? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (activate_identity_post_TCC4 0
  (activate_identity_post_TCC4-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((activateIdentityBlob? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (activate_identity_post_TCC5 0
  (activate_identity_post_TCC5-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((/= const-decl "boolean" notequal nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (activate_identity_post_TCC6 0
  (activate_identity_post_TCC6-1 nil 3590781566
   ("" (subtype-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (activate_identity_post_TCC7 0
  (activate_identity_post_TCC7-1 nil 3590859845 ("" (grind) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activate_identity_post_TCC8 0
  (activate_identity_post_TCC8-1 nil 3595079918
   ("" (cases-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (activate_identity_post 0
  (activate_identity_post-1 nil 3588351612 ("" (grind) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (/= const-decl "boolean" notequal nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil))
   shostak))
 (activate_identity_pred_test 0
  (activate_identity_pred_test-1 nil 3591458721 ("" (grind) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil))
   shostak))
 (activate_identity_post2 0
  (activate_identity_post2-1 nil 3588351615
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil)
     ("4" (rewrite unique_error) nil nil)
     ("5" (rewrite unique_error) nil nil)
     ("6" (rewrite unique_error) nil nil)
     ("7" (rewrite unique_error) nil nil)
     ("8" (rewrite unique_error) nil nil)
     ("9" (rewrite unique_error) nil nil)
     ("10" (rewrite unique_error) nil nil)
     ("11" (rewrite unique_error) nil nil)
     ("12" (rewrite unique_error) nil nil)
     ("13" (rewrite unique_error) nil nil)
     ("14" (rewrite unique_error) nil nil)
     ("15" (rewrite unique_error) nil nil)
     ("16" (rewrite unique_error) nil nil)
     ("17" (rewrite unique_error) nil nil)
     ("18" (rewrite unique_error) nil nil)
     ("19" (rewrite unique_error) nil nil))
    nil)
   ((TPM_BAD_TYPE adt-constructor-decl "(TPM_BAD_TYPE?)" ReturnCodes
     nil)
    (TPM_BAD_TYPE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_PARAMETER adt-constructor-decl "(TPM_BAD_PARAMETER?)"
     ReturnCodes nil)
    (TPM_BAD_PARAMETER? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL adt-constructor-decl "(TPM_WRONGPCRVAL?)"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY adt-constructor-decl "(TPM_BAD_LOCALITY?)"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (/= const-decl "boolean" notequal nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (extend_post 0
  (extend_post-1 nil 3588351628 ("" (grind))
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil))
   shostak))
 (extend_post2 0
  (extend_post2-1 nil 3588351629
   ("" (grind) (("" (rewrite unique_error) nil nil)) nil)
   ((TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY adt-constructor-decl "(TPM_BAD_LOCALITY?)"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (antisymmetryMonad 0
  (antisymmetryMonad-1 nil 3588351629
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (pcrsPower const-decl "PCRVALUES" pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil)
    (hash adt-accessor-decl "[(extend?) -> PCRVAL]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (private const-decl "privKVAL" key nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (initKeyVal const-decl "K" tpm nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (>>= const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (modify const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (antisymmetryMonad2 0
  (antisymmetryMonad2-1 nil 3588351630
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind)
        (("" (decompose-equality -4)
          (("" (grind)
            (("" (decompose-equality -1)
              (("" (grind)
                (("" (decompose-equality -1)
                  (("" (grind) (("" (decompose-equality -1) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (outDigest shared-adt-accessor-decl
     "[{x: tpmAbsOutput | OUT_Extend?(x) OR OUT_PCRRead?(x)} -> (tpmDigest?)]"
     tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Extend adt-constructor-decl
     "[[(tpmDigest?), ReturnCode] -> (OUT_Extend?)]" tpm nil)
    (PCR type-decl nil pcr nil)
    (tpmPCRValue const-decl "(tpmDigest?)" data nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (tpmCMKDelegate? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (add const-decl "(nonempty?)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (hash adt-accessor-decl "[(extend?) -> PCRVAL]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (>> const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (antisymmetryMonad3 0
  (antisymmetryMonad3-1 nil 3588351630
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind)
        (("" (decompose-equality -4)
          (("" (decompose-equality -1)
            (("" (grind)
              (("" (decompose-equality -1)
                (("" (grind) (("" (decompose-equality -1) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (outDigest shared-adt-accessor-decl
     "[{x: tpmAbsOutput | OUT_Extend?(x) OR OUT_PCRRead?(x)} -> (tpmDigest?)]"
     tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Extend adt-constructor-decl
     "[[(tpmDigest?), ReturnCode] -> (OUT_Extend?)]" tpm nil)
    (PCR type-decl nil pcr nil)
    (tpmPCRValue const-decl "(tpmDigest?)" data nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (tpmCMKDelegate? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (add const-decl "(nonempty?)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (hash adt-accessor-decl "[(extend?) -> PCRVAL]" pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (b2n const-decl "nbit" bit nil))
   shostak))
 (pcr_read_post 0
  (pcr_read_post-1 nil 3588351631 ("" (grind))
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (pcrReadState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (pcrReadOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PCRRead const-decl "State" tpm nil))
   shostak))
 (quote_post_TCC1 0
  (quote_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (TPM_Quote const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (quote_post_TCC2 0
  (quote_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_Quote const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (quote_post 0
  (quote_post-1 nil 3588351639 ("" (grind) nil nil)
   ((PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil))
   shostak))
 (bad_nonce 0
  (bad_nonce-1 nil 3588351632
   ("" (grind)
    (("1" (decompose-equality)
      (("1" (decompose-equality)
        (("1" (decompose-equality) (("1" (decompose-equality) nil nil))
          nil))
        nil))
      nil)
     ("2" (decompose-equality)
      (("2" (decompose-equality)
        (("2" (decompose-equality) (("2" (decompose-equality) nil nil))
          nil))
        nil))
      nil)
     ("3" (decompose-equality)
      (("3" (decompose-equality)
        (("3" (decompose-equality) (("3" (decompose-equality) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((tpmData_tpmNonce_extensionality formula-decl nil data nil)
    (sigkey adt-accessor-decl "[(signed?) -> privKVAL]" data nil)
    (signData adt-accessor-decl "[(signed?) -> tpmData]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (digest shared-adt-accessor-decl "[d:
   {x: tpmData | tpmMigKeyAuth?(x) OR tpmQuote?(x) OR tpmIdContents?(x)} ->
   {x: tpmData |
            IF tpmMigKeyAuth?(d) OR tpmIdContents?(d) THEN tpmDigest?(x)
            ELSE tpmCompositeHash?(x)
            ENDIF}]" data nil)
    (tpmQuote2? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (externalData shared-adt-accessor-decl
     "[{x: tpmData | tpmQuote?(x) OR tpmQuote2?(x)} -> (tpmNonce?)]"
     data nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (a shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_SetTempDeactivated?(x) OR OUT_TakeOwnership?(x)
           OR OUT_OwnerClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_Seal?(x) OR OUT_Unseal?(x) OR OUT_UnBind?(x)
           OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_ConvertMigrationBlob?(x) OR OUT_AuthorizeMigrationKey?(x)
           OR OUT_MigrateKey?(x) OR OUT_CMK_SetRestrictions?(x)
           OR OUT_CMK_ApproveMA?(x) OR OUT_CMK_CreateKey?(x)
           OR OUT_CMK_CreateTicket?(x) OR OUT_CMK_CreateBlob?(x)
           OR OUT_CMK_ConvertMigration?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_Quote?(x) OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   authOut[HV]]" tpm nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (sigD adt-accessor-decl "[(OUT_Quote?) -> (signed?)]" tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (encrypted?)]" data nil)
    (encData adt-accessor-decl "[(encrypted?) -> tpmData]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (privKey adt-accessor-decl "[(tpmStoreAsymkey?) -> privKVAL]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash adt-constructor-decl
     "[(tpmPCRComposite?) -> (tpmCompositeHash?)]" data nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?)] -> (tpmQuote?)]" data nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (signed adt-constructor-decl "[[tpmData, privKVAL] -> (signed?)]"
     data nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (tpmPCRComposite adt-constructor-decl
     "[[PCR_SELECTION, PCRVALUES] -> (tpmPCRComposite?)]" data nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (OUT_Quote adt-constructor-decl
     "[[(tpmPCRComposite?), (signed?), authOut, ReturnCode] -> (OUT_Quote?)]"
     tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (authOut type-eq-decl nil data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> (tpmPCRComposite?)]"
     tpm nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (tpmAuthData? const-decl "bool" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Quote const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (quote? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (bad_signing_key 0
  (bad_signing_key-1 nil 3588351633
   ("" (grind)
    (("1" (decompose-equality) (("1" (decompose-equality) nil nil))
      nil)
     ("2" (decompose-equality) (("2" (decompose-equality) nil nil))
      nil)
     ("3" (decompose-equality) (("3" (decompose-equality) nil nil))
      nil)
     ("4" (decompose-equality) (("4" (decompose-equality) nil nil))
      nil)
     ("5" (decompose-equality) (("5" (decompose-equality) nil nil))
      nil)
     ("6" (decompose-equality) (("6" (decompose-equality) nil nil))
      nil)
     ("7" (decompose-equality) (("7" (decompose-equality) nil nil))
      nil)
     ("8" (decompose-equality) (("8" (decompose-equality) nil nil))
      nil)
     ("9" (decompose-equality) (("9" (decompose-equality) nil nil))
      nil))
    nil)
   ((tpmAuthData? const-decl "bool" data nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> (tpmPCRComposite?)]"
     tpm nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (authOut type-eq-decl nil data nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Quote adt-constructor-decl
     "[[(tpmPCRComposite?), (signed?), authOut, ReturnCode] -> (OUT_Quote?)]"
     tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil) (PCR type-decl nil pcr nil)
    (tpmPCRComposite adt-constructor-decl
     "[[PCR_SELECTION, PCRVALUES] -> (tpmPCRComposite?)]" data nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (signed adt-constructor-decl "[[tpmData, privKVAL] -> (signed?)]"
     data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?)] -> (tpmQuote?)]" data nil)
    (tpmCompositeHash adt-constructor-decl
     "[(tpmPCRComposite?) -> (tpmCompositeHash?)]" data nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (privKey adt-accessor-decl "[(tpmStoreAsymkey?) -> privKVAL]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encData adt-accessor-decl "[(encrypted?) -> tpmData]" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (encrypted?)]" data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (TRUE const-decl "bool" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (sigD adt-accessor-decl "[(OUT_Quote?) -> (signed?)]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (a shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_SetTempDeactivated?(x) OR OUT_TakeOwnership?(x)
           OR OUT_OwnerClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_Seal?(x) OR OUT_Unseal?(x) OR OUT_UnBind?(x)
           OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_ConvertMigrationBlob?(x) OR OUT_AuthorizeMigrationKey?(x)
           OR OUT_MigrateKey?(x) OR OUT_CMK_SetRestrictions?(x)
           OR OUT_CMK_ApproveMA?(x) OR OUT_CMK_CreateKey?(x)
           OR OUT_CMK_CreateTicket?(x) OR OUT_CMK_CreateBlob?(x)
           OR OUT_CMK_ConvertMigration?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_Quote?(x) OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   authOut[HV]]" tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (signData adt-accessor-decl "[(signed?) -> tpmData]" data nil)
    (sigkey adt-accessor-decl "[(signed?) -> privKVAL]" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Quote const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (quote? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (bad_pcrs 0
  (bad_pcrs-1 nil 3588351636
   ("" (grind)
    (("1" (decompose-equality -7)
      (("1" (decompose-equality -9)
        (("1" (grind)
          (("1" (decompose-equality)
            (("1" (decompose-equality)
              (("1" (decompose-equality)
                (("1" (decompose-equality) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (decompose-equality -7)
      (("2" (decompose-equality)
        (("2" (decompose-equality)
          (("2" (decompose-equality)
            (("2" (decompose-equality) nil nil)) nil))
          nil))
        nil))
      nil)
     ("3" (decompose-equality -7)
      (("3" (decompose-equality)
        (("3" (decompose-equality)
          (("3" (decompose-equality)
            (("3" (decompose-equality) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((tpmAuthData? const-decl "bool" data nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> (tpmPCRComposite?)]"
     tpm nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (authOut type-eq-decl nil data nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Quote adt-constructor-decl
     "[[(tpmPCRComposite?), (signed?), authOut, ReturnCode] -> (OUT_Quote?)]"
     tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil) (PCR type-decl nil pcr nil)
    (tpmPCRComposite adt-constructor-decl
     "[[PCR_SELECTION, PCRVALUES] -> (tpmPCRComposite?)]" data nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (signed adt-constructor-decl "[[tpmData, privKVAL] -> (signed?)]"
     data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?)] -> (tpmQuote?)]" data nil)
    (tpmCompositeHash adt-constructor-decl
     "[(tpmPCRComposite?) -> (tpmCompositeHash?)]" data nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (privKey adt-accessor-decl "[(tpmStoreAsymkey?) -> privKVAL]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encData adt-accessor-decl "[(encrypted?) -> tpmData]" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (encrypted?)]" data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (TRUE const-decl "bool" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (sigD adt-accessor-decl "[(OUT_Quote?) -> (signed?)]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (a shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_SetTempDeactivated?(x) OR OUT_TakeOwnership?(x)
           OR OUT_OwnerClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_Seal?(x) OR OUT_Unseal?(x) OR OUT_UnBind?(x)
           OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_ConvertMigrationBlob?(x) OR OUT_AuthorizeMigrationKey?(x)
           OR OUT_MigrateKey?(x) OR OUT_CMK_SetRestrictions?(x)
           OR OUT_CMK_ApproveMA?(x) OR OUT_CMK_CreateKey?(x)
           OR OUT_CMK_CreateTicket?(x) OR OUT_CMK_CreateBlob?(x)
           OR OUT_CMK_ConvertMigration?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_Quote?(x) OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   authOut[HV]]" tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (select adt-accessor-decl
     "[(tpmPCRComposite?) -> PCR_SELECTION[HV]]" data nil)
    (pcrValue adt-accessor-decl "[(tpmPCRComposite?) -> PCRVALUES[HV]]"
     data nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (set type-eq-decl nil sets nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (tpmCMKDelegate? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Quote const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (/= const-decl "boolean" notequal nil)
    (quote? const-decl "bool" tpm nil))
   shostak))
 (check_PCRS_TCC1 0
  (check_PCRS_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (quote? const-decl "bool" tpm nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (check_PCRS_TCC2 0
  (check_PCRS_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (tpmAuthData? const-decl "bool" data nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (quote? const-decl "bool" tpm nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (check_PCRS 0
  (check_PCRS-1 nil 3588351637
   ("" (grind)
    (("1" (decompose-equality)
      (("1" (decompose-equality) (("1" (grind) nil nil)) nil)) nil)
     ("2" (decompose-equality)
      (("2" (decompose-equality) (("2" (grind) nil nil)) nil)) nil)
     ("3" (decompose-equality)
      (("3" (decompose-equality) (("3" (grind) nil nil)) nil)) nil)
     ("4" (decompose-equality)
      (("4" (decompose-equality) (("4" (grind) nil nil)) nil)) nil)
     ("5" (decompose-equality)
      (("5" (decompose-equality) (("5" (grind) nil nil)) nil)) nil)
     ("6" (decompose-equality)
      (("6" (decompose-equality) (("6" (grind) nil nil)) nil)) nil)
     ("7" (decompose-equality)
      (("7" (decompose-equality) (("7" (grind) nil nil)) nil)) nil)
     ("8" (decompose-equality)
      (("8" (decompose-equality) (("8" (grind) nil nil)) nil)) nil)
     ("9" (decompose-equality)
      (("9" (decompose-equality) (("9" (grind) nil nil)) nil)) nil))
    nil)
   ((tpmPCRValue const-decl "(tpmDigest?)" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (encrypted?)]" data nil)
    (encData adt-accessor-decl "[(encrypted?) -> tpmData]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (privKey adt-accessor-decl "[(tpmStoreAsymkey?) -> privKVAL]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRComposite adt-constructor-decl
     "[[PCR_SELECTION, PCRVALUES] -> (tpmPCRComposite?)]" data nil)
    (tpmCompositeHash adt-constructor-decl
     "[(tpmPCRComposite?) -> (tpmCompositeHash?)]" data nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?)] -> (tpmQuote?)]" data nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (signed adt-constructor-decl "[[tpmData, privKVAL] -> (signed?)]"
     data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (add const-decl "(nonempty?)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (PCR type-decl nil pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (quote? const-decl "bool" tpm nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (quote_with_prev_key_TCC1 0
  (quote_with_prev_key_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (quote? const-decl "bool" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (inverse const-decl "integer" keydata nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (updateLoc const-decl "mem" memory nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   shostak))
 (quote_with_prev_key_TCC2 0
  (quote_with_prev_key_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (quote? const-decl "bool" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (inverse const-decl "integer" keydata nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (updateLoc const-decl "mem" memory nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (quote_with_prev_key 0
  (quote_with_prev_key-1 nil 3588351640 ("" (grind))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (updateLoc const-decl "mem" memory nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" tpm nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil))
   shostak))
 (no_senter 0
  (no_senter-1 nil 3588351692 ("" (grind))
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (add const-decl "(nonempty?)" sets nil)
    (restrict const-decl "R" restrict nil)
    (CPU_sinit const-decl "State" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" tpm nil)
    (emptyset const-decl "set" sets nil))
   shostak))
 (pcr_reset_post 0
  (pcr_reset_post-1 nil 3588351694 ("" (grind))
   ((PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validatePCRVals def-decl "nat" tpm nil)
    (member const-decl "bool" sets nil)
    (pcrResetState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (pcrResetOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PCR_Reset const-decl "State" tpm nil))
   shostak))
 (pcr_reset_post2 0
  (pcr_reset_post2-1 nil 3588351696
   ("" (lemma validatePCRs)
    (("" (grind)
      (("1" (rewrite unique_error) nil nil)
       ("2" (rewrite unique_error) nil nil)
       ("3" (rewrite unique_error) nil nil)
       ("4" (rewrite unique_error) nil nil))
      nil))
    nil)
   ((afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validatePCRVals def-decl "nat" tpm nil)
    (member const-decl "bool" sets nil)
    (pcrResetState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (pcrResetOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PCR_Reset const-decl "State" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (unique_error formula-decl nil tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (TPM_NOTRESETABLE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTRESETABLE adt-constructor-decl "(TPM_NOTRESETABLE?)"
     ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_NOTLOCAL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTLOCAL adt-constructor-decl "(TPM_NOTLOCAL?)" ReturnCodes
     nil)
    (validatePCRs formula-decl nil tpm nil))
   shostak))
 (change_auth_post_TCC1 0
  (change_auth_post_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (change_auth_post_TCC2 0
  (change_auth_post_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   nil))
 (change_auth_post_TCC3 0
  (change_auth_post_TCC3-1 nil 3595079918 ("" (subtype-tcc) nil nil)
   ((afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ChangeAuth const-decl "State" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (change_auth_post 0
  (change_auth_post-1 nil 3588351697 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (changeAuthState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (changeAuthOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ChangeAuth const-decl "State" tpm nil))
   shostak)))

