(tpm
 (unique_hash 0
  (unique_hash-1 nil 3535917891 ("" (postpone) nil nil) nil shostak))
 (IMP_StateMonad_TCC1 0
  (IMP_StateMonad_TCC1-1 nil 3550935976 ("" (existence-tcc) nil nil)
   nil nil))
 (tpmPostInit_TCC1 0
  (tpmPostInit_TCC1-1 nil 3550353288 ("" (subtype-tcc) nil nil)
   ((ekVal const-decl "KEY" tpm nil)) nil))
 (tpmPostInit_TCC2 0
  (tpmPostInit_TCC2-1 nil 3550353288 ("" (subtype-tcc) nil nil)
   ((srkVal const-decl "KEY" tpm nil)) nil))
 (changeLocalityState_TCC1 0
  (changeLocalityState_TCC1-1 nil 3548522044 ("" (grind) nil nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (executeCom_TCC1 0
  (executeCom_TCC1-1 nil 3550353288 ("" (subtype-tcc) nil nil)
   ((afterInit? const-decl "bool" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   nil))
 (monotonic_locality 0
  (monotonic_locality-1 nil 3548612399 ("" (grind) nil nil)
   ((changeLocalityState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (revokeKeyState const-decl "tpmAbsState" tpm nil)
    (removeKey const-decl "KEYSET" key nil)
    (installKeyState const-decl "tpmAbsState" tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (member const-decl "bool" sets nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (antisymmetryMonad 0
  (antisymmetryMonad-1 nil 3531432082
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (PCRINDEX type-eq-decl nil pcr nil) (PCR type-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil)
    (reset? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (reset adt-constructor-decl "(reset?)" pcr nil)
    (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (modify const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (KEY type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (startup_after_init 0
  (startup_after_init-1 nil 3550428542 ("" (grind) nil nil)
   ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil))
   shostak))
 (antisymmetryMonad2 0
  (antisymmetryMonad2-1 nil 3531432087
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((reset adt-constructor-decl "(reset?)" pcr nil)
    (reset? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil)
    (>> const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (KEY type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (antisymmetryMonad3 0
  (antisymmetryMonad3-1 nil 3531432103
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((reset adt-constructor-decl "(reset?)" pcr nil)
    (reset? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (KEY type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (resetMonad 0
  (resetMonad-1 nil 3531432115 ("" (grind) nil nil)
   ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil))
   shostak))
 (quoteMonad_TCC1 0
  (quoteMonad_TCC1-1 nil 3549372787 ("" (grind) nil nil) (nil) nil))
 (quoteMonad 0
  (quoteMonad-1 nil 3549040969 ("" (grind) nil nil)
   ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (TPM_Extend const-decl "State" tpm nil) nil
    (getPCRs const-decl "list[PCR]" pcr nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil))
   shostak))
 (badNonce 0
  (badNonce-1 nil 3549294662
   ("" (grind) (("" (decompose-equality -3) nil nil)) nil)
   ((= const-decl "[T, T -> boolean]" equalities nil)
    (outQuote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (qk adt-accessor-decl "[(outQuote?) -> KEY[B, K, HV]]" tpm nil)
    (BLOB type-decl nil key nil) (PCR type-decl nil pcr nil)
    (outQuote adt-constructor-decl
     "[[KEY, BLOB, list[PCR]] -> (outQuote?)]" tpm nil)
    (private const-decl "(asymKey?)" key nil)
    (key adt-accessor-decl "[(wrapKey?) -> (asymKey?)]" key nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil) nil
    (non adt-accessor-decl "[(outQuote?) -> BLOB[B, K, HV]]" tpm nil)
    (pcrs adt-accessor-decl "[(outQuote?) -> list[PCR]]" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil) nil
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (PCRMASK type-eq-decl nil pcr nil)
    (TPM_Quote const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (KEY type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (badSigningKey 0
  (badSigningKey-1 nil 3549204581
   ("" (grind) (("" (decompose-equality -4) nil nil)) nil)
   ((= const-decl "[T, T -> boolean]" equalities nil)
    (outQuote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (qk adt-accessor-decl "[(outQuote?) -> KEY[B, K, HV]]" tpm nil)
    (BLOB type-decl nil key nil) (PCR type-decl nil pcr nil)
    (outQuote adt-constructor-decl
     "[[KEY, BLOB, list[PCR]] -> (outQuote?)]" tpm nil)
    (private const-decl "(asymKey?)" key nil)
    (key adt-accessor-decl "[(wrapKey?) -> (asymKey?)]" key nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (non adt-accessor-decl "[(outQuote?) -> BLOB[B, K, HV]]" tpm nil)
    (pcrs adt-accessor-decl "[(outQuote?) -> list[PCR]]" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (PCRMASK type-eq-decl nil pcr nil)
    (wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (/= const-decl "boolean" notequal nil)
    (TPM_Quote const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (KEY type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (checkPCRS 0
  (checkPCRS-1 nil 3549207319 ("" (grind) nil nil)
   ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (TPM_Extend const-decl "State" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil))
   shostak))
 (noSenter 0
  (noSenter-1 nil 3535410642 ("" (assert) (("" (grind) nil nil)) nil)
   ((>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (TPM_Extend const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (TPM_Init const-decl "State" tpm nil)
    (put const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (KEY type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil))
   shostak))
 (decrypt_key_fail 0
  (decrypt_key_fail-1 nil 3535901403
   ("" (skosimp*)
    (("" (assert)
      (("" (expand ">>")
        (("" (expand ">>=")
          (("" (expand "unit")
            (("" (expand "decryptTPM")
              (("" (expand "senterResetTPM")
                (("" (expand "put")
                  (("" (expand "senterHashSinitTPM")
                    (("" (expand "tpmReset")
                      (("" (expand "pcrsReset") (("" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((>>= const-decl "State" StateMonad nil)
    (srkVal const-decl "KEY" tpm nil)
    (member const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (decryptKeyState const-decl "BLOB" tpm nil)
    (decryptKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Decrypt const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (CPU_sinit const-decl "State" tpm nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (CPU_senter const-decl "State" tpm nil)
    (ekVal const-decl "KEY" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (TPM_Startup const-decl "State" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (emptyset const-decl "set" sets nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (unit const-decl "State" StateMonad nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (decrypt_key_success 0
  (decrypt_key_success-1 nil 3535913649
   ("" (skosimp*)
    (("" (assert)
      (("" (expand "powerTPM")
        (("" (assert)
          (("" (expand "tpmPower")
            (("" (assert)
              (("" (expand "senterResetTPM")
                (("" (assert)
                  (("" (expand "put")
                    (("" (assert)
                      (("" (expand "senterHashSinitTPM")
                        (("" (assert)
                          (("" (expand "installKeyTPM")
                            (("" (expand "modify")
                              ((""
                                (assert)
                                ((""
                                  (expand "unit")
                                  ((""
                                    (assert)
                                    ((""
                                      (expand "decryptTPM")
                                      ((""
                                        (expand "output")
                                        ((""
                                          (assert)
                                          (("" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_emptyset name-judgement "finite_set" finite_sets nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Decrypt const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (decryptKeyOut const-decl "tpmAbsOutput" tpm nil)
    (decryptKeyState const-decl "BLOB" tpm nil)
    (add const-decl "(nonempty?)" sets nil)
    (emptyset const-decl "set" sets nil)
    (TPM_InstallKey const-decl "State" tpm nil)
    (installKeyState const-decl "tpmAbsState" tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (member const-decl "bool" sets nil)
    (CPU_sinit const-decl "State" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (TPM_Init const-decl "State" tpm nil)
    (put const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (KEY type-decl nil key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)
    (unit const-decl "State" StateMonad nil))
   shostak))
 (install_key_success 0
  (install_key_success-1 nil 3535902541 ("" (grind) nil nil)
   ((wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (member const-decl "bool" sets nil)
    (addKey const-decl "KEYSET" key nil)
    (installKeyState const-decl "tpmAbsState" tpm nil)
    (TPM_InstallKey const-decl "State" tpm nil)
    (emptyset const-decl "set" sets nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (add const-decl "(nonempty?)" sets nil))
   shostak))
 (install_key_success2 0
  (install_key_success2-1 nil 3535903981 ("" (grind) nil nil)
   ((wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (member const-decl "bool" sets nil)
    (addKey const-decl "KEYSET" key nil)
    (installKeyState const-decl "tpmAbsState" tpm nil)
    (TPM_InstallKey const-decl "State" tpm nil)
    (emptyset const-decl "set" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil))
   shostak))
 (unseal_secret_success 0
  (unseal_secret_success-1 nil 3536975666
   ("" (skosimp*)
    (("" (assert)
      (("" (expand "powerTPM")
        (("" (assert)
          (("" (expand "senterResetTPM")
            (("" (expand "put")
              (("" (expand "senterHashSinitTPM")
                (("" (expand "unsealTPM")
                  (("" (expand "unit")
                    (("" (assert)
                      (("" (expand ">>")
                        (("" (assert)
                          (("" (expand ">>=")
                            (("" (grind)
                              (("1"
                                (lemma "double_inverse")
                                (("1" (grind) nil nil))
                                nil)
                               ("2"
                                (lemma "double_inverse")
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (unseal const-decl "BLOB" key nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (CPU_senter const-decl "State" tpm nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (TPM_Startup const-decl "State" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (>>= const-decl "State" StateMonad nil)
    (>> const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil))
   shostak))
 (seal_secret_success_TCC1 0
  (seal_secret_success_TCC1-1 nil 3549985637 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (CPU_senter const-decl "State" tpm nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (TPM_Extend const-decl "State" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil))
   nil))
 (seal_secret_success_TCC2 0
  (seal_secret_success_TCC2-1 nil 3549985637 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (CPU_senter const-decl "State" tpm nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (TPM_Extend const-decl "State" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil))
   nil))
 (seal_secret_success 0
  (seal_secret_success-1 nil 3549985649
   ("" (grind)
    (("" (grind) (("" (rewrite "double_private") nil nil)) nil)) nil)
   ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (TPM_Extend const-decl "State" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (unseal const-decl "BLOB" key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (double_private formula-decl nil key nil))
   shostak))
 (test1a 0
  (test1a-1 nil 3531432030 ("" (grind) nil nil)
   ((tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (unit const-decl "State" StateMonad nil))
   shostak))
 (test1b 0
  (test1b-1 nil 3531432034 ("" (grind) nil nil)
   ((tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (unit const-decl "State" StateMonad nil))
   shostak))
 (test1c 0
  (test1c-1 nil 3531432038 ("" (grind) nil nil)
   ((tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (unit const-decl "State" StateMonad nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (test2 0
  (test2-1 nil 3531432046 ("" (grind) nil nil)
   ((tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (unit const-decl "State" StateMonad nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (test3 0
  (test3-1 nil 3531432051 ("" (grind) nil nil)
   ((tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (test4 0
  (test4-1 nil 3531432056 ("" (grind) nil nil)
   ((tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (install_prev_key_success 0
  (install_prev_key_success-1 nil 3549830065 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (member const-decl "bool" sets nil)
    (addKey const-decl "KEYSET" key nil)
    (installKeyState const-decl "tpmAbsState" tpm nil)
    (TPM_InstallPrev const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutput const-decl "[A -> State]" StateMonad nil)
    (emptyset const-decl "set" sets nil)
    (>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil)
    (add const-decl "(nonempty?)" sets nil))
   shostak))
 (nested_wrapped_keys_success 0
  (nested_wrapped_keys_success-1 nil 3550227282
   ("" (skosimp*)
    (("" (assert)
      (("" (flatten)
        (("" (prop)
          (("1" (grind) nil nil)
           ("2" (assert) (("2" (postpone) nil nil)) nil)
           ("3" (grind) nil nil) ("4" (grind) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (senterResetTPM const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (senterHashSinitTPM const-decl "State" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (member const-decl "bool" sets nil)
    (addKey const-decl "KEYSET" key nil)
    (installKeyState const-decl "tpmAbsState" tpm nil)
    (useOutput const-decl "[A -> State]" StateMonad nil)
    (emptyset const-decl "set" sets nil)
    (>>= const-decl "State" StateMonad nil)
    (add const-decl "(nonempty?)" sets nil)
    (unit const-decl "State" StateMonad nil))
   shostak))
 (unseal_prev_seal_success_TCC1 0
  (unseal_prev_seal_success_TCC1-1 nil 3549991543
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (CPU_senter const-decl "State" tpm nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil))
   nil))
 (unseal_prev_seal_success_TCC2 0
  (unseal_prev_seal_success_TCC2-1 nil 3549991543
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (CPU_senter const-decl "State" tpm nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil))
   nil))
 (unseal_prev_seal_success 0
  (unseal_prev_seal_success-1 nil 3549988187 ("" (grind) nil nil)
   ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil))
   shostak))
 (seal_unseal_secret_success_TCC1 0
  (seal_unseal_secret_success_TCC1-1 nil 3549992064
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (CPU_senter const-decl "State" tpm nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (TPM_Extend const-decl "State" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil))
   nil))
 (seal_unseal_secret_success_TCC2 0
  (seal_unseal_secret_success_TCC2-1 nil 3549992064
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (CPU_senter const-decl "State" tpm nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (TPM_Extend const-decl "State" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (unit const-decl "State" StateMonad nil))
   nil))
 (seal_unseal_secret_success 0
  (seal_unseal_secret_success-1 nil 3549992031
   ("" (skolem!)
    (("" (simplify-with-rewrites)
      (("" (flatten)
        (("" (expand powerTPM)
          (("" (expand put)
            (("" (expand tpmPower)
              (("" (expand pcrsPower)
                (("" (expand srkVal)
                  (("" (expand ekVal)
                    (("" (expand senterResetTPM)
                      (("" (expand senterHashSinitTPM)
                        (("" (expand extendTPM)
                          (("" (expand changeLocalityTPM)
                            (("" (expand sealTPM)
                              ((""
                                (expand unsealPrevSealTPM)
                                ((""
                                  (expand unit)
                                  ((""
                                    (simplify)
                                    ((""
                                      (decompose-equality)
                                      (("" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((unit const-decl "State" StateMonad nil)
    (K formal-nonempty-type-decl nil tpm nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (KEY type-decl nil key nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (symKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (key shared-adt-accessor-decl
     "[{x: KEY | symKey?(x) OR asymKey?(x)} -> KVAL]" key nil)
    (private const-decl "(asymKey?)" key nil)
    (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)
    (tpmPostInit const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (CPU_sinit const-decl "State" tpm nil)
    (TPM_Extend const-decl "State" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak)))

