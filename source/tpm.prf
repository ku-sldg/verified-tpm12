(tpm
 (tpmPostInit_TCC1 0
  (tpmPostInit_TCC1-1 nil 3566305562 ("" (tcc))
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (tpmStartup_TCC1 0
  (tpmStartup_TCC1-1 nil 3566305562 ("" (tcc))
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (tpmRestore_TCC1 0
  (tpmRestore_TCC1-1 nil 3566305562 ("" (tcc))
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (wellFormed? const-decl "bool" tpm nil))
   shostak))
 (changeLocalityState_TCC1 0
  (changeLocalityState_TCC1-1 nil 3566305562 ("" (tcc))
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak))
 (takeOwnershipOut_TCC1 0
  (takeOwnershipOut_TCC1-1 nil 3566564467 ("" (tcc))
   ((/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (tpmAuthData? const-decl "bool" data nil))
   shostak))
 (sealOut_TCC1 0
  (sealOut_TCC1-1 nil 3567278513 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (tpmAuthData? const-decl "bool" data nil))
   shostak))
 (unsealOut_TCC1 0
  (unsealOut_TCC1-1 nil 3566305562 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (unsealOut_TCC2 0
  (unsealOut_TCC2-1 nil 3567360983 ("" (tcc))
   ((inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil))
   nil))
 (unsealOut_TCC3 0
  (unsealOut_TCC3-1 nil 3569776140 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBindOut_TCC1 0
  (unBindOut_TCC1-1 nil 3566305562 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (unBindOut_TCC2 0
  (unBindOut_TCC2-1 nil 3566305563 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (unBind? const-decl "bool" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   shostak))
 (createWrapKeyOut_TCC1 0
  (createWrapKeyOut_TCC1-1 nil 3567431748 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (getPubKeyOut_TCC1 0
  (getPubKeyOut_TCC1-1 nil 3569242805 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createMigBlobOut_TCC1 0
  (createMigBlobOut_TCC1-1 nil 3569259985 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil))
   nil))
 (createMigBlobOut_TCC2 0
  (createMigBlobOut_TCC2-1 nil 3569259985 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createMigBlobOut_TCC3 0
  (createMigBlobOut_TCC3-1 nil 3569259985 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createMigBlobOut_TCC4 0
  (createMigBlobOut_TCC4-1 nil 3569259985 ("" (tcc))
   ((inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil))
   nil))
 (convertMigBlobOut_TCC1 0
  (convertMigBlobOut_TCC1-1 nil 3569262879 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (KVAL type-eq-decl nil keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (migrateKeyOut_TCC1 0
  (migrateKeyOut_TCC1-1 nil 3569267941 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (CMKCreateKeyOut_TCC1 0
  (CMKCreateKeyOut_TCC1-1 nil 3575307124 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (tpmAuthData? const-decl "bool" data nil))
   shostak))
 (CMKCreateBlobOut2_TCC1 0
  (CMKCreateBlobOut2_TCC1-1 nil 3575307124 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (CMKCreateBlobOut2_TCC2 0
  (CMKCreateBlobOut2_TCC2-1 nil 3575307124 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (RNG type-eq-decl nil data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (CMKConvertMigrationOut_TCC1 0
  (CMKConvertMigrationOut_TCC1-1 nil 3575307124 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (KVAL type-eq-decl nil keydata nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (inverse const-decl "KVAL" keydata nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (tpmAuthData? const-decl "bool" data nil))
   shostak))
 (CMKConvertMigrationOut_TCC2 0
  (CMKConvertMigrationOut_TCC2-1 nil 3575738521 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (KVAL type-eq-decl nil keydata nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (inverse const-decl "KVAL" keydata nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (makeIdentityOut_TCC1 0
  (makeIdentityOut_TCC1-1 nil 3569352473 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activateIdentityOut_TCC1 0
  (activateIdentityOut_TCC1-1 nil 3569547409 ("" (tcc))
   ((activateIdentityBlob? const-decl "bool" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activateIdentityOut_TCC2 0
  (activateIdentityOut_TCC2-1 nil 3569547409 ("" (tcc))
   ((activateIdentityBlob? const-decl "bool" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (quoteOut_TCC1 0
  (quoteOut_TCC1-1 nil 3569594477 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (quote? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (validatePCRVals_TCC1 0
  (validatePCRVals_TCC1-1 nil 3569602586 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<< adt-def-decl "(well_founded?[list])" list_adt nil)
    (member const-decl "bool" sets nil))
   nil))
 (validatePCRs 0
  (validatePCRs-1 nil 3569612876
   ("" (induct select)
    (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (grind) nil nil))
    nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (member const-decl "bool" sets nil)
    (list_induction formula-decl nil list_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (validatePCRVals def-decl "nat" tpm nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil))
   shostak))
 (check_validatePcrs_TCC1 0
  (check_validatePcrs_TCC1-1 nil 3569603157 ("" (tcc))
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (list2set def-decl "set[T]" list2set nil)
    (every adt-def-decl "boolean" list_adt nil))
   nil))
 (check_validatePcrs 0
  (check_validatePcrs-1 nil 3569603158 ("" (grind) nil nil)
   ((validatePCRVals def-decl "nat" tpm nil)
    (srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (list2set def-decl "set[T]" list2set nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (add const-decl "(nonempty?)" sets nil)
    (restrict const-decl "R" restrict nil)
    (member const-decl "bool" sets nil)
    (emptyset const-decl "set" sets nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (finite_restrict application-judgement "finite_set[S]"
     restrict_set_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (changeAuthOut_TCC1 0
  (changeAuthOut_TCC1-1 nil 3569776140 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (inverse const-decl "KVAL" keydata nil)
    (KVAL type-eq-decl nil keydata nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (changeAuthOut_TCC2 0
  (changeAuthOut_TCC2-1 nil 3569776140 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (inverse const-decl "KVAL" keydata nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (certOut_TCC1 0
  (certOut_TCC1-1 nil 3569695159 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSigStatus const-decl "bool" key nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil))
   nil))
 (executeCom_TCC1 0
  (executeCom_TCC1-1 nil 3566305563 ("" (tcc))
   ((afterInit? const-decl "bool" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   shostak))
 (CPU_BuildQuoteFromMem_TCC1 0
  (CPU_BuildQuoteFromMem_TCC1-1 nil 3566305563 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil))
   shostak))
 (gen_quote_TCC1 0
  (gen_quote_TCC1-1 nil 3575307249 ("" (tcc))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (CPU_BuildQuoteFromMem const-decl "State" tpm nil))
   nil))
 (gen_quote 0
  (gen_quote-1 nil 3575744696 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (CPU_BuildQuoteFromMem const-decl "State" tpm nil))
   shostak))
 (gen_cert 0
  (gen_cert-1 nil 3566305726 ("" (grind) nil nil)
   ((tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSigStatus const-decl "bool" key nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil))
   shostak))
 (init_post 0
  (init_post-1 nil 3566305727 ("" (grind) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil))
   shostak))
 (save_state_post 0
  (save_state_post-1 nil 3566305727 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_SaveState const-decl "State" tpm nil))
   shostak))
 (startup_post 0
  (startup_post-1 nil 3566305727 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (restoreState const-decl "tpmAbsState" tpm nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (deactivateState const-decl "tpmAbsState" tpm nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil))
   shostak))
 (startup_after_init 0
  (startup_after_init-1 nil 3566305728 ("" (grind) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (resetMonad 0
  (resetMonad-1 nil 3566305728 ("" (grind))
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (add const-decl "(nonempty?)" sets nil)
    (restrict const-decl "R" restrict nil)
    (CPU_sinit const-decl "State" tpm nil)
    (finite_restrict application-judgement "finite_set[S]"
     restrict_set_props nil))
   shostak))
 (unique_error 0
  (unique_error-1 nil 3567442423
   ("" (grind) (("" (decompose-equality) nil nil)) nil)
   ((ReturnCode type-decl nil ReturnCodes nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Sealx? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OIAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OSAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_SaveState?(x)
           OR OUT_Startup?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x) OR OUT_Sealx?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_Sign?(x) OR OUT_CertifyKey?(x)
           OR OUT_CreateEndorsementKeyPair?(x) OR OUT_CreateRevocableEK?(x)
           OR OUT_RevokeTrust?(x) OR OUT_ReadPubek?(x)
           OR OUT_OwnerReadInternalPub?(x) OR OUT_MakeIdentity?(x)
           OR OUT_ActivateIdentity?(x) OR OUT_Extend?(x) OR OUT_PCRRead?(x)
           OR OUT_Quote?(x) OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_OIAP?(x) OR OUT_OSAP?(x)
           OR OUT_FlushSpecific?(x) OR OUT_DAA_Join?(x)
           OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (OUT_Error adt-constructor-decl "[ReturnCode -> (OUT_Error?)]" tpm
     nil))
   shostak))
 (set_owner_install_post 0
  (set_owner_install_post-1 nil 3569787137 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (invalidAuth? const-decl "bool" data nil)
    (setOwnerInstallState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setOwnerInstallOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_SetOwnerInstall const-decl "State" tpm nil))
   shostak))
 (owner_set_disable_post 0
  (owner_set_disable_post-1 nil 3569787145 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (ownerSetDisableState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerSetDisableOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerSetDisable const-decl "State" tpm nil))
   shostak))
 (physical_enable_post 0
  (physical_enable_post-1 nil 3569787248 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (physicalEnableState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalEnableOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PhysicalEnable const-decl "State" tpm nil))
   shostak))
 (physical_disable_post 0
  (physical_disable_post-1 nil 3569787262 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (physicalDisableState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalDisableOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PhysicalDisable const-decl "State" tpm nil))
   shostak))
 (physical_set_deactivated_post 0
  (physical_set_deactivated_post-1 nil 3569787267 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (physicalSetDeactivatedState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalSetDeactivatedOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PhysicalSetDeactivated const-decl "State" tpm nil))
   shostak))
 (set_temp_deactivated_post 0
  (set_temp_deactivated_post-1 nil 3569787271 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (setTempDeactivatedState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setTempDeactivatedOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_SetTempDeactivated const-decl "State" tpm nil))
   shostak))
 (set_operator_auth_post 0
  (set_operator_auth_post-1 nil 3569787275 ("" (grind) nil nil)
   ((tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (setOperatorAuthState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setOperatorAuthOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_SetOperatorAuth const-decl "State" tpm nil))
   shostak))
 (take_ownership_post_TCC1 0
  (take_ownership_post_TCC1-1 nil 3567191569 ("" (tcc))
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   shostak))
 (take_ownership_post 0
  (take_ownership_post-1 nil 3567191570 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil))
   shostak))
 (take_ownership_post2 0
  (take_ownership_post2-2 "in the middle bh" 3567441987
   ("" (lemma unique_error) (("" (grind) nil nil)) nil)
   ((TPM_TakeOwnership const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_OWNER_SET adt-constructor-decl "(TPM_OWNER_SET?)" ReturnCodes
     nil)
    (TPM_OWNER_SET? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INSTALL_DISABLED adt-constructor-decl
     "(TPM_INSTALL_DISABLED?)" ReturnCodes nil)
    (TPM_INSTALL_DISABLED? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_NO_ENDORSEMENT adt-constructor-decl "(TPM_NO_ENDORSEMENT?)"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (unique_error formula-decl nil tpm nil))
   shostak)
  (take_ownership_post2-1 nil 3567432517
   ("" (skosimp)
    (("" (rewrite TPM_TakeOwnership)
      (("" (rewrite modifyOutput)
        (("" (rewrite outputCom)
          (("" (assert)
            (("" (all-typepreds)
              (("" (rewrite afterStartup?)
                (("" (rewrite afterInit?)
                  (("" (assert)
                    (("" (rewrite outputComStartup)
                      (("" (postpone) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((tpmAuthData? const-decl "bool" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil))
   shostak))
 (owner_clear_post_TCC1 0
  (owner_clear_post_TCC1-1 nil 3567174700 ("" (tcc))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerClear const-decl "State" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   nil))
 (owner_clear_post 0
  (owner_clear_post-1 nil 3566305729 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerClear const-decl "State" tpm nil)
    (clear_post const-decl "bool" tpm nil))
   shostak))
 (force_clear_post_TCC1 0
  (force_clear_post_TCC1-1 nil 3567174700 ("" (tcc))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (forceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ForceClear const-decl "State" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   nil))
 (force_clear_post 0
  (force_clear_post-1 nil 3566305729 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (forceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ForceClear const-decl "State" tpm nil)
    (clear_post const-decl "bool" tpm nil))
   shostak))
 (disable_owner_clear_post 0
  (disable_owner_clear_post-1 nil 3566305730 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableOwnerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableOwnerClear const-decl "State" tpm nil))
   shostak))
 (disable_force_clear_post 0
  (disable_force_clear_post-1 nil 3566305730 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableForceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableForceClear const-decl "State" tpm nil))
   shostak))
 (physical_presence_post 0
  (physical_presence_post-1 nil 3567189262 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (member const-decl "bool" sets nil)
    (physicalPresenceState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalPresenceOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TSC_PhysicalPresence const-decl "State" tpm nil))
   shostak))
 (reset_establishment_post 0
  (reset_establishment_post-1 nil 3569074292 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (resetEstablishment? const-decl "bool" tpm nil)
    (resetEstablishmentBitState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (resetEstablishmentBitOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TSC_ResetEstablishmentBit const-decl "State" tpm nil))
   shostak))
 (seal_post_TCC1 0
  (seal_post_TCC1-1 nil 3567278513 ("" (tcc))
   ((tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   shostak))
 (seal_post 0
  (seal_post-1 nil 3566305730 ("" (grind) nil nil)
   ((tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil))
   shostak))
 (unseal_post_TCC1 0
  (unseal_post_TCC1-1 nil 3566305565 ("" (tcc))
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil))
   shostak))
 (unseal_post_TCC2 0
  (unseal_post_TCC2-1 nil 3567360983 ("" (tcc))
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil))
   nil))
 (unseal_post_TCC3 0
  (unseal_post_TCC3-1 nil 3569776140 ("" (tcc))
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unseal_post 0
  (unseal_post-1 nil 3566305731 ("" (grind) nil nil)
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil))
   shostak))
 (unseal_prev_post_TCC1 0
  (unseal_prev_post_TCC1-1 nil 3567360983 ("" (tcc))
   ((tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (seal? const-decl "bool" tpm nil)
    (unseal? const-decl "bool" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unseal_prev_post 0
  (unseal_prev_post-1 nil 3566305732 ("" (grind) nil nil)
   ((tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (decrypt const-decl "tpmData" key nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (unseal? const-decl "bool" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil))
   shostak))
 (unBind_post_TCC1 0
  (unBind_post_TCC1-1 nil 3566305565 ("" (tcc))
   ((tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil))
   shostak))
 (unBind_post_TCC2 0
  (unBind_post_TCC2-1 nil 3567363073 ("" (tcc))
   ((tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBind_post 0
  (unBind_post-1 nil 3566305732 ("" (grind) nil nil)
   ((tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil))
   shostak))
 (unBind_prev_post_TCC1 0
  (unBind_prev_post_TCC1-1 nil 3575631893 ("" (tcc))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (unBind? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBind_prev_post 0
  (unBind_prev_post-2 "" 3575631856 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (unBind? const-decl "bool" tpm nil))
   shostak)
  (unBind_prev_post-1 nil 3566305733 ("" (grind))
   ((unBind? const-decl "bool" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (TPM_UnBind const-decl "State" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (private const-decl "KVAL" key nil)
    (inverse const-decl "KVAL" keydata nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil))
   shostak))
 (create_wrap_key_post_TCC1 0
  (create_wrap_key_post_TCC1-1 nil 3567431748 ("" (tcc))
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (create_wrap_key_post 0
  (create_wrap_key_post-1 nil 3566305733 ("" (grind) nil nil)
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil))
   shostak))
 (load_key_post 0
  (load_key_post-1 nil 3566305734 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (b2n const-decl "nbit" bit nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (member const-decl "bool" sets nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (load_key_pred_test 0
  (load_key_pred_test-1 nil 3566316325 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (b2n const-decl "nbit" bit nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (member const-decl "bool" sets nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (loadKey2? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (load_key_post2 0
  (load_key_post2-1 nil 3566316512
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil)
     ("4" (rewrite unique_error) nil nil)
     ("5" (rewrite unique_error) nil nil)
     ("6" (rewrite unique_error) nil nil)
     ("7" (rewrite unique_error) nil nil)
     ("8" (rewrite unique_error) nil nil)
     ("9" (rewrite unique_error) nil nil)
     ("10" (rewrite unique_error) nil nil)
     ("11" (rewrite unique_error) nil nil))
    nil)
   ((TPM_FAIL adt-constructor-decl "(TPM_FAIL?)" ReturnCodes nil)
    (TPM_FAIL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (b2n const-decl "nbit" bit nil)
    (/= const-decl "boolean" notequal nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (loadKey2? const-decl "bool" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (member const-decl "bool" sets nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (load_key_post3 0
  (load_key_post3-1 nil 3569338936 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (b2n const-decl "nbit" bit nil)
    (/= const-decl "boolean" notequal nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (member const-decl "bool" sets nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (add const-decl "(nonempty?)" sets nil)
    (>> const-decl "State" StateMonad nil)
    (loadKey2? const-decl "bool" tpm nil))
   shostak))
 (load_key_prev_post 0
  (load_key_prev_post-1 nil 3566316373 ("" (grind) nil nil)
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (updateLoc const-decl "mem" memory nil)
    (installedOrSRK? const-decl "bool" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (b2n const-decl "nbit" bit nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (loadKey2? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (addKey const-decl "KEYSET" key nil))
   shostak))
 (get_pub_key_post_TCC1 0
  (get_pub_key_post_TCC1-1 nil 3569242805 ("" (tcc))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (getPubKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_GetPubKey const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (get_pub_key_post 0
  (get_pub_key_post-1 nil 3569242806 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_GetPubKey const-decl "State" tpm nil)
    (getPubKey? const-decl "bool" tpm nil))
   shostak))
 (get_pub_key_post2 0
  (get_pub_key_post2-1 nil 3569339031
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil))
    nil)
   ((TPM_AUTHFAIL adt-constructor-decl "(TPM_AUTHFAIL?)" ReturnCodes
     nil)
    (TPM_AUTHFAIL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYHANDLE adt-constructor-decl
     "(TPM_INVALID_KEYHANDLE?)" ReturnCodes nil)
    (TPM_INVALID_KEYHANDLE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL adt-constructor-decl "(TPM_WRONGPCRVAL?)"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (getPubKey? const-decl "bool" tpm nil)
    (TPM_GetPubKey const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (create_mig_blob_post_TCC1 0
  (create_mig_blob_post_TCC1-1 nil 3569242805 ("" (tcc))
   ((tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (create_mig_blob_post_TCC2 0
  (create_mig_blob_post_TCC2-1 nil 3569260218 ("" (tcc))
   ((tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (create_mig_blob_post_TCC3 0
  (create_mig_blob_post_TCC3-1 nil 3569260218 ("" (tcc))
   ((tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil))
   shostak))
 (create_mig_blob_post_TCC4 0
  (create_mig_blob_post_TCC4-1 nil 3575745240 ("" (tcc))
   ((checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil))
   nil))
 (create_mig_blob_post 0
  (create_mig_blob_post-1 nil 3566305734 ("" (grind) nil nil)
   ((tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil))
   shostak))
 (convert_mig_blob_post_TCC1 0
  (convert_mig_blob_post_TCC1-1 nil 3569264394 ("" (tcc))
   ((tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (KVAL type-eq-decl nil keydata nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ConvertMigrationBlob const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (convert_mig_blob_post 0
  (convert_mig_blob_post-1 nil 3569262883 ("" (grind) nil nil)
   ((tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ConvertMigrationBlob const-decl "State" tpm nil))
   shostak))
 (authorize_migration_key_post 0
  (authorize_migration_key_post-1 nil 3566305735 ("" (grind) nil nil)
   ((tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil))
   shostak))
 (migrate_key_post_TCC1 0
  (migrate_key_post_TCC1-1 nil 3575745240 ("" (tcc))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "KVAL" keydata nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (encryptStatus const-decl "(encrypted?)" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_MigrateKey const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (migrate_key_post 0
  (migrate_key_post-1 nil 3566305736 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_MigrateKey const-decl "State" tpm nil))
   shostak))
 (sign_post 0
  (sign_post-1 nil 3566305736 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (sign const-decl "tpmData" key nil)
    (signOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Sign const-decl "State" tpm nil))
   shostak))
 (sign_pred_test 0
  (sign_pred_test-1 nil 3566305737 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (sign const-decl "tpmData" key nil)
    (signOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Sign const-decl "State" tpm nil)
    (sign? const-decl "bool" tpm nil))
   shostak))
 (create_endorsement_key_pair_post 0
  (create_endorsement_key_pair_post-1 nil 3566305737
   ("" (grind) nil nil)
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (createEKPairState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createEKPairOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateEndorsementKeyPair const-decl "State" tpm nil))
   shostak))
 (create_revocable_ek_post 0
  (create_revocable_ek_post-1 nil 3566305737 ("" (grind) nil nil)
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (createEKPairState const-decl "tpmAbsState" tpm nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createEKPairOut const-decl "tpmAbsOutput" tpm nil)
    (createRevEKOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateRevocableEK const-decl "State" tpm nil))
   shostak))
 (revoke_trust_post 0
  (revoke_trust_post-1 nil 3566305738 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (revokeTrustOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_RevokeTrust const-decl "State" tpm nil)
    (revokeTrust? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (revoke_trust_post2 0
  (revoke_trust_post2-1 nil 3569339109
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil))
    nil)
   ((TPM_PERMANENTEK adt-constructor-decl "(TPM_PERMANENTEK?)"
     ReturnCodes nil)
    (TPM_PERMANENTEK? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_AUTHFAIL adt-constructor-decl "(TPM_AUTHFAIL?)" ReturnCodes
     nil)
    (TPM_AUTHFAIL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_MODE adt-constructor-decl "(TPM_BAD_MODE?)" ReturnCodes
     nil)
    (TPM_BAD_MODE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (revokeTrust? const-decl "bool" tpm nil)
    (TPM_RevokeTrust const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (revokeTrustOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (read_pub_ek_post 0
  (read_pub_ek_post-1 nil 3566305738 ("" (grind) nil nil)
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (publicKey const-decl "(tpmKey?)" key nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ReadPubek const-decl "State" tpm nil)
    (readPubek? const-decl "bool" tpm nil))
   shostak))
 (read_pub_ek_post2 0
  (read_pub_ek_post2-1 nil 3569339582
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil))
    nil)
   ((TPM_DISABLED_CMD adt-constructor-decl "(TPM_DISABLED_CMD?)"
     ReturnCodes nil)
    (TPM_DISABLED_CMD? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT adt-constructor-decl "(TPM_NO_ENDORSEMENT?)"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (readPubek? const-decl "bool" tpm nil)
    (TPM_ReadPubek const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (publicKey const-decl "(tpmKey?)" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (read_pub_ek_take_ownership 0
  (read_pub_ek_take_ownership-1 nil 3572016132 ("" (grind) nil nil)
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil)
    (publicKey const-decl "(tpmKey?)" key nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ReadPubek const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (owner_read_internal_pub_post 0
  (owner_read_internal_pub_post-1 nil 3569340291 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (srkKeyVal const-decl "K" tpm nil)
    (ownerReadInternalPubOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_OwnerReadInternalPub const-decl "State" tpm nil))
   shostak))
 (make_identity_post_TCC1 0
  (make_identity_post_TCC1-1 nil 3569352511 ("" (tcc))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (make_identity_post 0
  (make_identity_post-1 nil 3566305738 ("" (grind) nil nil)
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil))
   shostak))
 (make_identity_post2 0
  (make_identity_post2-1 nil 3569353036
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil)
     ("4" (rewrite unique_error) nil nil)
     ("5" (rewrite unique_error) nil nil))
    nil)
   ((TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "KVAL" key nil)
    (inverse const-decl "KVAL" keydata nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (make_cert_TCC1 0
  (make_cert_TCC1-1 nil 3569873721 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil))
   nil))
 (make_cert 0
  (make_cert-1 nil 3569873721 ("" (grind) nil nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (checkSigStatus const-decl "bool" key nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (CA_certify const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil))
   shostak))
 (activate_identity_post_TCC1 0
  (activate_identity_post_TCC1-1 nil 3569547994 ("" (tcc))
   ((activateIdentityBlob? const-decl "bool" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activate_identity_post_TCC2 0
  (activate_identity_post_TCC2-1 nil 3569547994 ("" (tcc))
   ((activateIdentityBlob? const-decl "bool" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil))
   nil))
 (activate_identity_post_TCC3 0
  (activate_identity_post_TCC3-1 nil 3569547994 ("" (tcc))
   ((activateIdentityBlob? const-decl "bool" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activate_identity_post_TCC4 0
  (activate_identity_post_TCC4-1 nil 3569547994 ("" (tcc))
   ((activateIdentityBlob? const-decl "bool" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil))
   nil))
 (activate_identity_post 0
  (activate_identity_post-1 nil 3566305739 ("" (grind) nil nil)
   ((activateIdentityBlob? const-decl "bool" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil))
   shostak))
 (activate_identity_post2 0
  (activate_identity_post2-1 nil 3569856396
   ("" (grind)
    (("1" (rewrite unique_error) nil nil)
     ("2" (rewrite unique_error) nil nil)
     ("3" (rewrite unique_error) nil nil)
     ("4" (rewrite unique_error) nil nil)
     ("5" (rewrite unique_error) nil nil)
     ("6" (rewrite unique_error) nil nil)
     ("7" (rewrite unique_error) nil nil))
    nil)
   ((TPM_BAD_TYPE adt-constructor-decl "(TPM_BAD_TYPE?)" ReturnCodes
     nil)
    (TPM_BAD_TYPE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_PARAMETER adt-constructor-decl "(TPM_BAD_PARAMETER?)"
     ReturnCodes nil)
    (TPM_BAD_PARAMETER? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL adt-constructor-decl "(TPM_WRONGPCRVAL?)"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY adt-constructor-decl "(TPM_BAD_LOCALITY?)"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (/= const-decl "boolean" notequal nil)
    (member const-decl "bool" sets nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (activateIdentityBlob? const-decl "bool" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (private const-decl "KVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (ekKeyVal const-decl "K" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (cert_activate_TCC1 0
  (cert_activate_TCC1-1 nil 3569865277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (activateIdentityBlob? const-decl "bool" data nil))
   nil))
 (cert_activate_TCC2 0
  (cert_activate_TCC2-1 nil 3569865277 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSigStatus const-decl "bool" key nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil))
   nil))
 (cert_activate_TCC3 0
  (cert_activate_TCC3-1 nil 3569865277 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (updateLoc const-decl "mem" memory nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSigStatus const-decl "bool" key nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil))
   nil))
 (cert_activate_TCC4 0
  (cert_activate_TCC4-1 nil 3569865277 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSigStatus const-decl "bool" key nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (activateIdentityBlob? const-decl "bool" data nil))
   nil))
 (cert_activate_TCC5 0
  (cert_activate_TCC5-1 nil 3569865277 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSigStatus const-decl "bool" key nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (cert_activate 0
  (cert_activate-1 nil 3569865277 ("" (grind) nil nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSigStatus const-decl "bool" key nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil))
   shostak))
 (make_cert_activate_identity_TCC1 0
  (make_cert_activate_identity_TCC1-1 nil 3569865668 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (activateIdentityBlob? const-decl "bool" data nil))
   nil))
 (make_cert_activate_identity_TCC2 0
  (make_cert_activate_identity_TCC2-1 nil 3569865668 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (checkSigStatus const-decl "bool" key nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (CA_certify const-decl "State" tpm nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<= const-decl "bool" reals nil)
    (x!1 skolem-const-decl "nat" tpm nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (activateIdentityBlob? const-decl "bool" data nil))
   nil))
 (make_cert_activate_identity_TCC3 0
  (make_cert_activate_identity_TCC3-1 nil 3569865668 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (checkSigStatus const-decl "bool" key nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (CA_certify const-decl "State" tpm nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil) (K type-eq-decl nil tpm nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (tpmRestore const-decl "(wellFormed?)" tpm nil)
    (private const-decl "KVAL" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (make_cert_activate_identity 0
  (make_cert_activate_identity-1 nil 3569865669 ("" (grind) nil nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (checkSigStatus const-decl "bool" key nil)
    (certState const-decl "tpmAbsState" tpm nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (CA_certify const-decl "State" tpm nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<= const-decl "bool" reals nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (TPM_ActivateIdentity const-decl "State" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (checkSig const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (tpmRestore const-decl "(wellFormed?)" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil))
   shostak))
 (extend_post 0
  (extend_post-1 nil 3566305745 ("" (grind) nil nil)
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil))
   shostak))
 (extend_post2 0
  (extend_post2-1 nil 3569588608
   ("" (grind) (("" (rewrite unique_error) nil nil)) nil)
   ((TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY adt-constructor-decl "(TPM_BAD_LOCALITY?)"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (antisymmetryMonad 0
  (antisymmetryMonad-1 nil 3566305746
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((resetOne adt-constructor-decl "(resetOne?)" pcr nil)
    (resetOne? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (PCR_ATTRIBUTE type-eq-decl nil pcr nil)
    (LOCALITY_SELECTION type-eq-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil)
    (hash adt-accessor-decl "[(extend?) -> PCRVAL]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pcrsReset const-decl "PCRVALUES" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (initKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (inverse const-decl "KVAL" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (srkKeyVal const-decl "K" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (modify const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (antisymmetryMonad2 0
  (antisymmetryMonad2-1 nil 3566305746
   ("" (grind)
    (("" (decompose-equality) (("" (decompose-equality) nil nil)) nil))
    nil)
   ((AND const-decl "[bool, bool -> bool]" booleans nil)
    (PCR type-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (outDigest shared-adt-accessor-decl
     "[{x: tpmAbsOutput | OUT_Extend?(x) OR OUT_PCRRead?(x)} -> PCR[HV]]"
     tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Extend adt-constructor-decl
     "[[PCR, ReturnCode] -> (OUT_Extend?)]" tpm nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Sealx? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OIAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OSAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_SaveState?(x)
           OR OUT_Startup?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x) OR OUT_Sealx?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_Sign?(x) OR OUT_CertifyKey?(x)
           OR OUT_CreateEndorsementKeyPair?(x) OR OUT_CreateRevocableEK?(x)
           OR OUT_RevokeTrust?(x) OR OUT_ReadPubek?(x)
           OR OUT_OwnerReadInternalPub?(x) OR OUT_MakeIdentity?(x)
           OR OUT_ActivateIdentity?(x) OR OUT_Extend?(x) OR OUT_PCRRead?(x)
           OR OUT_Quote?(x) OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_OIAP?(x) OR OUT_OSAP?(x)
           OR OUT_FlushSpecific?(x) OR OUT_DAA_Join?(x)
           OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (hash adt-accessor-decl "[(extend?) -> PCRVAL]" pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (>> const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (antisymmetryMonad3 0
  (antisymmetryMonad3-1 nil 3566305746
   ("" (grind)
    (("" (decompose-equality) (("" (decompose-equality) nil nil)) nil))
    nil)
   ((AND const-decl "[bool, bool -> bool]" booleans nil)
    (PCR type-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (outDigest shared-adt-accessor-decl
     "[{x: tpmAbsOutput | OUT_Extend?(x) OR OUT_PCRRead?(x)} -> PCR[HV]]"
     tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Extend adt-constructor-decl
     "[[PCR, ReturnCode] -> (OUT_Extend?)]" tpm nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Sealx? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OIAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OSAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_SaveState?(x)
           OR OUT_Startup?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x) OR OUT_Sealx?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_Sign?(x) OR OUT_CertifyKey?(x)
           OR OUT_CreateEndorsementKeyPair?(x) OR OUT_CreateRevocableEK?(x)
           OR OUT_RevokeTrust?(x) OR OUT_ReadPubek?(x)
           OR OUT_OwnerReadInternalPub?(x) OR OUT_MakeIdentity?(x)
           OR OUT_ActivateIdentity?(x) OR OUT_Extend?(x) OR OUT_PCRRead?(x)
           OR OUT_Quote?(x) OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_OIAP?(x) OR OUT_OSAP?(x)
           OR OUT_FlushSpecific?(x) OR OUT_DAA_Join?(x)
           OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (hash adt-accessor-decl "[(extend?) -> PCRVAL]" pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (b2n const-decl "nbit" bit nil))
   shostak))
 (pcr_read_post 0
  (pcr_read_post-1 nil 3566305746 ("" (grind) nil nil)
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (pcrReadOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_PcrRead const-decl "State" tpm nil))
   shostak))
 (bad_nonce 0
  (bad_nonce-1 nil 3566305747
   ("" (grind)
    (("1" (decompose-equality)
      (("1" (decompose-equality) (("1" (decompose-equality) nil nil))
        nil))
      nil)
     ("2" (decompose-equality)
      (("2" (decompose-equality) (("2" (decompose-equality) nil nil))
        nil))
      nil)
     ("3" (decompose-equality)
      (("3" (decompose-equality) (("3" (decompose-equality) nil nil))
        nil))
      nil))
    nil)
   ((tpmData_tpmNonce_extensionality formula-decl nil data nil)
    (crs shared-adt-accessor-decl "[{x: tpmData |
              tpmID?(x) OR tpmDigest?(x) OR tpmEncAuth?(x)
           OR tpmMigKeyAuth?(x) OR tpmCMKAuth?(x) OR tpmStoredData?(x)
           OR tpmSealedData?(x) OR tpmSessKey?(x) OR tpmBoundData?(x)
           OR tpmKey?(x) OR tpmStoreAsymkey?(x) OR tpmCertifyInfo?(x)
           OR tpmCertifyInfo2?(x) OR tpmQuote?(x) OR tpmQuote2?(x)
           OR tpmEKBlob?(x) OR tpmIdContents?(x) OR tpmAsymCAContents?(x)
           OR tpmXOR?(x)} ->
   CRYPTOSTATUS]" data nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmAsymCAContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEKBlob? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCertifyInfo2? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmID? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (externalData shared-adt-accessor-decl
     "[{x: tpmData | tpmQuote?(x) OR tpmQuote2?(x)} -> (tpmNonce?)]"
     data nil)
    (tpmQuote2? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (digest shared-adt-accessor-decl "[d:
   {x: tpmData | tpmMigKeyAuth?(x) OR tpmQuote?(x) OR tpmIdContents?(x)} ->
   {x: tpmData |
            IF tpmMigKeyAuth?(d) OR tpmIdContents?(d) THEN tpmDigest?(x)
            ELSE tpmCompositeHash?(x)
            ENDIF}]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_SaveState?(x)
           OR OUT_Startup?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x) OR OUT_Sealx?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_Sign?(x) OR OUT_CertifyKey?(x)
           OR OUT_CreateEndorsementKeyPair?(x) OR OUT_CreateRevocableEK?(x)
           OR OUT_RevokeTrust?(x) OR OUT_ReadPubek?(x)
           OR OUT_OwnerReadInternalPub?(x) OR OUT_MakeIdentity?(x)
           OR OUT_ActivateIdentity?(x) OR OUT_Extend?(x) OR OUT_PCRRead?(x)
           OR OUT_Quote?(x) OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_OIAP?(x) OR OUT_OSAP?(x)
           OR OUT_FlushSpecific?(x) OR OUT_DAA_Join?(x)
           OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OSAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OIAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (a shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_SetTempDeactivated?(x) OR OUT_TakeOwnership?(x)
           OR OUT_OwnerClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_Seal?(x) OR OUT_Unseal?(x) OR OUT_UnBind?(x)
           OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_Sealx?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_OwnerReadInternalPub?(x) OR OUT_Quote?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   authOut[HV]]" tpm nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sealx? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (sig adt-accessor-decl
         "[d: {x: tpmAbsOutput | OUT_Sign?(x) OR OUT_Quote?(x)} ->
   {x: tpmData[HV] | IF OUT_Sign?(d) THEN TRUE ELSE tpmQuote?(x) ENDIF}]"
         tpm nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (tpmStoreAsymkey?)]" data
     nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (clear adt-constructor-decl "(clear?)" keydata nil)
    (clear? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" keydata
     nil)
    (key adt-accessor-decl "[(tpmKey?) -> KVAL]" data nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (signed adt-constructor-decl "[[KVAL, CRYPTOSTATUS] -> (signed?)]"
     keydata nil)
    (signed? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" keydata
     nil)
    (KVAL type-eq-decl nil keydata nil)
    (tpmCompositeHash adt-constructor-decl
     "[PCR_COMPOSITE -> (tpmCompositeHash?)]" data nil)
    (PCR_COMPOSITE type-eq-decl nil pcr nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?), CRYPTOSTATUS] -> (tpmQuote?)]"
     data nil)
    (CRYPTOSTATUS type-decl nil keydata nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (OUT_Quote adt-constructor-decl
     "[[list[PCR], (tpmQuote?), authOut, ReturnCode] -> (OUT_Quote?)]"
     tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (authOut type-eq-decl nil data nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> list[PCR]]" tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (tpmAuthData? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Quote const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "KVAL" key nil)
    (inverse const-decl "KVAL" keydata nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (bad_signing_key 0
  (bad_signing_key-1 nil 3566305747
   ("" (grind)
    (("1" (decompose-equality)
      (("1" (decompose-equality) (("1" (decompose-equality) nil nil))
        nil))
      nil)
     ("2" (decompose-equality)
      (("2" (decompose-equality) (("2" (decompose-equality) nil nil))
        nil))
      nil)
     ("3" (decompose-equality)
      (("3" (decompose-equality) (("3" (decompose-equality) nil nil))
        nil))
      nil)
     ("4" (decompose-equality)
      (("4" (decompose-equality) (("4" (decompose-equality) nil nil))
        nil))
      nil)
     ("5" (decompose-equality)
      (("5" (decompose-equality) (("5" (decompose-equality) nil nil))
        nil))
      nil)
     ("6" (decompose-equality)
      (("6" (decompose-equality) (("6" (decompose-equality) nil nil))
        nil))
      nil)
     ("7" (decompose-equality)
      (("7" (decompose-equality) (("7" (decompose-equality) nil nil))
        nil))
      nil)
     ("8" (decompose-equality)
      (("8" (decompose-equality) (("8" (decompose-equality) nil nil))
        nil))
      nil)
     ("9" (decompose-equality)
      (("9" (decompose-equality) (("9" (decompose-equality) nil nil))
        nil))
      nil))
    nil)
   ((tpmAuthData? const-decl "bool" data nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (PCR type-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> list[PCR]]" tpm nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (authOut type-eq-decl nil data nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Quote adt-constructor-decl
     "[[list[PCR], (tpmQuote?), authOut, ReturnCode] -> (OUT_Quote?)]"
     tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (CRYPTOSTATUS type-decl nil keydata nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?), CRYPTOSTATUS] -> (tpmQuote?)]"
     data nil)
    (PCR_COMPOSITE type-eq-decl nil pcr nil)
    (tpmCompositeHash adt-constructor-decl
     "[PCR_COMPOSITE -> (tpmCompositeHash?)]" data nil)
    (KVAL type-eq-decl nil keydata nil)
    (signed? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" keydata
     nil)
    (signed adt-constructor-decl "[[KVAL, CRYPTOSTATUS] -> (signed?)]"
     keydata nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (key adt-accessor-decl "[(tpmKey?) -> KVAL]" data nil)
    (clear? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" keydata
     nil)
    (clear adt-constructor-decl "(clear?)" keydata nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (TRUE const-decl "bool" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (tpmStoreAsymkey?)]" data
     nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (sig adt-accessor-decl
         "[d: {x: tpmAbsOutput | OUT_Sign?(x) OR OUT_Quote?(x)} ->
   {x: tpmData[HV] | IF OUT_Sign?(d) THEN TRUE ELSE tpmQuote?(x) ENDIF}]"
         tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Sealx? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (a shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_SetTempDeactivated?(x) OR OUT_TakeOwnership?(x)
           OR OUT_OwnerClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_Seal?(x) OR OUT_Unseal?(x) OR OUT_UnBind?(x)
           OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_Sealx?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_OwnerReadInternalPub?(x) OR OUT_Quote?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   authOut[HV]]" tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OIAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OSAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_SaveState?(x)
           OR OUT_Startup?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x) OR OUT_Sealx?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_Sign?(x) OR OUT_CertifyKey?(x)
           OR OUT_CreateEndorsementKeyPair?(x) OR OUT_CreateRevocableEK?(x)
           OR OUT_RevokeTrust?(x) OR OUT_ReadPubek?(x)
           OR OUT_OwnerReadInternalPub?(x) OR OUT_MakeIdentity?(x)
           OR OUT_ActivateIdentity?(x) OR OUT_Extend?(x) OR OUT_PCRRead?(x)
           OR OUT_Quote?(x) OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_OIAP?(x) OR OUT_OSAP?(x)
           OR OUT_FlushSpecific?(x) OR OUT_DAA_Join?(x)
           OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (crstat shared-adt-accessor-decl
     "[{x: CRYPTOSTATUS | encrypted?(x) OR signed?(x) OR sealed?(x)} ->
   CRYPTOSTATUS]" keydata nil)
    (key shared-adt-accessor-decl
     "[{x: CRYPTOSTATUS | encrypted?(x) OR signed?(x) OR sealed?(x)} -> KVAL]"
     keydata nil)
    (sealed? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" keydata
     nil)
    (encrypted? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" keydata
     nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (digest shared-adt-accessor-decl "[d:
   {x: tpmData | tpmMigKeyAuth?(x) OR tpmQuote?(x) OR tpmIdContents?(x)} ->
   {x: tpmData |
            IF tpmMigKeyAuth?(d) OR tpmIdContents?(d) THEN tpmDigest?(x)
            ELSE tpmCompositeHash?(x)
            ENDIF}]" data nil)
    (tpmQuote2? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (externalData shared-adt-accessor-decl
     "[{x: tpmData | tpmQuote?(x) OR tpmQuote2?(x)} -> (tpmNonce?)]"
     data nil)
    (tpmID? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCertifyInfo2? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEKBlob? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmAsymCAContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (crs shared-adt-accessor-decl "[{x: tpmData |
              tpmID?(x) OR tpmDigest?(x) OR tpmEncAuth?(x)
           OR tpmMigKeyAuth?(x) OR tpmCMKAuth?(x) OR tpmStoredData?(x)
           OR tpmSealedData?(x) OR tpmSessKey?(x) OR tpmBoundData?(x)
           OR tpmKey?(x) OR tpmStoreAsymkey?(x) OR tpmCertifyInfo?(x)
           OR tpmCertifyInfo2?(x) OR tpmQuote?(x) OR tpmQuote2?(x)
           OR tpmEKBlob?(x) OR tpmIdContents?(x) OR tpmAsymCAContents?(x)
           OR tpmXOR?(x)} ->
   CRYPTOSTATUS]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Quote const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (private const-decl "KVAL" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (inverse const-decl "KVAL" keydata nil))
   shostak))
 (bad_pcrs 0
  (bad_pcrs-1 nil 3572203837
   ("" (grind)
    (("1" (decompose-equality -6)
      (("1" (decompose-equality)
        (("1" (decompose-equality) (("1" (decompose-equality) nil nil))
          nil))
        nil))
      nil)
     ("2" (decompose-equality -6)
      (("2" (decompose-equality)
        (("2" (decompose-equality) (("2" (decompose-equality) nil nil))
          nil))
        nil))
      nil)
     ("3" (decompose-equality -6)
      (("3" (decompose-equality)
        (("3" (decompose-equality) (("3" (decompose-equality) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((tpmAuthData? const-decl "bool" data nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (PCR type-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> list[PCR]]" tpm nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (authOut type-eq-decl nil data nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Quote adt-constructor-decl
     "[[list[PCR], (tpmQuote?), authOut, ReturnCode] -> (OUT_Quote?)]"
     tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (CRYPTOSTATUS type-decl nil keydata nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?), CRYPTOSTATUS] -> (tpmQuote?)]"
     data nil)
    (PCR_COMPOSITE type-eq-decl nil pcr nil)
    (tpmCompositeHash adt-constructor-decl
     "[PCR_COMPOSITE -> (tpmCompositeHash?)]" data nil)
    (KVAL type-eq-decl nil keydata nil)
    (signed? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" keydata
     nil)
    (signed adt-constructor-decl "[[KVAL, CRYPTOSTATUS] -> (signed?)]"
     keydata nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (key adt-accessor-decl "[(tpmKey?) -> KVAL]" data nil)
    (clear? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" keydata
     nil)
    (clear adt-constructor-decl "(clear?)" keydata nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (TRUE const-decl "bool" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (tpmStoreAsymkey?)]" data
     nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (sig adt-accessor-decl
         "[d: {x: tpmAbsOutput | OUT_Sign?(x) OR OUT_Quote?(x)} ->
   {x: tpmData[HV] | IF OUT_Sign?(d) THEN TRUE ELSE tpmQuote?(x) ENDIF}]"
         tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Sealx? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (a shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_SetTempDeactivated?(x) OR OUT_TakeOwnership?(x)
           OR OUT_OwnerClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_Seal?(x) OR OUT_Unseal?(x) OR OUT_UnBind?(x)
           OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_Sealx?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_OwnerReadInternalPub?(x) OR OUT_Quote?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   authOut[HV]]" tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OIAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OSAP? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_SaveState?(x)
           OR OUT_Startup?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x) OR OUT_Sealx?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_Sign?(x) OR OUT_CertifyKey?(x)
           OR OUT_CreateEndorsementKeyPair?(x) OR OUT_CreateRevocableEK?(x)
           OR OUT_RevokeTrust?(x) OR OUT_ReadPubek?(x)
           OR OUT_OwnerReadInternalPub?(x) OR OUT_MakeIdentity?(x)
           OR OUT_ActivateIdentity?(x) OR OUT_Extend?(x) OR OUT_PCRRead?(x)
           OR OUT_Quote?(x) OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_OIAP?(x) OR OUT_OSAP?(x)
           OR OUT_FlushSpecific?(x) OR OUT_DAA_Join?(x)
           OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (crs shared-adt-accessor-decl "[{x: tpmData |
              tpmID?(x) OR tpmDigest?(x) OR tpmEncAuth?(x)
           OR tpmMigKeyAuth?(x) OR tpmCMKAuth?(x) OR tpmStoredData?(x)
           OR tpmSealedData?(x) OR tpmSessKey?(x) OR tpmBoundData?(x)
           OR tpmKey?(x) OR tpmStoreAsymkey?(x) OR tpmCertifyInfo?(x)
           OR tpmCertifyInfo2?(x) OR tpmQuote?(x) OR tpmQuote2?(x)
           OR tpmEKBlob?(x) OR tpmIdContents?(x) OR tpmAsymCAContents?(x)
           OR tpmXOR?(x)} ->
   CRYPTOSTATUS]" data nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmAsymCAContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEKBlob? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCertifyInfo2? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmID? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (externalData shared-adt-accessor-decl
     "[{x: tpmData | tpmQuote?(x) OR tpmQuote2?(x)} -> (tpmNonce?)]"
     data nil)
    (tpmQuote2? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (digest shared-adt-accessor-decl "[d:
   {x: tpmData | tpmMigKeyAuth?(x) OR tpmQuote?(x) OR tpmIdContents?(x)} ->
   {x: tpmData |
            IF tpmMigKeyAuth?(d) OR tpmIdContents?(d) THEN tpmDigest?(x)
            ELSE tpmCompositeHash?(x)
            ENDIF}]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (dig adt-accessor-decl "[(tpmCompositeHash?) -> PCR_COMPOSITE[HV]]"
     data nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Quote const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "KVAL" key nil)
    (inverse const-decl "KVAL" keydata nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (quote? const-decl "bool" tpm nil))
   shostak))
 (check_PCRS_TCC1 0
  (check_PCRS_TCC1-1 nil 3569598694 ("" (tcc))
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (check_PCRS 0
  (check_PCRS-1 nil 3566306182 ("" (grind) nil nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (quote_post 0
  (quote_post-1 nil 3566305747 ("" (grind) nil nil)
   ((PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil))
   shostak))
 (quote_with_prev_key_TCC1 0
  (quote_with_prev_key_TCC1-1 nil 3569598694 ("" (tcc))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (updateLoc const-decl "mem" memory nil)
    (TPM_Quote const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "KVAL" key nil)
    (inverse const-decl "KVAL" keydata nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (quote_with_prev_key 0
  (quote_with_prev_key-1 nil 3566306408 ("" (grind) nil nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (updateLoc const-decl "mem" memory nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (private const-decl "KVAL" key nil))
   shostak))
 (no_senter 0
  (no_senter-1 nil 3566305754 ("" (grind) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (inverse const-decl "KVAL" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (privateKey const-decl "(tpmKey?)" key nil)
    (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (stanyFlagsInit const-decl "StanyFlags" StanyFlags nil)
    (stanyDataInit const-decl "StanyData" StanyData nil)
    (stclearFlagsInit const-decl "StclearFlags" StclearFlags nil)
    (stclearDataInit const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (add const-decl "(nonempty?)" sets nil)
    (restrict const-decl "R" restrict nil)
    (CPU_sinit const-decl "State" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (private const-decl "KVAL" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil))
   shostak))
 (pcr_reset_post 0
  (pcr_reset_post-1 nil 3569607956 ("" (grind) nil nil)
   ((PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validatePCRVals def-decl "nat" tpm nil)
    (member const-decl "bool" sets nil)
    (pcrResetState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (pcrResetOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PCR_Reset const-decl "State" tpm nil))
   shostak))
 (pcr_reset_post2 0
  (pcr_reset_post2-1 nil 3569611004
   ("" (lemma validatePCRs)
    (("" (lemma unique_error)
      (("" (grind)
        (("" (rewrite unique_error)
          (("" (rewrite unique_error) nil nil)) nil))
        nil))
      nil))
    nil)
   ((unique_error formula-decl nil tpm nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (TPM_NOTLOCAL adt-constructor-decl "(TPM_NOTLOCAL?)" ReturnCodes
     nil)
    (TPM_NOTLOCAL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTRESETABLE adt-constructor-decl "(TPM_NOTRESETABLE?)"
     ReturnCodes nil)
    (TPM_NOTRESETABLE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (TPM_PCR_Reset const-decl "State" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (pcrResetOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (pcrResetState const-decl "tpmAbsState" tpm nil)
    (member const-decl "bool" sets nil)
    (validatePCRVals def-decl "nat" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (validatePCRs formula-decl nil tpm nil))
   shostak))
 (change_auth_post 0
  (change_auth_post-1 nil 3569865128 ("" (grind) nil nil)
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "KVAL" keydata nil)
    (decryptStatus const-decl "CRYPTOSTATUS" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (decrypt const-decl "tpmData" key nil)
    (changeAuthOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ChangeAuth const-decl "State" tpm nil))
   shostak)))

