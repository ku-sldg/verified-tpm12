(tpm
 (unique_error 0
  (unique_error-1 nil 3567442423
   ("" (grind) (("" (decompose-equality) nil nil)) nil)
   ((ReturnCode type-decl nil ReturnCodes nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (OUT_Error adt-constructor-decl "[ReturnCode -> (OUT_Error?)]" tpm
     nil))
   shostak))
 (sigQuote 0 (sigQuote-1 nil 3588351385 ("" (grind)) nil shostak))
 (IMP_StateMonad_TCC1 0
  (IMP_StateMonad_TCC1-1 nil 3596384511
   (""
    (inst 1 "(# restore := initSaveData,
memory := empty,
srk := srkVal,
ek := ekVal,
keyGenCnt := initKeyVal,
keys := (#vals:=emptyset,keys:=emptyset#),
pcrs := pcrsPower,
locality := 4,
permFlags := permFlagsDefault,
permData := permDataDefault,
stanyFlags := stanyFlagsDefault,
stanyData := stanyDataDefault,
stclearFlags := stclearFlagsDefault,
stclearData := stclearDataDefault,
outData := null,
randCnt := 0 #)")
    nil nil)
   ((null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (tpmCMKDelegate? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (pcrsPower const-decl "PCRVALUES" pcr nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (emptyset const-decl "set" sets nil)
    (set type-eq-decl nil sets nil)
    (privKVAL type-eq-decl nil keydata nil)
    (<= const-decl "bool" reals nil)
    (integer nonempty-type-from-decl nil integers nil)
    (initKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (empty const-decl "mem" memory nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (tpmDefault_TCC1 0
  (tpmDefault_TCC1-1 nil 3588337277 ("" (tcc))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (tpmPostInit_TCC1 0
  (tpmPostInit_TCC1-1 nil 3588337277 ("" (tcc))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (tpmStartup_TCC1 0
  (tpmStartup_TCC1-1 nil 3588337277 ("" (tcc))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil))
   nil))
 (tpmRestore_TCC1 0
  (tpmRestore_TCC1-1 nil 3588337277 ("" (tcc))
   ((srkKeyVal const-decl "K" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (ekKeyVal const-decl "K" tpm nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (srkVal const-decl "(tpmKey?)" tpm nil)
    (ekVal const-decl "(tpmKey?)" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (wellFormed? const-decl "bool" tpm nil))
   nil))
 (changeLocalityState_TCC1 0
  (changeLocalityState_TCC1-1 nil 3588337277 ("" (tcc))
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (gen_key_state 0
  (gen_key_state-1 nil 3588606930 ("" (grind) nil nil)
   ((genKeyState const-decl "tpmAbsState" tpm nil)) shostak))
 (rand_state 0
  (rand_state-1 nil 3588607080 ("" (grind) nil nil)
   ((randState const-decl "tpmAbsState" tpm nil)) shostak))
 (takeOwnershipState_TCC1 0
  (takeOwnershipState_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (takeOwnershipState_TCC2 0
  (takeOwnershipState_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (takeOwnershipState_TCC3 0
  (takeOwnershipState_TCC3-1 nil 3590256780 ("" (tcc))
   ((/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (takeOwnershipState_TCC4 0
  (takeOwnershipState_TCC4-1 nil 3590256780 ("" (subtype-tcc) nil nil)
   nil shostak))
 (takeOwnershipOut_TCC1 0
  (takeOwnershipOut_TCC1-1 nil 3588337277 ("" (subtype-tcc) nil nil)
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmAuthData? const-decl "bool" data nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (encrypt const-decl "tpmData" key nil))
   shostak))
 (sealState_TCC1 0
  (sealState_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (sealOut_TCC1 0
  (sealOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (seal? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (sealOut_TCC2 0
  (sealOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unsealState_TCC1 0
  (unsealState_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil))
   nil))
 (unsealOut_TCC1 0
  (unsealOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (unsealOut_TCC2 0
  (unsealOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBindOut_TCC1 0
  (unBindOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (unBindOut_TCC2 0
  (unBindOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (unBindOut_TCC3 0
  (unBindOut_TCC3-1 nil 3590256780 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createWrapKeyState_TCC1 0
  (createWrapKeyState_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (createWrapKeyState_TCC2 0
  (createWrapKeyState_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil))
   nil))
 (createWrapKeyState_TCC3 0
  (createWrapKeyState_TCC3-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (createWrapKeyOut_TCC1 0
  (createWrapKeyOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (createWrapKeyOut_TCC2 0
  (createWrapKeyOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (validateLoadKey2_TCC1 0
  (validateLoadKey2_TCC1-1 nil 3590256780 ("" (subtype-tcc) nil nil)
   nil shostak))
 (validateLoadKey2_TCC2 0
  (validateLoadKey2_TCC2-1 nil 3590256780 ("" (subtype-tcc) nil nil)
   nil shostak))
 (getPubKeyOut_TCC1 0
  (getPubKeyOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (/= const-decl "boolean" notequal nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (getPubKeyOut_TCC2 0
  (getPubKeyOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createMigBlobState_TCC1 0
  (createMigBlobState_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil))
   nil))
 (createMigBlobOut_TCC1 0
  (createMigBlobOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createMigBlobOut_TCC2 0
  (createMigBlobOut_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (key adt-accessor-decl "[(tpmMigKeyAuth?) -> (tpmKey?)]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (createMigBlobOut_TCC3 0
  (createMigBlobOut_TCC3-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (createMigBlobOut_TCC4 0
  (createMigBlobOut_TCC4-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil))
   nil))
 (createMigBlobOut_TCC5 0
  (createMigBlobOut_TCC5-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (createMigBlobOut_TCC6 0
  (createMigBlobOut_TCC6-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (convertMigBlob?_TCC1 0
  (convertMigBlob?_TCC1-1 nil 3590798567 ("" (subtype-tcc) nil nil) nil
   shostak))
 (convertMigBlobState_TCC1 0
  (convertMigBlobState_TCC1-1 nil 3588337277 ("" (tcc))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (convertMigBlob? const-decl "bool" tpm nil))
   nil))
 (convertMigBlobOut_TCC1 0
  (convertMigBlobOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (migrateKeyOut_TCC1 0
  (migrateKeyOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (CMKCreateKeyState_TCC1 0
  (CMKCreateKeyState_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil))
   nil))
 (CMKCreateKeyState_TCC2 0
  (CMKCreateKeyState_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKCreateKeyOut_TCC1 0
  (CMKCreateKeyOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKCreateKeyOut_TCC2 0
  (CMKCreateKeyOut_TCC2-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil))
   nil))
 (CMKCreateKeyOut_TCC3 0
  (CMKCreateKeyOut_TCC3-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKCreateKeyOut_TCC4 0
  (CMKCreateKeyOut_TCC4-1 nil 3588337277 ("" (tcc))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (CMKCreateBlob?_TCC1 0
  (CMKCreateBlob?_TCC1-1 nil 3590787245 ("" (subtype-tcc) nil nil) nil
   shostak))
 (CMKCreateBlobOut2_TCC1 0
  (CMKCreateBlobOut2_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (CMKCreateBlobOut2_TCC2 0
  (CMKCreateBlobOut2_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmAuthData? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmXOR? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKCreateBlobState_TCC1 0
  (CMKCreateBlobState_TCC1-1 nil 3588440968 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (CMKCreateBlob? const-decl "bool" tpm nil))
   nil))
 (CMKConvertMigration?_TCC1 0
  (CMKConvertMigration?_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKConvertMigration?_TCC2 0
  (CMKConvertMigration?_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (CMKConvertMigration?_TCC3 0
  (CMKConvertMigration?_TCC3-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OAEP? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (CMKConvertMigration?_TCC4 0
  (CMKConvertMigration?_TCC4-1 nil 3590858636
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil))
   nil))
 (CMKConvertMigrationState_TCC1 0
  (CMKConvertMigrationState_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKConvertMigrationState_TCC2 0
  (CMKConvertMigrationState_TCC2-1 nil 3590781024 ("" (tcc))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (unXOR const-decl "tpmData" data nil))
   nil))
 (CMKConvertMigrationOut_TCC1 0
  (CMKConvertMigrationOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((minus_int_is_int application-judgement "int" integers nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (CMKConvertMigrationOut_TCC2 0
  (CMKConvertMigrationOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (CMKConvertMigrationOut_TCC3 0
  (CMKConvertMigrationOut_TCC3-1 nil 3588337277 ("" (tcc))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (CMKConvertMigrationOut_TCC4 0
  (CMKConvertMigrationOut_TCC4-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatMigrateAsymkey)
      (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil))
   nil))
 (CMKConvertMigrationOut_TCC5 0
  (CMKConvertMigrationOut_TCC5-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil))
   nil))
 (CMKConvertMigrationOut_TCC6 0
  (CMKConvertMigrationOut_TCC6-1 nil 3590858636
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (certifyKeyOut2_TCC1 0
  (certifyKeyOut2_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (certifyKeyOut2_TCC2 0
  (certifyKeyOut2_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (certifyKeyOut2_TCC3 0
  (certifyKeyOut2_TCC3-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (skosimp)
        (("" (lemma keyEncDatStoreAsymkey)
          (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   shostak))
 (certifyKeyOut2_TCC4 0
  (certifyKeyOut2_TCC4-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (certifyKeyOut2_TCC5 0
  (certifyKeyOut2_TCC5-1 nil 3588337277 ("" (tcc)) nil nil))
 (certifyKeyState_TCC1 0
  (certifyKeyState_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (/= const-decl "boolean" notequal nil)
    (certifyKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil))
   nil))
 (makeIdentityState_TCC1 0
  (makeIdentityState_TCC1-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil))
   nil))
 (makeIdentityState_TCC2 0
  (makeIdentityState_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encrypt const-decl "tpmData" key nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (makeIdentityOut_TCC1 0
  (makeIdentityOut_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (makeIdentityOut_TCC2 0
  (makeIdentityOut_TCC2-1 nil 3588337277
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil))
   nil))
 (makeIdentityOut_TCC3 0
  (makeIdentityOut_TCC3-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (makeIdentityOut_TCC4 0
  (makeIdentityOut_TCC4-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activateIdentityState_TCC1 0
  (activateIdentityState_TCC1-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (activateIdentityOut_TCC1 0
  (activateIdentityOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (/= const-decl "boolean" notequal nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activateIdentityOut_TCC2 0
  (activateIdentityOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (activateIdentityOut_TCC3 0
  (activateIdentityOut_TCC3-1 nil 3591455030 ("" (subtype-tcc) nil nil)
   nil nil))
 (activateIdentityOut_TCC4 0
  (activateIdentityOut_TCC4-1 nil 3591455030 ("" (subtype-tcc) nil nil)
   nil nil))
 (quoteOut_TCC1 0
  (quoteOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (quote? const-decl "bool" tpm nil)
    (sign const-decl "tpmData" key nil))
   nil))
 (quoteOut_TCC2 0
  (quoteOut_TCC2-1 nil 3588337277
   ("" (then (skosimp) (lemma keyEncDatStoreAsymkey) (grind)))
   ((encStoreAsymkey? const-decl "bool" data nil)
    (quote? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (quoteOut_TCC3 0
  (quoteOut_TCC3-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (quote? const-decl "bool" tpm nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (validatePCRVals_TCC1 0
  (validatePCRVals_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<< adt-def-decl "(well_founded?[list])" list_adt nil)
    (member const-decl "bool" sets nil))
   nil))
 (validatePCRs 0
  (validatePCRs-1 nil 3588350828
   ("" (induct select)
    (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (grind) nil nil))
    nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (member const-decl "bool" sets nil)
    (list_induction formula-decl nil list_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (validatePCRVals def-decl "nat" tpm nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil))
   shostak))
 (check_validatePcrs_TCC1 0
  (check_validatePcrs_TCC1-1 nil 3588337277 ("" (tcc))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (list2set def-decl "set[T]" list2set nil)
    (every adt-def-decl "boolean" list_adt nil))
   nil))
 (check_validatePcrs 0
  (check_validatePcrs-1 nil 3588350816 ("" (grind) nil nil)
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (list2set def-decl "set[T]" list2set nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (add const-decl "(nonempty?)" sets nil)
    (restrict const-decl "R" restrict nil)
    (member const-decl "bool" sets nil)
    (emptyset const-decl "set" sets nil)
    (validatePCRVals def-decl "nat" tpm nil))
   shostak))
 (changeAuthState_TCC1 0
  (changeAuthState_TCC1-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil))
   nil))
 (changeAuthOut_TCC1 0
  (changeAuthOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (changeAuthOut2 const-decl "(tpmSecret?)" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (changeAuthOut_TCC2 0
  (changeAuthOut_TCC2-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (changeAuthOut_TCC3 0
  (changeAuthOut_TCC3-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (changeAuthOut2 const-decl "(tpmSecret?)" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (changeAuthOut_TCC4 0
  (changeAuthOut_TCC4-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (tpmAuthData? const-decl "bool" data nil))
   nil))
 (dataBindOut_TCC1 0
  (dataBindOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((HV formal-nonempty-type-decl nil tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (buildQuoteFromMemState_TCC1 0
  (buildQuoteFromMemState_TCC1-1 nil 3588355313 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil))
   nil))
 (buildQuoteFromMemState_TCC2 0
  (buildQuoteFromMemState_TCC2-1 nil 3588355313 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil))
   nil))
 (buildQuoteFromMemOut_TCC1 0
  (buildQuoteFromMemOut_TCC1-1 nil 3588355313
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil))
   shostak))
 (buildQuoteFromMemOut_TCC2 0
  (buildQuoteFromMemOut_TCC2-1 nil 3596288795
   ("" (subtype-tcc) nil nil) nil nil))
 (certify?_TCC1 0
  (certify?_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil))
   nil))
 (certOut_TCC1 0
  (certOut_TCC1-1 nil 3588337277 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil))
   nil))
 (certOut_TCC2 0
  (certOut_TCC2-1 nil 3589642387 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil))
   nil))
 (certOut_TCC3 0
  (certOut_TCC3-1 nil 3589642387 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil))
   nil))
 (certOut_TCC4 0
  (certOut_TCC4-1 nil 3589642387 ("" (tcc))
   ((inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (initSessKeyVal const-decl "K" tpm nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (executeCom_TCC1 0
  (executeCom_TCC1-1 nil 3588337277 ("" (tcc))
   ((afterInit? const-decl "bool" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   nil)))

