(tpm
 (unique_hash 0
  (unique_hash-1 nil 3559055101 ("" (postpone) nil nil) nil shostak))
 (IMP_StateMonad_TCC1 0
  (IMP_StateMonad_TCC1-1 nil 3560623920 ("" (existence-tcc) nil nil)
   nil nil))
 (tpmPostInit_TCC1 0
  (tpmPostInit_TCC1-1 nil 3558896333 ("" (subtype-tcc) nil nil)
   ((ekKeyVal const-decl "K" tpm nil) (ekVal const-decl "KEY" tpm nil))
   nil))
 (tpmPostInit_TCC2 0
  (tpmPostInit_TCC2-1 nil 3558896333 ("" (subtype-tcc) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (srkVal const-decl "KEY" tpm nil))
   nil))
 (tpmPostInit_TCC3 0
  (tpmPostInit_TCC3-1 nil 3558896333 ("" (subtype-tcc) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (srkVal const-decl "KEY" tpm nil) (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "KEY" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (tpmStartup_TCC1 0
  (tpmStartup_TCC1-1 nil 3558896333 ("" (subtype-tcc) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (srkVal const-decl "KEY" tpm nil) (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "KEY" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (wellFormed? const-decl "bool" tpm nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (tpmRestore_TCC1 0
  (tpmRestore_TCC1-1 nil 3558896333 ("" (subtype-tcc) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (srkVal const-decl "KEY" tpm nil) (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "KEY" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (wellFormed? const-decl "bool" tpm nil))
   nil))
 (changeLocalityState_TCC1 0
  (changeLocalityState_TCC1-1 nil 3558896333 ("" (subtype-tcc) nil nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (loadKey2State_TCC1 0
  (loadKey2State_TCC1-1 nil 3560611902 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (wrapKey? const-decl "bool" key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (parentKey const-decl "(asymKey?)" key nil))
   nil))
 (executeCom_TCC1 0
  (executeCom_TCC1-1 nil 3558896333 ("" (subtype-tcc) nil nil)
   ((afterInit? const-decl "bool" tpm nil)
    (afterStartup? const-decl "bool" tpm nil))
   nil))
 (unsealOut_TCC1 0
  (unsealOut_TCC1-1 nil 3560533074 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key
     nil))
   nil))
 (unBind?_TCC1 0
  (unBind?_TCC1-1 nil 3560612398 ("" (subtype-tcc) nil nil) nil nil))
 (unBindOut_TCC1 0
  (unBindOut_TCC1-1 nil 3560534908 ("" (subtype-tcc) nil nil) nil nil))
 (createWrapKeyOut_TCC1 0
  (createWrapKeyOut_TCC1-1 nil 3560014145 ("" (subtype-tcc) nil nil)
   ((createWrapKey? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (wrapKey? const-decl "bool" key nil))
   nil))
 (makeIdentityOut_TCC1 0
  (makeIdentityOut_TCC1-1 nil 3560093032 ("" (subtype-tcc) nil nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (wrapKey? const-decl "bool" key nil))
   nil))
 (makeIdentityOut_TCC2 0
  (makeIdentityOut_TCC2-1 nil 3560093032 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (wrapKey? const-decl "bool" key nil))
   nil))
 (startup_post 0
  (startup_post-1 nil 3559054449 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (restoreState const-decl "tpmAbsState" tpm nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (deactivateState const-decl "tpmAbsState" tpm nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" tpm nil))
   shostak))
 (save_state_post 0
  (save_state_post-1 nil 3559054449 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_SaveState const-decl "State" tpm nil))
   shostak))
 (startup_after_init 0
  (startup_after_init-1 nil 3560188468 ("" (grind) nil nil)
   ((srkKeyVal const-decl "K" tpm nil)
    (srkVal const-decl "KEY" tpm nil) (ekKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "KEY" tpm nil)
    (initKeyVal const-decl "K" tpm nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (resetMonad 0
  (resetMonad-1 nil 3560188475
   ("" (grind) (("" (postpone) nil nil)) nil) nil shostak))
 (antisymmetryMonad 0
  (antisymmetryMonad-1 nil 3560188545
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((resetOne adt-constructor-decl "(resetOne?)" pcr nil)
    (resetOne? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (PCRFLAGS type-eq-decl nil pcr nil)
    (PCRFLAG type-eq-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pcrsReset const-decl "PCRS" pcr nil)
    (allResetAccess const-decl "PCRFLAGS" pcr nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (permDataInit const-decl "PermData" PermanentData nil)
    (permFlagsInit const-decl "PermFlags" PermanentFlags nil)
    (initKeyVal const-decl "K" tpm nil)
    (ekVal const-decl "KEY" tpm nil) (ekKeyVal const-decl "K" tpm nil)
    (srkVal const-decl "KEY" tpm nil)
    (srkKeyVal const-decl "K" tpm nil)
    (>>= const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (modify const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (KEY type-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (pcrsExtend const-decl "PCRS" pcr nil)
    (HV formal-nonempty-type-decl nil tpm nil))
   shostak))
 (antisymmetryMonad2 0
  (antisymmetryMonad2-1 nil 3560188568
   ("" (grind) (("" (postpone) nil nil)) nil) nil shostak))
 (antisymmetryMonad3 0
  (antisymmetryMonad3-1 nil 3560188590
   ("" (grind) (("" (postpone) nil nil)) nil) nil shostak))
 (take_ownership_post 0
  (take_ownership_post-1 nil 3560174426 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" tpm nil))
   shostak))
 (owner_clear_post 0
  (owner_clear_post-1 nil 3560181836 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerClear const-decl "State" tpm nil))
   shostak))
 (force_clear_post 0
  (force_clear_post-1 nil 3560181971 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (forceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ForceClear const-decl "State" tpm nil))
   shostak))
 (disable_owner_clear_post 0
  (disable_owner_clear_post-1 nil 3560181966 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableOwnerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableOwnerClear const-decl "State" tpm nil))
   shostak))
 (disable_force_clear_post 0
  (disable_force_clear_post-1 nil 3560181960 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableForceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableForceClear const-decl "State" tpm nil))
   shostak))
 (authorize_migration_key_post 0
  (authorize_migration_key_post-1 nil 3560184289 ("" (grind) nil nil)
   ((tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" tpm nil))
   shostak))
 (create_mig_blob_post 0
  (create_mig_blob_post-1 nil 3560619538 ("" (grind) nil nil)
   ((tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" tpm nil))
   shostak))
 (migrate_key_post 0
  (migrate_key_post-1 nil 3560622411 ("" (grind) nil nil)
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_MigrateKey const-decl "State" tpm nil))
   shostak))
 (create_wrap_key_post_TCC1 0
  (create_wrap_key_post_TCC1-1 nil 3560014145
   ("" (subtype-tcc) nil nil)
   ((afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (wrapKey? const-decl "bool" key nil))
   nil))
 (create_wrap_key_post 0
  (create_wrap_key_post-1 nil 3560014244 ("" (grind) nil nil)
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil))
   shostak))
 (create_wrap_key_pred_test_TCC1 0
  (create_wrap_key_pred_test_TCC1-1 nil 3560610941
   ("" (subtype-tcc) nil nil)
   ((createWrapKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (wrapKey? const-decl "bool" key nil))
   nil))
 (create_wrap_key_pred_test 0
  (create_wrap_key_pred_test-1 nil 3560610942 ("" (grind) nil nil)
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil))
   shostak))
 (load_key_post 0
  (load_key_post-1 nil 3560011753 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (wrapKey? const-decl "bool" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil))
   shostak))
 (load_key_pred_test_TCC1 0
  (load_key_pred_test_TCC1-1 nil 3560012117 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (wrapKey? const-decl "bool" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (loadKey2? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil))
   nil))
 (load_key_pred_test 0
  (load_key_pred_test-1 nil 3560012072 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (wrapKey? const-decl "bool" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (loadKey2? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (checkKey const-decl "bool" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (addKey const-decl "KEYSET" key nil))
   shostak))
 (create_endorsement_key_pair_post 0
  (create_endorsement_key_pair_post-1 nil 3560019231
   ("" (grind) nil nil)
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createEndorsementKeyPairOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateEndorsementKeyPair const-decl "State" tpm nil))
   shostak))
 (read_pub_ek_post 0
  (read_pub_ek_post-1 nil 3560077995 ("" (grind) nil nil)
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" key nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ReadPubek const-decl "State" tpm nil))
   shostak))
 (make_identity_post_TCC1 0
  (make_identity_post_TCC1-1 nil 3560093032 ("" (subtype-tcc) nil nil)
   ((afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil)
    (wrapKey? const-decl "bool" key nil))
   nil))
 (make_identity_post_TCC2 0
  (make_identity_post_TCC2-1 nil 3560093032 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmData type-decl nil key nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (wrapKey? const-decl "bool" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil))
   nil))
 (make_identity_post 0
  (make_identity_post-1 nil 3560093036 ("" (grind) nil nil)
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" tpm nil))
   shostak))
 (pcr_read_post 0
  (pcr_read_post-1 nil 3560614723 ("" (grind) nil nil)
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (pcrReadOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_PcrRead const-decl "State" tpm nil))
   shostak))
 (bad_nonce 0
  (bad_nonce-1 nil 3559055017
   ("" (grind)
    (("" (decompose-equality -8) (("" (decompose-equality) nil nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (checkKeyRoot const-decl "bool" key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (childKey const-decl "(asymKey?)" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil))
   shostak))
 (bad_signing_key 0
  (bad_signing_key-1 nil 3559055017
   ("" (grind)
    (("" (decompose-equality -11)
      (("" (grind)
        (("" (decompose-equality) (("" (decompose-equality) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (PCR type-decl nil pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> list[PCR]]" tpm nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Quote adt-constructor-decl
     "[[list[PCR], (tpmQuote?), ReturnCode] -> (OUT_Quote?)]" tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (CRYPTOSTATUS type-decl nil key nil)
    (tpmQuote adt-constructor-decl
     "[[list[PCR], (tpmNonce?), CRYPTOSTATUS] -> (tpmQuote?)]" key nil)
    (signed? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" key nil)
    (signed adt-constructor-decl
     "[[(asymKey?), CRYPTOSTATUS] -> (signed?)]" key nil)
    (private const-decl "(asymKey?)" key nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmStorePubkey? adt-recognizer-decl "[tpmData -> boolean]" key
     nil)
    (tpmStorePrivkey? adt-recognizer-decl "[tpmData -> boolean]" key
     nil)
    (key shared-adt-accessor-decl
     "[{x: tpmData | tpmKey?(x) OR tpmStorePubkey?(x) OR tpmStorePrivkey?(x)} ->
   (asymKey?)]" key nil)
    (clear? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" key nil)
    (clear adt-constructor-decl "(clear?)" key nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (TRUE const-decl "bool" booleans nil)
    (sig adt-accessor-decl
         "[d: {x: tpmAbsOutput | OUT_Sign?(x) OR OUT_Quote?(x)} ->
   {x: tpmData[B, K, HV] |
            IF OUT_Sign?(d) THEN TRUE ELSE tpmQuote?(x) ENDIF}]" tpm
         nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_Seal?(x) OR OUT_Unseal?(x)
           OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_AuthorizeMigrationKey?(x)
           OR OUT_MigrateKey?(x) OR OUT_Sign?(x)
           OR OUT_CreateEndorsementKeyPair?(x) OR OUT_ReadPubek?(x)
           OR OUT_MakeIdentity?(x) OR OUT_Extend?(x) OR OUT_PCRRead?(x)
           OR OUT_Quote?(x)} ->
   ReturnCode]" tpm nil)
    (crs shared-adt-accessor-decl "[{x: tpmData |
              tpmID?(x) OR tpmDigest?(x) OR tpmAuthData?(x)
           OR tpmMigKeyAuth?(x) OR tpmStoredData?(x) OR tpmSessKey?(x)
           OR tpmBoundData?(x) OR tpmKey?(x) OR tpmQuote?(x)
           OR tpmEKBlob?(x) OR tpmIdContents?(x)
           OR tpmAsymCAContents?(x)} ->
   CRYPTOSTATUS]" key nil)
    (tpmAsymCAContents? adt-recognizer-decl "[tpmData -> boolean]" key
     nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmEKBlob? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmID? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (nonce adt-accessor-decl "[(tpmQuote?) -> (tpmNonce?)]" key nil)
    (digest adt-accessor-decl "[(tpmQuote?) -> list[PCR]]" key nil)
    (encrypted? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" key
     nil)
    (wrapped? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" key nil)
    (sealed? adt-recognizer-decl "[CRYPTOSTATUS -> boolean]" key nil)
    (key shared-adt-accessor-decl "[{x: CRYPTOSTATUS |
          encrypted?(x) OR signed?(x) OR wrapped?(x) OR sealed?(x)} ->
   (asymKey?)]" key nil)
    (crstat shared-adt-accessor-decl "[{x: CRYPTOSTATUS |
          encrypted?(x) OR signed?(x) OR wrapped?(x) OR sealed?(x)} ->
   CRYPTOSTATUS]" key nil)
    (wrapKey? const-decl "bool" key nil)
    (PCRMASK type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (afterStartup? const-decl "bool" tpm nil)
    (TPM_Quote const-decl "State" tpm nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil) (KEY type-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (childKey const-decl "(asymKey?)" key nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (checkKeyRoot const-decl "bool" key nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil))
   shostak))
 (quote_post 0
  (quote_post-1 nil 3559055017 ("" (grind) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (wrapKey? const-decl "bool" key nil)
    (tpmData type-decl nil key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (checkKeyRoot const-decl "bool" key nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (getPCRs const-decl "list[PCR]" pcr nil)
    (childKey const-decl "(asymKey?)" key nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" tpm nil))
   shostak))
 (seal_post 0
  (seal_post-1 nil 3560530415 ("" (grind) nil nil)
   ((tpmPCRInfo? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil))
   shostak))
 (unseal_post_TCC1 0
  (unseal_post_TCC1-1 nil 3560533074 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmData type-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil))
   nil))
 (unseal_post 0
  (unseal_post-1 nil 3560533078 ("" (grind) nil nil)
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" tpm nil))
   shostak))
 (unseal_prev_post 0
  (unseal_prev_post-1 nil 3560533493 ("" (grind) nil nil)
   ((tpmPCRInfo? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmAuthData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Unseal const-decl "State" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" tpm nil)
    (>>= const-decl "State" StateMonad nil))
   shostak))
 (unBind_post 0
  (unBind_post-1 nil 3560534909 ("" (grind) nil nil)
   ((tpmBoundData? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" tpm nil))
   shostak))
 (unBind_prev_post_TCC1 0
  (unBind_prev_post_TCC1-1 nil 3560612398 ("" (subtype-tcc) nil nil)
   nil nil))
 (unBind_prev_post_TCC2 0
  (unBind_prev_post_TCC2-1 nil 3560612398 ("" (subtype-tcc) nil nil)
   nil nil))
 (unBind_prev_post 0
  (unBind_prev_post-1 nil 3560603380 ("" (grind) nil nil)
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" key nil)
    (tpmData type-decl nil key nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil)
    (KEY type-decl nil key nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" tpm nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" tpm nil)
    (>> const-decl "State" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (member const-decl "bool" sets nil)
    (checkKey const-decl "bool" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_UnBind const-decl "State" tpm nil))
   shostak))
 (monotonic_locality 0
  (monotonic_locality-1 nil 3559055018 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (checkKey const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (pcrs_unchanged 0
  (pcrs_unchanged-1 nil 3559055018 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (checkKey const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (srk_unchanged 0
  (srk_unchanged-1 nil 3559055019 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (checkKey const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (ek_unchanged 0
  (ek_unchanged-1 nil 3559055019 ("" (grind))
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (checkKey const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (keys_unchanged 0
  (keys_unchanged-1 nil 3560612462 ("" (grind) nil nil)
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (postInit_unchanged 0
  (postInit_unchanged-1 nil 3560612466 ("" (grind) nil nil)
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (member const-decl "bool" sets nil)
    (checkKey const-decl "bool" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (addKey const-decl "KEYSET" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (disableForceClear_unchanged 0
  (disableForceClear_unchanged-1 nil 3560612470 ("" (grind) nil nil)
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (member const-decl "bool" sets nil)
    (checkKey const-decl "bool" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (addKey const-decl "KEYSET" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (restore_unchanged 0
  (restore_unchanged-1 nil 3560612474 ("" (grind) nil nil)
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (checkKey const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (memory_unchanged 0
  (memory_unchanged-1 nil 3560612478 ("" (grind) nil nil)
   ((makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (checkKey const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (permFlags_unchanged 0
  (permFlags_unchanged-1 nil 3560612481 ("" (grind) nil nil)
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (checkKey const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak))
 (permData_unchanged 0
  (permData_unchanged-1 nil 3560612486 ("" (grind) nil nil)
   ((saveToMemState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (createEndorsementKeyPairState const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (parentKey const-decl "(asymKey?)" key nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (B formal-nonempty-type-decl nil tpm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (K type-eq-decl nil tpm nil)
    (HV formal-nonempty-type-decl nil tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (childKey const-decl "(asymKey?)" key nil)
    (checkKey const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil))
   shostak)))

