("measurer" measurer test1 0 (test1-1 nil 3531203444 ("" (expand "return") (("" (propax) nil nil)) nil) ((return const-decl "State[A, S]" StateMonad nil)) shostak))("pcr" pcr antysym_ext 0 (antysym_ext-1 nil 3531346784 ("" (grind) (("" (postpone) nil nil)) nil) nil shostak))("measurer" measurer extend_antisym_ext 0 (extend_antisym_ext-1 nil 3531359192 ("" (grind) (("" (decompose-equality) nil nil)) nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (HV formal-nonempty-type-decl nil measurer nil) (PCR type-decl nil pcr nil) (= const-decl "[T, T -> boolean]" equalities nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil)) shostak))("measurer" measurer extend_antysym_ext2 0 (extend_antysym_ext2-1 nil 3531346451 ("" (grind) (("" (postpone) nil nil)) nil) nil shostak))("measurer" measurer extend_antysym_ext1 0 (extend_antysym_ext1-1 nil 3531346443 ("" (grind) nil nil) nil shostak))("measurer" measurer test3a 0 (test3a-1 nil 3531370437 ("" (grind) nil nil) ((PCR type-decl nil pcr nil) (HV formal-nonempty-type-decl nil measurer nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (boolean nonempty-type-decl nil booleans nil) (number nonempty-type-decl nil numbers nil) (modify const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) shostak))("StateMonad" StateMonad assocativity2 0 (assocativity2-1 nil 3531369887 ("" (grind) nil nil) ((>>= const-decl "State" StateMonad nil)) shostak))("StateMonad" StateMonad right_identity2 0 (right_identity2-1 nil 3531369932 ("" (grind) (("" (decompose-equality) (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil)) nil) ((S formal-nonempty-type-decl nil StateMonad nil) (A formal-nonempty-type-decl nil StateMonad nil) (state adt-constructor-decl "[[S -> [A, S]] -> (state?)]" StateMonad nil) (runState adt-accessor-decl "[State -> [S -> [A, S]]]" StateMonad nil) (state? adt-recognizer-decl "[State -> boolean]" StateMonad nil) (boolean nonempty-type-decl nil booleans nil) (State type-decl nil StateMonad nil) (State_state_extensionality formula-decl nil StateMonad nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil)) shostak))("StateMonad" StateMonad left_identity2 0 (left_identity2-1 nil 3531370261 ("" (grind) (("" (apply-extensionality) (("" (apply-extensionality) nil nil)) nil)) nil) ((State_state_extensionality formula-decl nil StateMonad nil) (State type-decl nil StateMonad nil) (boolean nonempty-type-decl nil booleans nil) (state? adt-recognizer-decl "[State -> boolean]" StateMonad nil) (runState adt-accessor-decl "[State -> [S -> [A, S]]]" StateMonad nil) (state adt-constructor-decl "[[S -> [A, S]] -> (state?)]" StateMonad nil) (A formal-nonempty-type-decl nil StateMonad nil) (S formal-nonempty-type-decl nil StateMonad nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil)) shostak))("measurer" measurer antisymmetryMonadSeq 0 (antisymmetryMonadSeq-1 nil 3531378301 ("" (grind) (("" (decompose-equality) nil nil)) nil) ((hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (hv0 const-decl "HV" measurer nil) (hv1 const-decl "HV" measurer nil) (reset adt-constructor-decl "(reset?)" pcr nil) (reset? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (= const-decl "[T, T -> boolean]" equalities nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>> const-decl "State" StateMonad nil) (/= const-decl "boolean" notequal nil) (extendPCR const-decl "State" measurer nil) (modify const-decl "State" StateMonad nil) (number nonempty-type-decl nil numbers nil) (boolean nonempty-type-decl nil booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (HV formal-nonempty-type-decl nil measurer nil) (PCR type-decl nil pcr nil)) shostak))("measurer" measurer antisymmetryMonad3 0 (antisymmetryMonad3-1 nil 3531378467 ("" (grind) (("" (decompose-equality) nil nil)) nil) ((hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (hv0 const-decl "HV" measurer nil) (hv1 const-decl "HV" measurer nil) (reset adt-constructor-decl "(reset?)" pcr nil) (reset? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (= const-decl "[T, T -> boolean]" equalities nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>> const-decl "State" StateMonad nil) (/= const-decl "boolean" notequal nil) (extendPCR const-decl "State" measurer nil) (modify const-decl "State" StateMonad nil) (number nonempty-type-decl nil numbers nil) (boolean nonempty-type-decl nil booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (HV formal-nonempty-type-decl nil measurer nil) (PCR type-decl nil pcr nil)) shostak))("measurer" measurer replay_detection_1 0 (replay_detection_1-1 nil 3531360655 ("" (grind) (("" (decompose-equality) (("" (lemma "unique_hash") (("" (grind) nil nil)) nil)) nil)) nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (HV formal-nonempty-type-decl nil measurer nil) (PCR type-decl nil pcr nil) (= const-decl "[T, T -> boolean]" equalities nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (B formal-nonempty-type-decl nil measurer nil) (hash formal-const-decl "[B -> HV]" measurer nil) (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (unique_hash formula-decl nil measurer nil) (/= const-decl "boolean" notequal nil)) shostak))("measurer" measurer bad_asp_1 0 (bad_asp_1-1 nil 3531360888 ("" (grind) (("" (decompose-equality) (("" (decompose-equality) (("" (lemma "unique_hash") (("" (grind) nil nil)) nil)) nil)) nil)) nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (HV formal-nonempty-type-decl nil measurer nil) (PCR type-decl nil pcr nil) (= const-decl "[T, T -> boolean]" equalities nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (B formal-nonempty-type-decl nil measurer nil) (hash formal-const-decl "[B -> HV]" measurer nil) (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (unique_hash formula-decl nil measurer nil) (/= const-decl "boolean" notequal nil)) shostak))("measurer" measurer data_integrity 0 (data_integrity-1 nil 3529216646 ("" (induct-and-simplify p1) (("" (generalize "p2!1" "p2") (("1" (induct-and-simplify p2) (("1" (postpone) nil nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil)) nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil) ("4" (postpone) nil nil)) nil)) nil) nil shostak))("measurer" measurer data_integrity_1 0 (data_integrity_1-1 nil 3531361076 ("" (grind) (("" (grind) (("" (postpone) nil nil)) nil)) nil) nil shostak))("pcr" pcr antysym_ext2 0 (antysym_ext2-1 nil 3531347085 ("" (grind) nil nil) ((/= const-decl "boolean" notequal nil)) shostak))("pcr" pcr antysym_ext1 0 (antysym_ext1-1 nil 3531349002 ("" (grind) (("" (apply-eta "extend(p!1,h1!1)") (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil)) nil) ((PCR_extend_eta formula-decl nil pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (PCR type-decl nil pcr nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (= const-decl "[T, T -> boolean]" equalities nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (/= const-decl "boolean" notequal nil)) shostak))("pcr" pcr equiv_TCC1 0 (equiv_TCC1-1 nil 3531195818 ("" (termination-tcc) nil nil) ((<< adt-def-decl "(well_founded?[PCR])" pcr nil)) nil))("measurer" measurer value_TCC2 0 (value_TCC2-1 nil 3531431428 ("" (cases-tcc) nil nil) nil nil))("tpm" tpm test6 0 (test6-1 nil 3531432072 ("" (grind) nil nil) ((tpmState type-eq-decl nil tpm nil) (PCR type-decl nil pcr nil) (HV formal-nonempty-type-decl nil tpm nil) (tpmOutput type-decl nil tpm nil) (modify const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (tpmReset const-decl "tpmState" tpm nil)) shostak))("tpm" tpm test5 0 (test5-1 nil 3531432063 ("" (grind) nil nil) ((tpmState type-eq-decl nil tpm nil) (PCR type-decl nil pcr nil) (HV formal-nonempty-type-decl nil tpm nil) (tpmOutput type-decl nil tpm nil) (modify const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (tpmReset const-decl "tpmState" tpm nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3535571712 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_key_TCC1 0 (IMP_key_TCC1-1 nil 3535747787 ("" (lemma "inverse_key") (("" (propax) nil nil)) nil) ((inverse_key formula-decl nil tpm nil)) nil))("tpm" tpm inverse_key 0 (inverse_key-1 nil 3535747788 ("" (postpone) nil nil) nil shostak))("key" key decrypt_TCC1 "" (subtype-tcc) nil nil)("key" key decrypt_TCC2 "" (subtype-tcc) nil nil)("key" key removeKey_TCC1 0 (removeKey_TCC1-1 nil 3535891238 ("" (subtype-tcc) nil nil) nil shostak))("key" key decrypt_TCC1 "" (grind))("key" key decrypt_TCC2 "" (grind))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3535747787 ("" (existence-tcc) (("" (inst 1 "(# pcrs:=pcrsPower, locality:=0, srk:=asymKey(srkVal), eik:=asymKey(eikVal), keys:=null #)") nil nil)) nil) ((null adt-constructor-decl "(null?)" list_adt nil) (null? adt-recognizer-decl "[list -> boolean]" list_adt nil) (list2set def-decl "set[T]" list2set nil) (set type-eq-decl nil sets nil) nil (PRED type-eq-decl nil defined_types nil) (list type-decl nil list_adt nil) (eikVal const-decl "K" tpm nil) (srkVal const-decl "K" tpm nil) (asymKey adt-constructor-decl "[KVAL -> (asymKey?)]" key nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil)) nil))("tpm" tpm tpmPower_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm tpmPower_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3535902504 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3535914641 ("" (inst 1 "(#
                         pcrs:=pcrsPower
                         , locality:=0
			 , keys:=null
			 , srk:=inverse(srkVal)
			 , eik:=inverse(eikVal)
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((eikVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (inverse const-decl "(asymKey?)" key nil) (null adt-constructor-decl "(null?)" list_adt nil) (null? adt-recognizer-decl "[list -> boolean]" list_adt nil) (list2set def-decl "set[T]" list2set nil) (set type-eq-decl nil sets nil) (every adt-def-decl "boolean" list_adt nil) (PRED type-eq-decl nil defined_types nil) (list type-decl nil list_adt nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3535914641 ("" (inst 1 "(#
                         pcrs:=pcrsPower
                         , locality:=0
			 , keys:=null
			 , srk:=inverse(srkVal)
			 , eik:=inverse(eikVal)
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((eikVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (inverse const-decl "(asymKey?)" key nil) (null adt-constructor-decl "(null?)" list_adt nil) (null? adt-recognizer-decl "[list -> boolean]" list_adt nil) (list2set def-decl "set[T]" list2set nil) (set type-eq-decl nil sets nil) nil (PRED type-eq-decl nil defined_types nil) (list type-decl nil list_adt nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil)) nil))("key" key decrypt_TCC3 0 (decrypt_TCC3-1 nil 3535928271 ("" (cases-tcc) nil nil) nil shostak))("tpm" tpm decrypt_key_success_TCC1 0 (decrypt_key_success_TCC1-1 nil 3535929840 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm tpmPower_TCC1 "" (grind) nil nil)("tpm" tpm tpmPower_TCC2 "" (grind) nil nil)("tpm" tpm IMP_key_TCC2 0 (IMP_key_TCC2-1 nil 3535976960 ("" (existence-tcc) nil nil) nil shostak))("tpm" tpm IMP_key_TCC1 0 (IMP_key_TCC1-1 nil 3535976960 ("" (existence-tcc) nil nil) nil shostak))("tpm" tpm IMP_pcr_TCC1 0 (IMP_pcr_TCC1-1 nil 3535976960 ("" (existence-tcc) nil nil) nil shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-2 "" 3535977553 ("" (inst 1 "(#
                         pcrs:=pcrsPower
                         , locality:=0
			 , keys:=emptyset
			 , srk:=inverse(srkVal)
			 , eik:=inverse(eikVal)
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((eikVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (inverse const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak) (IMP_StateMonad_TCC1-1 nil 3535976960 ("" (existence-tcc) nil nil) nil shostak))("tpm" tpm hv0_TCC1 0 (hv0_TCC1-1 nil 3535977317 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm eikKeyVal_TCC1 0 (eikKeyVal_TCC1-1 nil 3535977317 ("" (lemma "exist_K") (("" (propax) nil nil)) nil) ((exist_K formula-decl nil tpm nil)) nil))("tpm" tpm sinit_TCC1 0 (sinit_TCC1-1 nil 3535977317 ("" (existence-tcc) (("" (lemma "exist_B") (("" (propax) nil nil)) nil)) nil) ((exist_B formula-decl nil tpm nil)) nil))("tpm" tpm decrypt_key_success_TCC1 0 (decrypt_key_success_TCC1-1 nil 3536066099 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3536867553 ("" (existence-tcc) (("" (inst 1 "(#
                         pcrs:=pcrsPower
                         , locality:=0
			 , keys:=emptyset
			 , srk:=inverse(srkVal)
			 , eik:=inverse(eikVal)
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil)) nil) ((eikVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (inverse const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm exist_K 0 (exist_K-1 nil 3535977405 ("" (grind) nil nil) nil shostak))("tpm" tpm exist_B 0 (exist_B-1 nil 3535977398 ("" (grind) nil nil) nil shostak))("tpm" tpm exist_HV 0 (exist_HV-1 nil 3535977318 ("" (grind) nil nil) nil shostak))("tpm" tpm decrypt_key_success_TCC1 0 (decrypt_key_success_TCC1-1 nil 3536949873 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3536951110 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3536975627 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3547850750 ("" (grind) (("" (inst 1 "(# pcrs:=pcrsPower, locality:=0, keys:=emptyset, srk:=inverse(srkVal), ek:=inverse(ekVal) #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil)) nil) ((finite_emptyset name-judgement "finite_set" finite_sets nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (tpmState type-eq-decl nil tpm nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (<= const-decl "bool" reals nil) (PCRINDEX type-eq-decl nil pcr nil) (PCR type-decl nil pcr nil) (pcrsPower const-decl "PCRS" pcr nil) (set type-eq-decl nil sets nil) (emptyset const-decl "set" sets nil) (inverse const-decl "(asymKey?)" key nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm data_integrity 0 (data_integrity-1 nil 3547851574 ("" (grind) (("" (lemma "unique_hash") (("" (postpone) nil nil)) nil)) nil) nil shostak))("tpm" tpm bad_asp 0 (bad_asp-1 nil 3531431969 ("" (grind) (("" (decompose-equality) (("" (lemma "unique_hash") (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil)) nil)) nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (HV formal-nonempty-type-decl nil tpm nil) (PCR type-decl nil pcr nil) (= const-decl "[T, T -> boolean]" equalities nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (B formal-nonempty-type-decl nil tpm nil) (hash formal-const-decl "[B -> HV]" tpm nil) (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (unique_hash formula-decl nil tpm nil) (/= const-decl "boolean" notequal nil)) shostak))("tpm" tpm replay_detection 0 (replay_detection-1 nil 3531431931 ("" (grind) (("" (decompose-equality) (("" (lemma "unique_hash") (("" (grind) nil nil)) nil)) nil)) nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (HV formal-nonempty-type-decl nil tpm nil) (PCR type-decl nil pcr nil) (= const-decl "[T, T -> boolean]" equalities nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (B formal-nonempty-type-decl nil tpm nil) (hash formal-const-decl "[B -> HV]" tpm nil) (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (unique_hash formula-decl nil tpm nil) (/= const-decl "boolean" notequal nil)) shostak))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3547851874 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPower const-decl "tpmState" tpm nil) (tpmState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (tpmReset const-decl "tpmState" tpm nil) (senterResetTPM const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsExtend const-decl "PCRS" pcr nil) (tpmExtend const-decl "tpmState" tpm nil) (modify const-decl "State" StateMonad nil) (extendPCR const-decl "State" tpm nil) (senterHashSinitTPM const-decl "State" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (tpmDecryptKey const-decl "BLOB" tpm nil) (output const-decl "State" StateMonad nil) (decryptTPM const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3547852287 ("" (existence-tcc) (("" (inst 1 "(#
                         pcrs:=pcrsPower
                         , locality:=0
			 , keys:=emptyset
			 , srk:=inverse(srkVal)
			 , ek:=inverse(ekVal)
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil)) nil) ((ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (inverse const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3547912821 ("" (existence-tcc) (("" (inst 1 "(#
                         pcrs:=pcrsPower
                         , locality:=4
			 , keys:=emptyset
			 , srk:=inverse(srkVal)
			 , ek:=inverse(ekVal)
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil)) nil) ((ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (inverse const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3548528282 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3548602688 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3548602688 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPower const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (tpmReset const-decl "tpmAbsState" tpm nil) (senterResetTPM const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (extendTPM const-decl "State" tpm nil) (senterHashSinitTPM const-decl "State" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (changeLocalityTPM const-decl "State" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (output const-decl "State" StateMonad nil) (decryptTPM const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm monotonic_locality2 0 (monotonic_locality2-1 nil 3548602689 ("" (grind) nil nil) ((revokeKeyState const-decl "tpmAbsState" tpm nil) (removeKey const-decl "KEYSET" key nil) (installKeyState const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (add const-decl "(nonempty?)" sets nil) (member const-decl "bool" sets nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (HV formal-nonempty-type-decl nil tpm nil) (executeCom const-decl "tpmAbsState" tpm nil)) shostak))("tpm" tpm locality_monotonicity 0 (locality_monotonicity-1 nil 3548528282 ("" (grind) nil nil) ((changeLocalityState const-decl "tpmAbsState" tpm nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3548612397 ("" (inst 1 "(#
                         pcrs:=pcrsPower
                         , locality:=4
			 , keys:=emptyset
			 , srk:=inverse(srkVal)
			 , ek:=inverse(ekVal)
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (inverse const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm getPCRs_TCC3 0 (getPCRs_TCC3-1 nil 3548776799 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm getPCRs_TCC2 0 (getPCRs_TCC2-1 nil 3548776799 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3549033345 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPower const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (tpmReset const-decl "tpmAbsState" tpm nil) (senterResetTPM const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (extendTPM const-decl "State" tpm nil) (senterHashSinitTPM const-decl "State" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (changeLocalityTPM const-decl "State" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (output const-decl "State" StateMonad nil) (decryptTPM const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm quoteMonad 0 (quoteMonad-1 nil 3531447003 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPower const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (tpmReset const-decl "tpmAbsState" tpm nil) (senterResetTPM const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (extendTPM const-decl "State" tpm nil) (senterHashSinitTPM const-decl "State" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (changeLocalityTPM const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (quotePCR const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) shostak))("tpm" tpm quotePCR_TCC1 0 (quotePCR_TCC1-1 nil 3549033345 ("" (subtype-tcc) nil nil) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm getPCRsTest 0 (getPCRsTest-1 nil 3549033153 ("" (grind) nil nil) ((getPCRs const-decl "tpmAbsState" tpm nil) (PCRINDEX type-eq-decl nil pcr nil) (HV formal-nonempty-type-decl nil tpm nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (<= const-decl "bool" reals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (NOT const-decl "[bool -> bool]" booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (boolean nonempty-type-decl nil booleans nil)) shostak))("tpm" tpm getPCRsTest_TCC1 0 (getPCRsTest_TCC1-1 nil 3549033345 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm getPCRs_TCC1 0 (getPCRs_TCC1-1 nil 3548776799 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3549039265 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm getPCRsTest 0 (getPCRsTest-1 nil 3549040987 ("" (grind) (("" (expand every) (("" (lift-if) (("" (grind) (("" (expand length) (("" (lift-if) (("" (grind) (("" (expand length) (("" (expand every) (("" (grind) (("" (postpone) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) nil shostak))("tpm" tpm testGetPCRs 0 (testGetPCRs-1 nil 3549126682 ("" (grind) nil nil) nil shostak))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3549197737 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm quoteMonad_TCC2 0 (quoteMonad_TCC2-1 nil 3549197737 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3549204580 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3549204791 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm quoteMonad_TCC2 0 (quoteMonad_TCC2-1 nil 3549204791 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3549207319 ("" (existence-tcc) nil nil) nil nil))("pcr" pcr testGetPCRs_TCC1 0 (testGetPCRs_TCC1-1 nil 3549129890 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3549207447 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm quoteMonad_TCC2 0 (quoteMonad_TCC2-1 nil 3549207447 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm checkPCRS_TCC1 0 (checkPCRS_TCC1-1 nil 3549207447 ("" (subtype-tcc) nil nil) nil nil))("pcr" pcr testGetPCRs 0 (testGetPCRs-1 nil 3549130103 ("" (grind) nil nil) ((pcrsExtend const-decl "PCRS" pcr nil) (map adt-def-decl "list[T1]" list_adt_map nil) (getPCRs const-decl "list[PCR]" pcr nil)) shostak))("tpm" tpm quoteMonad_TCC2 0 (quoteMonad_TCC2-1 nil 3549207447 ("" (subtype-tcc) nil nil) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3549207447 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPower const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (tpmReset const-decl "tpmAbsState" tpm nil) (senterResetTPM const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (extendTPM const-decl "State" tpm nil) (senterHashSinitTPM const-decl "State" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (changeLocalityTPM const-decl "State" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (output const-decl "State" StateMonad nil) (decryptTPM const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm quoteMonad_TCC1 0 (quoteMonad_TCC1-1 nil 3549193293 ("" (grind) nil nil) ((real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (every adt-def-decl "boolean" list_adt nil)) nil))("tpm" tpm checkPCRS_TCC1 0 (checkPCRS_TCC1-1 nil 3549207447 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPower const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (tpmReset const-decl "tpmAbsState" tpm nil) (senterResetTPM const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (extendTPM const-decl "State" tpm nil) (senterHashSinitTPM const-decl "State" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (changeLocalityTPM const-decl "State" tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) (output const-decl "State" StateMonad nil) (quoteTPM const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm badSigningKey_TCC1 0 (badSigningKey_TCC1-1 nil 3549219098 ("" (subtype-tcc) nil nil) ((ekVal const-decl "KEY" tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (quoteTPM const-decl "State" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3549279932 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm badNonceQuote 0 (badNonceQuote-1 nil 3549197738 ("" (grind) (("" (decompose-equality -2) nil nil)) nil) ((= const-decl "[T, T -> boolean]" equalities nil) (OR const-decl "[bool, bool -> bool]" booleans nil) (outQuote? adt-recognizer-decl "[tpmOutput -> boolean]" tpm nil) (outKey? adt-recognizer-decl "[tpmOutput -> boolean]" tpm nil) (k shared-adt-accessor-decl "[{x: tpmOutput | outQuote?(x) OR outKey?(x)} -> KEY[B, K, HV]]" tpm nil) (BLOB type-decl nil key nil) (PCR type-decl nil pcr nil) (outQuote adt-constructor-decl "[[KEY, BLOB, list[PCR]] -> (outQuote?)]" tpm nil) (inverse const-decl "(asymKey?)" key nil) (asymKey adt-constructor-decl "[KVAL -> (asymKey?)]" key nil) (ekKeyVal const-decl "K" tpm nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (PCRINDEX type-eq-decl nil pcr nil) (map adt-def-decl "list[T1]" list_adt_map nil) (pcrsReset const-decl "PCRS" pcr nil) (n adt-accessor-decl "[(outQuote?) -> BLOB[B, K, HV]]" tpm nil) (pcrs adt-accessor-decl "[(outQuote?) -> list[PCR]]" tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (PRED type-eq-decl nil defined_types nil) (list type-decl nil list_adt nil) (every adt-def-decl "boolean" list_adt nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil) (PCRMASK type-eq-decl nil pcr nil) (tpmReset const-decl "tpmAbsState" tpm nil) (srkVal const-decl "KEY" tpm nil) (quoteTPM const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (tpmOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (tpmAbsState type-eq-decl nil tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) (HV formal-nonempty-type-decl nil tpm nil) (ekVal const-decl "KEY" tpm nil) (/= const-decl "boolean" notequal nil)) shostak))("pcr" pcr getPCRsCorrectness 0 (getPCRsCorrectness-1 nil 3549218303 ("" (induct-and-simplify pm) nil nil) ((list type-decl nil list_adt nil) (PRED type-eq-decl nil defined_types nil) (every adt-def-decl "boolean" list_adt nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (PCRMASK type-eq-decl nil pcr nil) (PCR type-decl nil pcr nil) (PCRS type-eq-decl nil pcr nil) (IMPLIES const-decl "[bool, bool -> bool]" booleans nil) (member def-decl "bool" list_props nil) (getPCRs const-decl "list[PCR]" pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (boolean nonempty-type-decl nil booleans nil) (number nonempty-type-decl nil numbers nil) (list_induction formula-decl nil list_adt nil) (map adt-def-decl "list[T1]" list_adt_map nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3549279932 ("" (inst 1 "(#
                         pcrs:=pcrsReset
			 , locality:=4
			 , keys:=emptyset
			 , srk:=inverse(srkVal)
			 , ek:=inverse(ekVal)
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (inverse const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (pcrsReset const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3549372787 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPower const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (tpmReset const-decl "tpmAbsState" tpm nil) (senterResetTPM const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (extendTPM const-decl "State" tpm nil) (senterHashSinitTPM const-decl "State" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (changeLocalityTPM const-decl "State" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (decryptKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (decryptTPM const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm quoteMonad_TCC2 0 (quoteMonad_TCC2-1 nil 3549372787 ("" (subtype-tcc) nil nil) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3549386581 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm some_test_name 0 (some_test_name-1 nil 3549801192 ("" (grind) (("" (postpone) nil nil)) nil) nil shostak))("tpm" tpm some_test_name_TCC1 0 (some_test_name_TCC1-1 nil 3549801188 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm bad_asp_monad 0 (bad_asp_monad-2 "" 3531452667 ("" (grind) (("" (decompose-equality) (("" (decompose-equality) (("" (use "unique_hash") (("" (grind) (("" (decompose-equality) (("" (decompose-equality) (("" (decompose-equality) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) ((number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (<= const-decl "bool" reals nil) (PCRINDEX type-eq-decl nil pcr nil) (PCR type-decl nil pcr nil) (= const-decl "[T, T -> boolean]" equalities nil) (outQuote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (h adt-accessor-decl "[(extendCom?) -> HV]" tpm nil) (outQuote adt-constructor-decl "[[KEY, BLOB, list[PCR]] -> (outQuote?)]" tpm nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (reset? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (reset adt-constructor-decl "(reset?)" pcr nil) (hash formal-const-decl "[B -> HV]" tpm nil) (unique_hash formula-decl nil tpm nil) (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (/= const-decl "boolean" notequal nil) (pcrsReset const-decl "PCRS" pcr nil) (tpmReset const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (output const-decl "State" StateMonad nil) (>> const-decl "State" StateMonad nil) (extendTPM const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (tpmAbsState type-eq-decl nil tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (HV formal-nonempty-type-decl nil tpm nil)) shostak) (bad_asp_monad-1 nil 3531451989 ("" (grind) (("" (decompose-equality) (("" (decompose-equality) (("" (decompose-equality) (("" (decompose-equality) (("" (lemma "unique_hash") (("" (grind) nil nil)) nil)) nil)) nil)) nil)) nil)) nil) ((boolean nonempty-type-decl nil booleans nil) (= const-decl "[T, T -> boolean]" equalities nil) (outQuote adt-constructor-decl "[[KEY, BLOB, list[PCR]] -> (outQuote?)]" tpm nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (reset? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (reset adt-constructor-decl "(reset?)" pcr nil) (B formal-nonempty-type-decl nil tpm nil) (hash formal-const-decl "[B -> HV]" tpm nil) (unique_hash formula-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (/= const-decl "boolean" notequal nil) (tpmReset const-decl "tpmAbsState" tpm nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (output const-decl "State" StateMonad nil) (>> const-decl "State" StateMonad nil) (modify const-decl "State" StateMonad nil) (HV formal-nonempty-type-decl nil tpm nil) (PCR type-decl nil pcr nil)) shostak))("tpm" tpm replay_detection_monad 0 (replay_detection_monad-1 nil 3531450962 ("" (grind) (("" (decompose-equality) (("" (decompose-equality) (("" (lemma "unique_hash") (("" (grind) (("" (decompose-equality) (("" (decompose-equality) nil nil)) nil)) nil)) nil)) nil)) nil)) nil) ((number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (<= const-decl "bool" reals nil) (PCRINDEX type-eq-decl nil pcr nil) (PCR type-decl nil pcr nil) (= const-decl "[T, T -> boolean]" equalities nil) (outQuote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (h adt-accessor-decl "[(extendCom?) -> HV]" tpm nil) (outQuote adt-constructor-decl "[[KEY, BLOB, list[PCR]] -> (outQuote?)]" tpm nil) (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (extend adt-constructor-decl "[[PCR, HV] -> (extend?)]" pcr nil) (reset? adt-recognizer-decl "[PCR -> boolean]" pcr nil) (reset adt-constructor-decl "(reset?)" pcr nil) (hash formal-const-decl "[B -> HV]" tpm nil) (unique_hash formula-decl nil tpm nil) (hash adt-accessor-decl "[(extend?) -> HV]" pcr nil) (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (/= const-decl "boolean" notequal nil) (pcrsReset const-decl "PCRS" pcr nil) (tpmReset const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (output const-decl "State" StateMonad nil) (>> const-decl "State" StateMonad nil) (extendTPM const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (tpmAbsState type-eq-decl nil tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (HV formal-nonempty-type-decl nil tpm nil)) shostak))("tpm" tpm tpmPower_TCC1 "" (tcc) nil nil)("tpm" tpm tpmPower_TCC2 "" (tcc) nil nil)("tpm" tpm changeLocalityState_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm quoteMonad_TCC1 "" (grind) nil nil)("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3549386581 ("" (existence-tcc) nil nil) nil shostak))("tpm" tpm test5_TCC1 0 (test5_TCC1-1 nil 3549828671 ("" (subtype-tcc) (("" (postpone) nil nil)) nil) nil nil))("tpm" tpm test5 0 (test5-1 nil 3549816523 ("" (grind) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPower const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (tpmReset const-decl "tpmAbsState" tpm nil) (senterResetTPM const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (createWrapKey const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (createWrapKeyTPM const-decl "State" tpm nil) (member const-decl "bool" sets nil) (addKey const-decl "KEYSET" key nil) (installKeyState const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (useOutput const-decl "State" StateMonad nil) (installPrevKeyTPM const-decl "[tpmAbsOutput -> State]" tpm nil) (emptyset const-decl "set" sets nil) (>>= const-decl "State" StateMonad nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (extendTPM const-decl "State" tpm nil) (senterHashSinitTPM const-decl "State" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (changeLocalityTPM const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (add const-decl "(nonempty?)" sets nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3550243233 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm membership 0 (membership-1 nil 3550252961 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmReset const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (senterResetTPM const-decl "State" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (createWrapKeyTPM const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (emptyset const-decl "set" sets nil) (member const-decl "bool" sets nil)) shostak))("tpm" tpm membership_TCC2 0 (membership_TCC2-1 nil 3550252960 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm membership_TCC1 0 (membership_TCC1-1 nil 3550252960 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm decryptKeyState_TCC1 0 (decryptKeyState_TCC1-1 nil 3550252960 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm tpmPower_TCC2 0 (tpmPower_TCC2-1 nil 3535902101 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil)) nil))("tpm" tpm tpmPower_TCC1 0 (tpmPower_TCC1-1 nil 3535902101 ("" (grind) nil nil) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm executeCom_TCC2 0 (executeCom_TCC2-1 nil 3550353288 ("" (subtype-tcc) nil nil) ((afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3550353288 ("" (inst 1 "(#
                         pcrs:=pcrsPower
			 , postInit:=true
                         , locality:=4
			 , keys:=emptyset
			 , srk:=inverse(srkVal)
			 , ek:=inverse(ekVal)
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (inverse const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3550356051 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (senterTPM const-decl "State" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (sinitTPM const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (changeLocalityTPM const-decl "State" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (decryptKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (decryptTPM const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm quoteMonad_TCC2 0 (quoteMonad_TCC2-1 nil 3550355978 ("" (subtype-tcc) nil nil) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3550356051 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (startupTPM const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (senterTPM const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (sinitTPM const-decl "State" tpm nil) (changeLocalityTPM const-decl "State" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (decryptKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (decryptTPM const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm checkPCRS_TCC1 0 (checkPCRS_TCC1-1 nil 3550357412 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (startupTPM const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (senterTPM const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (sinitTPM const-decl "State" tpm nil) (extendTPM const-decl "State" tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (quoteTPM const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3550356051 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (powerTPM const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (startupTPM const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (senterTPM const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (sinitTPM const-decl "State" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (decryptKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (decryptTPM const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3550361586 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3550429520 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm quoteMonad_TCC2 0 (quoteMonad_TCC2-1 nil 3550429520 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3550935976 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3551005429 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3551005429 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (CPU_senter const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (CPU_sinit const-decl "State" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (decryptKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Decrypt const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551008513 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm tpmPostInit_TCC5 0 (tpmPostInit_TCC5-1 nil 3551015937 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil)) nil))("tpm" tpm tpmPostInit_TCC4 0 (tpmPostInit_TCC4-1 nil 3551015937 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm tpmPostInit_TCC3 0 (tpmPostInit_TCC3-1 nil 3551015937 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551011507 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm certOut_TCC1 0 (certOut_TCC1-1 nil 3551011507 ("" (subtype-tcc) nil nil) ((caKey const-decl "KEY" tpm nil)) nil))("tpm" tpm CA_CertPrev_TCC1 0 (CA_CertPrev_TCC1-1 nil 3551051920 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_fail_TCC1 0 (decrypt_key_fail_TCC1-1 nil 3551057142 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm makeIdentityOut_TCC2 0 (makeIdentityOut_TCC2-1 nil 3551057142 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm makeIdentityOut_TCC1 0 (makeIdentityOut_TCC1-1 nil 3551051920 ("" (grind) nil nil) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm TPM_QuotePrev_TCC2 0 (TPM_QuotePrev_TCC2-1 nil 3551051920 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm CA_CertPrev_TCC1 0 (CA_CertPrev_TCC1-1 nil 3551057931 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551059004 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm quote_with_prev_key_save 0 (quote_with_prev_key_save-1 nil 3551125795 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (nothing adt-constructor-decl "(nothing?)" key nil) (nothing? adt-recognizer-decl "[BLOB -> boolean]" key nil) (BLOB type-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (saveState const-decl "tpmAbsState" tpm nil) (CPU_SaveOutput const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (>>= const-decl "State" StateMonad nil) (checkKeyRoot const-decl "bool" key nil) (getPCRs const-decl "list[PCR]" pcr nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (TPM_QuotePrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputOutput const-decl "[A -> State]" StateMonad nil)) shostak))("tpm" tpm TPM_ActivateIdentityPrev_TCC3 0 (TPM_ActivateIdentityPrev_TCC3-1 nil 3551192923 ("" (grind) (("" (postpone) nil nil)) nil) nil nil))("tpm" tpm TPM_ActivateIdentityPrev_TCC2 0 (TPM_ActivateIdentityPrev_TCC2-1 nil 3551192923 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm CA_CertPrev_TCC2 0 (CA_CertPrev_TCC2-1 nil 3551091914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm activate_identity_TCC3 0 (activate_identity_TCC3-1 nil 3551091914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm activate_identity_TCC2 0 (activate_identity_TCC2-1 nil 3551091914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm certOut_TCC3 0 (certOut_TCC3-1 nil 3551091914 ("" (subtype-tcc) (("" (postpone) nil nil)) nil) nil nil))("tpm" tpm certOut_TCC2 0 (certOut_TCC2-1 nil 3551056939 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551206516 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm activate_identity_TCC1 0 (yes "" 3551208864 ("" (subtype-tcc) (("" (postpone) nil nil)) nil) nil shostak) (activate_identity_TCC1-1 nil 3551091914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm tpmPostInit_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm tpmPostInit_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm changeLocalityState_TCC1 "" (grind) nil nil)("tpm" tpm executeCom_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm certOut_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm seal_secret_success_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm seal_secret_success_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm unseal_prev_seal_success_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm unseal_prev_seal_success_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm seal_unseal_secret_success_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm seal_unseal_secret_success_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm TPM_QuotePrev_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm CA_CertPrev_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm TPM_ActivateIdentityPrev_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm TPM_ActivateIdentityPrev_TCC3 "" (subtype-tcc) nil nil)("tpm" tpm CA_CertPrev_TCC1 0 (CA_CertPrev_TCC1-1 nil 3551091914 ("" (grind)) nil nil))("tpm" tpm TPM_ActivateIdentityPrev_TCC3 0 (TPM_ActivateIdentityPrev_TCC3-1 nil 3551209485 ("" (grind)) nil nil))("tpm" tpm TPM_ActivateIdentityPrev_TCC2 0 (TPM_ActivateIdentityPrev_TCC2-1 nil 3551209485 ("" (grind)) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551206516 ("" (existence-tcc) nil nil) nil shostak))("tpm" tpm TPM_ActivateIdentityPrev_TCC1 0 (TPM_ActivateIdentityPrev_TCC1-1 nil 3551192923 ("" (grind) nil nil) nil shostak))("tpm" tpm test4 0 (test4-1 nil 3531432056 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (nothing adt-constructor-decl "(nothing?)" key nil) (nothing? adt-recognizer-decl "[BLOB -> boolean]" key nil) (BLOB type-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (modify const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm test3 0 (test3-1 nil 3531432051 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (nothing adt-constructor-decl "(nothing?)" key nil) (nothing? adt-recognizer-decl "[BLOB -> boolean]" key nil) (BLOB type-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (modify const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm test2 0 (test2-1 nil 3531432046 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (nothing adt-constructor-decl "(nothing?)" key nil) (nothing? adt-recognizer-decl "[BLOB -> boolean]" key nil) (BLOB type-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (unit const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm test1c 0 (test1c-1 nil 3531432038 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (nothing adt-constructor-decl "(nothing?)" key nil) (nothing? adt-recognizer-decl "[BLOB -> boolean]" key nil) (BLOB type-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (unit const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm test1b 0 (test1b-1 nil 3531432034 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (nothing adt-constructor-decl "(nothing?)" key nil) (nothing? adt-recognizer-decl "[BLOB -> boolean]" key nil) (BLOB type-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (unit const-decl "State" StateMonad nil)) shostak))("tpm" tpm test1a 0 (test1a-1 nil 3531432030 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (nothing adt-constructor-decl "(nothing?)" key nil) (nothing? adt-recognizer-decl "[BLOB -> boolean]" key nil) (BLOB type-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (unit const-decl "State" StateMonad nil)) shostak))("tpm" tpm TPM_ActivateIdentityPrev_TCC3 0 (TPM_ActivateIdentityPrev_TCC3-1 nil 3551216858 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm TPM_ActivateIdentityPrev_TCC2 0 (TPM_ActivateIdentityPrev_TCC2-1 nil 3551216858 ("" (subtype-tcc) (("" (postpone) nil nil)) nil) nil nil))("tpm" tpm TPM_ActivateIdentityPrev_TCC1 0 (TPM_ActivateIdentityPrev_TCC1-1 nil 3551192923 ("" (grind) (("" (postpone) nil nil)) nil) nil shostak))("tpm" tpm TPM_QuotePrev_TCC1 0 (TPM_QuotePrev_TCC1-1 nil 3551008513 ("" (grind) nil nil) nil nil))("tpm" tpm TPM_InstallPrev_TCC1 0 (TPM_InstallPrev_TCC1-1 nil 3551215634 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm decrypt_key_success 0 (decrypt_key_success-1 nil 3535913649 ("" (skosimp*) (("" (assert) (("" (expand "powerTPM") (("" (assert) (("" (expand "tpmPower") (("" (assert) (("" (expand "senterResetTPM") (("" (assert) (("" (expand "put") (("" (assert) (("" (expand "senterHashSinitTPM") (("" (assert) (("" (expand "installKeyTPM") (("" (expand "modify") (("" (assert) (("" (expand "unit") (("" (assert) (("" (expand "decryptTPM") (("" (expand "output") (("" (assert) (("" (grind) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) ((finite_emptyset name-judgement "finite_set" finite_sets nil) (nonempty_add_finite application-judgement "non_empty_finite_set" finite_sets nil) (>>= const-decl "State" StateMonad nil) (TPM_Decrypt const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (decryptKeyOut const-decl "tpmAbsOutput" tpm nil) (decryptKeyState const-decl "BLOB" tpm nil) (add const-decl "(nonempty?)" sets nil) (emptyset const-decl "set" sets nil) (TPM_InstallKey const-decl "State" tpm nil) (installKeyState const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (checkKey const-decl "bool" key nil) (member const-decl "bool" sets nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (BLOB type-decl nil key nil) (nothing? adt-recognizer-decl "[BLOB -> boolean]" key nil) (nothing adt-constructor-decl "(nothing?)" key nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (unit const-decl "State" StateMonad nil)) shostak))("tpm" tpm decrypt_key_fail 0 (decrypt_key_fail-1 nil 3535901403 ("" (skosimp*) (("" (assert) (("" (expand ">>") (("" (expand ">>=") (("" (expand "unit") (("" (grind) nil nil)) nil)) nil)) nil)) nil)) nil) ((>>= const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (decryptKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (nothing adt-constructor-decl "(nothing?)" key nil) (nothing? adt-recognizer-decl "[BLOB -> boolean]" key nil) (BLOB type-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_Decrypt const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (CPU_sinit const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (CPU_senter const-decl "State" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (TPM_Startup const-decl "State" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (odd_minus_odd_is_even application-judgement "even_int" integers nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (even_minus_odd_is_odd application-judgement "odd_int" integers nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (unit const-decl "State" StateMonad nil) (>> const-decl "State" StateMonad nil)) shostak))("tpm" tpm makeIdentityOut_TCC1 0 (makeIdentityOut_TCC1-1 nil 3551222198 ("" (subtype-tcc) nil nil) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551223641 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm CPU_BuildQuoteFromMem_TCC2 0 (CPU_BuildQuoteFromMem_TCC2-1 nil 3551267654 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm CPU_BuildQuoteFromMem_TCC1 0 (CPU_BuildQuoteFromMem_TCC1-1 nil 3551267654 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm CA_CertPrev_TCC1 0 (CA_CertPrev_TCC1-1 nil 3551091914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm TPM_QuotePrev_TCC1 0 (TPM_QuotePrev_TCC1-1 nil 3551008513 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm activate_identity_TCC3 0 (activate_identity_TCC3-1 nil 3551091914 ("" (subtype-tcc) nil nil) ((symKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (NOT const-decl "[bool -> bool]" booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (activateIdentityOut const-decl "tpmAbsOutput" tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (checkKeyRoot const-decl "bool" key nil) (member const-decl "bool" sets nil) (singleton_elt const-decl "T" sets nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_ActivateIdentity const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil)) nil))("tpm" tpm activate_identity_TCC1 0 (activate_identity_TCC1-1 nil 3551091914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm test4 0 (test4-1 nil 3531432056 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (modify const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm test3 0 (test3-1 nil 3531432051 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (modify const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm test2 0 (test2-1 nil 3531432046 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (unit const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm test1c 0 (test1c-1 nil 3531432038 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (unit const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm test1b 0 (test1b-1 nil 3531432034 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (unit const-decl "State" StateMonad nil)) shostak))("tpm" tpm test1a 0 (test1a-1 nil 3531432030 ("" (grind) nil nil) ((tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (unit const-decl "State" StateMonad nil)) shostak))("tpm" tpm decrypt_key_success 0 (decrypt_key_success-1 nil 3535913649 ("" (skosimp*) (("" (assert) (("" (expand "powerTPM") (("" (assert) (("" (expand "tpmPower") (("" (assert) (("" (expand "senterResetTPM") (("" (assert) (("" (expand "put") (("" (assert) (("" (expand "senterHashSinitTPM") (("" (assert) (("" (expand "installKeyTPM") (("" (expand "modify") (("" (assert) (("" (expand "unit") (("" (assert) (("" (expand "decryptTPM") (("" (expand "output") (("" (assert) (("" (grind) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) ((finite_emptyset name-judgement "finite_set" finite_sets nil) (nonempty_add_finite application-judgement "non_empty_finite_set" finite_sets nil) (>>= const-decl "State" StateMonad nil) (TPM_Decrypt const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (decryptKeyOut const-decl "tpmAbsOutput" tpm nil) (decryptKeyState const-decl "BLOB" tpm nil) (add const-decl "(nonempty?)" sets nil) (emptyset const-decl "set" sets nil) (TPM_LoadKey2 const-decl "State" tpm nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (checkKey const-decl "bool" key nil) (member const-decl "bool" sets nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (unit const-decl "State" StateMonad nil)) shostak))("tpm" tpm decrypt_key_fail 0 (decrypt_key_fail-1 nil 3535901403 ("" (skosimp*) (("" (assert) (("" (expand ">>") (("" (expand ">>=") (("" (expand "unit") (("" (grind) nil nil)) nil)) nil)) nil)) nil)) nil) ((>>= const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (member const-decl "bool" sets nil) (add const-decl "(nonempty?)" sets nil) (decryptKeyState const-decl "BLOB" tpm nil) (decryptKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_Decrypt const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (CPU_sinit const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (CPU_senter const-decl "State" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (TPM_Startup const-decl "State" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (odd_minus_odd_is_even application-judgement "even_int" integers nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (even_minus_odd_is_odd application-judgement "odd_int" integers nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (unit const-decl "State" StateMonad nil) (>> const-decl "State" StateMonad nil)) shostak))("tpm" tpm certOut_TCC3 0 (certOut_TCC3-1 nil 3551091914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551463717 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm seal_unseal_secret_success 0 (seal_unseal_secret_success-1 nil 3549992031 ("" (skolem!) (("" (simplify-with-rewrites) (("" (flatten) (("" (expand powerTPM) (("" (expand put) (("" (expand tpmPower) (("" (expand pcrsPower) (("" (expand srkVal) (("" (expand ekVal) (("" (expand senterResetTPM) (("" (expand senterHashSinitTPM) (("" (expand extendTPM) (("" (expand changeLocalityTPM) (("" (expand sealTPM) (("" (expand unsealPrevSealTPM) (("" (expand unit) (("" (simplify) (("" (decompose-equality) (("" (grind) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) ((unit const-decl "State" StateMonad nil) (K formal-nonempty-type-decl nil tpm nil) (boolean nonempty-type-decl nil booleans nil) (= const-decl "[T, T -> boolean]" equalities nil) (B formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (askey adt-accessor-decl "[(asymKey?) -> KVAL]" key nil) (private const-decl "(asymKey?)" key nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (TPM_Extend const-decl "State" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Seal const-decl "State" tpm nil) (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (>>= const-decl "State" StateMonad nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm seal_unseal_secret_success_TCC2 0 (seal_unseal_secret_success_TCC2-1 nil 3549992064 ("" (subtype-tcc) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (CPU_senter const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (CPU_sinit const-decl "State" tpm nil) (TPM_Extend const-decl "State" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Seal const-decl "State" tpm nil) (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil)) nil))("tpm" tpm seal_unseal_secret_success_TCC1 0 (seal_unseal_secret_success_TCC1-1 nil 3549992064 ("" (subtype-tcc) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (CPU_senter const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (CPU_sinit const-decl "State" tpm nil) (TPM_Extend const-decl "State" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Seal const-decl "State" tpm nil) (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil)) nil))("tpm" tpm install_prev_key_success 0 (install_prev_key_success-1 nil 3549830065 ("" (grind) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (TPM_InstallPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (emptyset const-decl "set" sets nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (add const-decl "(nonempty?)" sets nil)) shostak))("tpm" tpm install_key_success2 0 (install_key_success2-1 nil 3535903981 ("" (grind) nil nil) ((wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (NOT const-decl "[bool -> bool]" booleans nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (TPM_LoadKey2 const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (add const-decl "(nonempty?)" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) shostak))("tpm" tpm install_key_success 0 (install_key_success-1 nil 3535902541 ("" (grind) nil nil) ((wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (NOT const-decl "[bool -> bool]" booleans nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (TPM_LoadKey2 const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (add const-decl "(nonempty?)" sets nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551632229 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm makeIdentityOut_TCC1 0 (makeIdentityOut_TCC1-1 nil 3551635615 ("" (subtype-tcc) nil nil) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551654757 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3551806207 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_seal_success_TCC2 0 (unseal_prev_seal_success_TCC2-1 nil 3549991543 ("" (subtype-tcc) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (CPU_senter const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (CPU_sinit const-decl "State" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Seal const-decl "State" tpm nil) (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil)) nil))("tpm" tpm unseal_prev_seal_success_TCC1 0 (unseal_prev_seal_success_TCC1-1 nil 3549991543 ("" (subtype-tcc) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (CPU_senter const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (CPU_sinit const-decl "State" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Seal const-decl "State" tpm nil) (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil)) nil))("tpm" tpm unseal_prev_seal_success 0 (unseal_prev_seal_success-1 nil 3549988187 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Seal const-decl "State" tpm nil) (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552235204 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm punseal_prev_seal_success_TCC1 0 (punseal_prev_seal_success_TCC1-1 nil 3552235204 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm punseal_prev_seal_success 0 (punseal_prev_seal_success-1 nil 3552235204 ("" (grind) (("" (postpone) nil nil)) nil) nil shostak))("tpm" tpm unseal_prev_seal_success_TCC1 0 (unseal_prev_seal_success_TCC1-1 nil 3552237833 ("" (subtype-tcc) nil nil) nil nil))("key" key decrypt_TCC3 0 (decrypt_TCC3-1 nil 3552317226 ("" (subtype-tcc) nil nil) nil nil))("key" key sigCheckSym_TCC1 0 (sigCheckSym_TCC1-1 nil 3552317226 ("" (subtype-tcc) nil nil) nil nil))("key" key unseal_TCC2 0 (unseal_TCC2-1 nil 3552317226 ("" (subtype-tcc) nil nil) nil nil))("key" key unseal_TCC1 0 (unseal_TCC1-1 nil 3552317226 ("" (subtype-tcc) nil nil) nil nil))("key" key decryptWrapped_TCC2 0 (decryptWrapped_TCC2-1 nil 3552317226 ("" (subtype-tcc) nil nil) nil nil))("key" key decryptWrapped_TCC1 0 (decryptWrapped_TCC1-1 nil 3552317226 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_success_TCC1 0 (unBind_success_TCC1-1 nil 3551796152 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_success 0 (unBind_success-1 nil 3551796152 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (unBindOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_UnBind const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (emptyset const-decl "set" sets nil) (member const-decl "bool" sets nil)) shostak))("tpm" tpm unBindPrev_success_TCC1 0 (unBindPrev_success_TCC1-1 nil 3552325437 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552326833 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552654509 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm activate_prev_success 0 (activate_prev_success-1 nil 3552654512 ("" (grind) (("" (postpone) nil nil)) nil) nil shostak))("tpm" tpm activate_prev_success_TCC1 0 (activate_prev_success_TCC1-1 nil 3552654509 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_key_TCC3 0 (IMP_key_TCC3-1 nil 3552661746 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_key_TCC2 0 (IMP_key_TCC2-1 nil 3552661746 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_key_TCC1 0 (IMP_key_TCC1-1 nil 3552661746 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm make_identity_success_TCC1 0 (make_identity_success_TCC1-1 nil 3552839277 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552842133 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552843346 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm activate_prev_success 0 (activate_prev_success-1 nil 3552842133 ("" (skosimp) (("" (assert) (("" (rewrite "TPM_ActivateIdentityPrev") (("" (rewrite "useOutputOutput") (("" (rewrite TPM_MakeIdentity) (("" (postpone) nil nil)) nil)) nil)) nil)) nil)) nil) nil shostak))("tpm" tpm quote_with_prev_key2_TCC1 0 (quote_with_prev_key2_TCC1-1 nil 3552902358 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm make_identity_success_TCC1 0 (make_identity_success_TCC1-1 nil 3552901558 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm nested_wrapped_keys_success_TCC2 0 (nested_wrapped_keys_success_TCC2-1 nil 3552901558 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm nested_wrapped_keys_success_TCC1 0 (nested_wrapped_keys_success_TCC1-1 nil 3552901558 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBindPrev_success 0 (unBindPrev_success-1 nil 3552325445 ("" (grind) (("" (lemma "double_private") (("" (grind) nil nil)) nil)) nil) ((double_private formula-decl nil key nil) (decryptSym const-decl "BLOB" key nil) (decryptAsym const-decl "BLOB" key nil) (NOT const-decl "[bool -> bool]" booleans nil) (add const-decl "(nonempty?)" sets nil) (useOutputOutput const-decl "[A -> State]" StateMonad nil) (TPM_UnBindPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (unBindOut const-decl "tpmAbsOutput" tpm nil) (decrypt const-decl "BLOB" key nil) (Tspi_Data_Bind const-decl "State" tpm nil) (dataBindOut const-decl "tpmAbsOutput" tpm nil) (>>= const-decl "State" StateMonad nil) (emptyset const-decl "set" sets nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (TPM_LoadPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (checkKey const-decl "bool" key nil) (member const-decl "bool" sets nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)) shostak))("tpm" tpm load_prev_key_success 0 (load_prev_key_success-1 nil 3551624509 ("" (grind) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (TPM_LoadPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputState const-decl "[A -> State]" StateMonad nil) (emptyset const-decl "set" sets nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (add const-decl "(nonempty?)" sets nil)) shostak))("tpm" tpm quote_with_prev_key 0 (quote_with_prev_key-1 nil 3551008516 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (checkKeyRoot const-decl "bool" key nil) (getPCRs const-decl "list[PCR]" pcr nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (TPM_QuotePrev const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputOutput const-decl "[A -> State]" StateMonad nil) (>>= const-decl "State" StateMonad nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552902633 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success2_TCC3 0 (unBind_prev_success2_TCC3-1 nil 3552907137 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success2_TCC2 0 (unBind_prev_success2_TCC2-1 nil 3552907137 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm quote_with_prev_key2_TCC1 0 (quote_with_prev_key2_TCC1-1 nil 3552907137 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_seal_success 0 (unseal_prev_seal_success-1 nil 3552237834 ("" (grind) (("" (rewrite "double_private") nil nil)) nil) ((double_private formula-decl nil key nil) (NOT const-decl "[bool -> bool]" booleans nil) (>>= const-decl "State" StateMonad nil) (useOutputOutput const-decl "[A -> State]" StateMonad nil) (TPM_UnsealPrev const-decl "[tpmAbsOutput -> State]" tpm nil) (unsealOut const-decl "tpmAbsOutput" tpm nil) (unseal const-decl "BLOB" key nil) (TPM_Seal const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552908685 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success2 0 (unBind_prev_success2-1 nil 3552906401 ("" (grind) (("" (rewrite "double_private") nil nil)) nil) ((double_private formula-decl nil key nil) (decryptSym const-decl "BLOB" key nil) (decryptAsym const-decl "BLOB" key nil) (NOT const-decl "[bool -> bool]" booleans nil) (add const-decl "(nonempty?)" sets nil) (TPM_UnBind const-decl "State" tpm nil) (unBindOut const-decl "tpmAbsOutput" tpm nil) (decrypt const-decl "BLOB" key nil) (Tspi_Data_Bind const-decl "State" tpm nil) (dataBindOut const-decl "tpmAbsOutput" tpm nil) (>>= const-decl "State" StateMonad nil) (emptyset const-decl "set" sets nil) (TPM_LoadKey2 const-decl "State" tpm nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (checkKey const-decl "bool" key nil) (member const-decl "bool" sets nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)) shostak))("tpm" tpm unBind_prev_success2_TCC1 0 (unBind_prev_success2_TCC1-1 nil 3552906400 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_seal_success2 0 (unseal_prev_seal_success2-1 nil 3552902634 ("" (grind) (("" (rewrite "double_private") nil nil)) nil) ((double_private formula-decl nil key nil) (NOT const-decl "[bool -> bool]" booleans nil) (>>= const-decl "State" StateMonad nil) (TPM_Unseal const-decl "State" tpm nil) (unsealOut const-decl "tpmAbsOutput" tpm nil) (unseal const-decl "BLOB" key nil) (TPM_Seal const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)) shostak))("tpm" tpm unseal_prev_seal_success2_TCC2 0 (unseal_prev_seal_success2_TCC2-1 nil 3552902633 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_seal_success2_TCC1 0 (unseal_prev_seal_success2_TCC1-1 nil 3552902633 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm quote_with_prev_key2 0 (quote_with_prev_key2-1 nil 3552902359 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (checkKeyRoot const-decl "bool" key nil) (getPCRs const-decl "list[PCR]" pcr nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (TPM_Quote const-decl "State" tpm nil) (>>= const-decl "State" StateMonad nil)) shostak))("tpm" tpm activate_prev_success2 0 (activate_prev_success2-1 nil 3552843346 ("" (grind) nil nil) ((ekVal const-decl "KEY" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (activateIdentityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (checkKeyRoot const-decl "bool" key nil) (activateIdentityOut const-decl "tpmAbsOutput" tpm nil) (modifyOutput const-decl "State" StateMonad nil) (TPM_ActivateIdentity const-decl "State" tpm nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (add const-decl "(nonempty?)" sets nil)) shostak))("tpm" tpm activate_prev_success2_TCC1 0 (activate_prev_success2_TCC1-1 nil 3552843346 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm load_prev_key_success2 0 (load_prev_key_success2-1 nil 3552901206 ("" (grind) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (TPM_LoadKey2 const-decl "State" tpm nil) (emptyset const-decl "set" sets nil) (>>= const-decl "State" StateMonad nil) (add const-decl "(nonempty?)" sets nil)) shostak))("tpm" tpm load_prev_key_success2_TCC2 0 (load_prev_key_success2_TCC2-1 nil 3552901183 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm load_prev_key_success2_TCC1 0 (load_prev_key_success2_TCC1-1 nil 3552901183 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_seal_success 0 (unseal_prev_seal_success-1 nil 3552908920 ("" (grind) (("" (rewrite "double_private") nil nil)) nil) ((double_private formula-decl nil key nil) (NOT const-decl "[bool -> bool]" booleans nil) (>>= const-decl "State" StateMonad nil) (TPM_Unseal const-decl "State" tpm nil) (unsealOut const-decl "tpmAbsOutput" tpm nil) (unseal const-decl "BLOB" key nil) (TPM_Seal const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)) shostak))("tpm" tpm unseal_prev_seal_success_TCC2 0 (unseal_prev_seal_success_TCC2-1 nil 3552908836 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_seal_success_TCC1 0 (unseal_prev_seal_success_TCC1-1 nil 3552908836 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm make_identity_success_TCC1 0 (make_identity_success_TCC1-1 nil 3552908708 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (CPU_senter const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (CPU_sinit const-decl "State" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm load_prev_key_success_TCC2 0 (load_prev_key_success_TCC2-1 nil 3552908836 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm load_prev_key_success_TCC1 0 (load_prev_key_success_TCC1-1 nil 3552908836 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_success_TCC2 0 (unseal_prev_success_TCC2-1 nil 3552909429 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_success_TCC1 0 (unseal_prev_success_TCC1-1 nil 3552909429 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552909429 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm activate_prev_success_TCC1 0 (activate_prev_success_TCC1-1 nil 3552908836 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success_TCC4 0 (unBind_prev_success_TCC4-1 nil 3552911914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success_TCC3 0 (unBind_prev_success_TCC3-1 nil 3552911914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success_TCC2 0 (unBind_prev_success_TCC2-1 nil 3552911914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm cert_and_quote_with_prev_key_TCC3 0 (cert_and_quote_with_prev_key_TCC3-1 nil 3552912452 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm cert_and_quote_with_prev_key_TCC2 0 (cert_and_quote_with_prev_key_TCC2-1 nil 3552912452 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm cert_and_quote_with_prev_key_TCC1 0 (cert_and_quote_with_prev_key_TCC1-1 nil 3552911914 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success_TCC1 0 (unBind_prev_success_TCC1-1 nil 3552908836 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552923105 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm make_identity_success_TCC1 0 (make_identity_success_TCC1-1 nil 3552924072 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552925473 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552927601 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm signWithAik_TCC1 0 (signWithAik_TCC1-1 nil 3552927867 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm signWithAik 0 (signWithAik-1 nil 3552927601 ("" (grind) nil nil) ((TPM_Sign const-decl "State" tpm nil) (signOut const-decl "tpmAbsOutput" tpm nil) (/= const-decl "boolean" notequal nil) (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil) (TPM_ActivateIdentity const-decl "State" tpm nil) (modifyOutput const-decl "State" StateMonad nil) (activateIdentityOut const-decl "tpmAbsOutput" tpm nil) (checkKeyRoot const-decl "bool" key nil) (activateIdentityState const-decl "tpmAbsState" tpm nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (checkKey const-decl "bool" key nil) (member const-decl "bool" sets nil) (>>= const-decl "State" StateMonad nil) (useOutputStateOutput const-decl "[A -> State]" StateMonad nil) (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil) (saveState const-decl "tpmAbsState" tpm nil) (TPM_MakeIdentity const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)) shostak))("tpm" tpm nested_wrapped_keys_success_TCC2 0 (nested_wrapped_keys_success_TCC2-1 nil 3552909429 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm activate_prev_success2 0 (activate_prev_success2-1 nil 3552929182 ("" (grind) nil nil) ((ekVal const-decl "KEY" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (activateIdentityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (checkKeyRoot const-decl "bool" key nil) (activateIdentityOut const-decl "tpmAbsOutput" tpm nil) (modifyOutput const-decl "State" StateMonad nil) (TPM_ActivateIdentity const-decl "State" tpm nil) (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (srkVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (add const-decl "(nonempty?)" sets nil)) shostak))("tpm" tpm load_prev_key_success2 0 (load_prev_key_success2-1 nil 3552929005 ("" (grind) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (TPM_LoadKey2 const-decl "State" tpm nil) (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil) (emptyset const-decl "set" sets nil) (>>= const-decl "State" StateMonad nil) (add const-decl "(nonempty?)" sets nil)) shostak))("tpm" tpm cert_and_quote_with_prev_key_TCC2 0 (cert_and_quote_with_prev_key_TCC2-1 nil 3552930129 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm cert_and_quote_with_prev_key_TCC1 0 (cert_and_quote_with_prev_key_TCC1-1 nil 3552930129 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success_TCC1 0 (unBind_prev_success_TCC1-1 nil 3552930129 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_success_TCC2 0 (unseal_prev_success_TCC2-1 nil 3552930129 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_success_TCC1 0 (unseal_prev_success_TCC1-1 nil 3552930129 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm activate_prev_success_TCC1 0 (activate_prev_success_TCC1-1 nil 3552929171 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm make_identity_success_TCC1 0 (make_identity_success_TCC1-1 nil 3552930129 ("" (subtype-tcc) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (CPU_senter const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (CPU_sinit const-decl "State" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm load_prev_key_success_TCC2 0 (load_prev_key_success_TCC2-1 nil 3552928994 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm load_prev_key_success_TCC1 0 (load_prev_key_success_TCC1-1 nil 3552928994 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3552933452 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm seal_secret_success_TCC2 0 (seal_secret_success_TCC2-1 nil 3549985637 ("" (subtype-tcc) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (CPU_senter const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (CPU_sinit const-decl "State" tpm nil) (TPM_Extend const-decl "State" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Seal const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm seal_secret_success_TCC1 0 (seal_secret_success_TCC1-1 nil 3549985637 ("" (subtype-tcc) nil nil) ((NOT const-decl "[bool -> bool]" booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (CPU_senter const-decl "State" tpm nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (CPU_sinit const-decl "State" tpm nil) (TPM_Extend const-decl "State" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Seal const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) nil))("tpm" tpm nested_wrapped_keys_success_TCC2 0 (nested_wrapped_keys_success_TCC2-1 nil 3552933452 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm nested_wrapped_keys_success_TCC1 0 (nested_wrapped_keys_success_TCC1-1 nil 3552909429 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm activate_identity 0 (activate_identity-1 nil 3551091916 ("" (assert) (("" (grind) nil nil)) nil) ((add const-decl "(nonempty?)" sets nil) (emptyset const-decl "set" sets nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (TPM_ActivateIdentity const-decl "State" tpm nil) (modifyOutput const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (activateIdentityOut const-decl "tpmAbsOutput" tpm nil) (checkKeyRoot const-decl "bool" key nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (activateIdentityState const-decl "tpmAbsState" tpm nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (checkKey const-decl "bool" key nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (member const-decl "bool" sets nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (NOT const-decl "[bool -> bool]" booleans nil) (wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (symKey? adt-recognizer-decl "[KEY -> boolean]" key nil)) shostak))("tpm" tpm quoteMonad 0 (quoteMonad-1 nil 3549040969 ("" (assert) (("" (grind) nil nil)) nil) ((>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (TPM_Quote const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) nil (checkKeyRoot const-decl "bool" key nil) (TPM_Extend const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (NOT const-decl "[bool -> bool]" booleans nil) (wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil)) shostak))("tpm" tpm quoteMonad_TCC1 0 (quoteMonad_TCC1-1 nil 3549372787 ("" (grind) nil nil) (nil) nil))("tpm" tpm checkPCRS 0 (checkPCRS-1 nil 3549207319 ("" (assert) (("" (grind) nil nil)) nil) ((>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (TPM_Quote const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) (checkKeyRoot const-decl "bool" key nil) (TPM_Extend const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (PCRMASK type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (>= const-decl "bool" reals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (AND const-decl "[bool, bool -> bool]" booleans nil) nil (list type-decl nil list_adt nil) (PRED type-eq-decl nil defined_types nil) (number nonempty-type-decl nil numbers nil) (wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (NOT const-decl "[bool -> bool]" booleans nil)) shostak))("tpm" tpm badSigningKey 0 (badSigningKey-1 nil 3549204581 ("" (grind) (("1" (decompose-equality -6) nil nil) ("2" (decompose-equality -6) nil nil) ("3" (decompose-equality -6) nil nil) ("4" (decompose-equality -6) nil nil)) nil) ((= const-decl "[T, T -> boolean]" equalities nil) (outQuote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (oqk adt-accessor-decl "[(outQuote?) -> KEY[B, K, HV]]" tpm nil) (BLOB type-decl nil key nil) (PCR type-decl nil pcr nil) (outQuote adt-constructor-decl "[[KEY, BLOB, list[PCR]] -> (outQuote?)]" tpm nil) (private const-decl "(asymKey?)" key nil) (wkey adt-accessor-decl "[(wrapKey?) -> (asymKey?)]" key nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (PCRINDEX type-eq-decl nil pcr nil) (oqnon adt-accessor-decl "[(outQuote?) -> BLOB[B, K, HV]]" tpm nil) (oqpcrs adt-accessor-decl "[(outQuote?) -> list[PCR]]" tpm nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (PRED type-eq-decl nil defined_types nil) (list type-decl nil list_adt nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil) (PCRMASK type-eq-decl nil pcr nil) (wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (/= const-decl "boolean" notequal nil) (TPM_Quote const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) (checkKeyRoot const-decl "bool" key nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil)) shostak))("tpm" tpm bad_signing_key 0 (bad_signing_key-1 nil 3553256939 ("" (grind) (("" (decompose-equality) (("" (postpone) nil nil)) nil)) nil) nil shostak))("tpm" tpm badSigningKey 0 (badSigningKey-1 nil 3553256968 ("" (assert) (("" (grind) (("" (postpone) nil nil)) nil)) nil) nil shostak))("tpm" tpm badNonce 0 (badNonce-1 nil 3549294662 ("" (grind) (("1" (decompose-equality -4) nil nil) ("2" (decompose-equality -4) nil nil)) nil) ((= const-decl "[T, T -> boolean]" equalities nil) (outQuote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (oqk adt-accessor-decl "[(outQuote?) -> KEY[B, K, HV]]" tpm nil) (BLOB type-decl nil key nil) (PCR type-decl nil pcr nil) (outQuote adt-constructor-decl "[[KEY, BLOB, list[PCR]] -> (outQuote?)]" tpm nil) (private const-decl "(asymKey?)" key nil) (wkey adt-accessor-decl "[(wrapKey?) -> (asymKey?)]" key nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (PCRINDEX type-eq-decl nil pcr nil) (map adt-def-decl "list[T1]" list_adt_map nil) (oqnon adt-accessor-decl "[(outQuote?) -> BLOB[B, K, HV]]" tpm nil) (oqpcrs adt-accessor-decl "[(outQuote?) -> list[PCR]]" tpm nil) (NOT const-decl "[bool -> bool]" booleans nil) (wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (number nonempty-type-decl nil numbers nil) (PRED type-eq-decl nil defined_types nil) (list type-decl nil list_adt nil) (every adt-def-decl "boolean" list_adt nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil) (PCRMASK type-eq-decl nil pcr nil) (TPM_Quote const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) (checkKeyRoot const-decl "bool" key nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (/= const-decl "boolean" notequal nil)) shostak))("tpm" tpm noSenter 0 (noSenter-1 nil 3535410642 ("" (assert) (("" (grind) nil nil)) nil) ((>>= const-decl "State" StateMonad nil) (unit const-decl "State" StateMonad nil) (TPM_Quote const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) (checkKeyRoot const-decl "bool" key nil) (TPM_Extend const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (NOT const-decl "[bool -> bool]" booleans nil) (wrapKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (number nonempty-type-decl nil numbers nil) (PRED type-eq-decl nil defined_types nil) (list type-decl nil list_adt nil) nil (AND const-decl "[bool, bool -> bool]" booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil) (PCRMASK type-eq-decl nil pcr nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553259098 ("" (inst 1 " (#
                         pcrs:=pcrsPower
			 , postInit:=true
                         , locality:=4
			 , keys:=emptyset
			 , srk:=private(srkVal)
			 , ek:=private(ekVal)
			 , memory:=empty
			 #)
<<<<<<< HEAD
") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553426321 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm state_unchanged 0 (state_unchanged-1 nil 3553427932 ("" (grind) (("1" (postpone) nil nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil) ("4" (postpone) nil nil) ("5" (postpone) nil nil) ("6" (postpone) nil nil) ("7" (postpone) nil nil) ("8" (postpone) nil nil) ("9" (postpone) nil nil) ("10" (postpone) nil nil) ("11" (postpone) nil nil) ("12" (postpone) nil nil)) nil) nil shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553427932 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553445486 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm sequence_invariants 0 (sequence_invariants-1 nil 3553438493 ("" (grind) (("1" (postpone) nil nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil) ("4" (postpone) nil nil) ("5" (postpone) nil nil) ("6" (postpone) nil nil) ("7" (postpone) nil nil) ("8" (postpone) nil nil) ("9" (postpone) nil nil) ("10" (postpone) nil nil) ("11" (postpone) nil nil) ("12" (postpone) nil nil) ("13" (postpone) nil nil) ("14" (postpone) nil nil) ("15" (postpone) nil nil) ("16" (postpone) nil nil) ("17" (postpone) nil nil) ("18" (postpone) nil nil) ("19" (postpone) nil nil) ("20" (postpone) nil nil) ("21" (postpone) nil nil) ("22" (postpone) nil nil) ("23" (postpone) nil nil) ("24" (postpone) nil nil) ("25" (postpone) nil nil) ("26" (postpone) nil nil) ("27" (postpone) nil nil) ("28" (postpone) nil nil) ("29" (postpone) nil nil) ("30" (postpone) nil nil) ("31" (postpone) nil nil) ("32" (postpone) nil nil) ("33" (postpone) nil nil) ("34" (postpone) nil nil) ("35" (postpone) nil nil) ("36" (postpone) nil nil) ("37" (postpone) nil nil) ("38" (postpone) nil nil) ("39" (postpone) nil nil) ("40" (postpone) nil nil) ("41" (postpone) nil nil) ("42" (postpone) nil nil) ("43" (postpone) nil nil) ("44" (postpone) nil nil) ("45" (postpone) nil nil) ("46" (postpone) nil nil) ("47" (postpone) nil nil) ("48" (postpone) nil nil) ("49" (postpone) nil nil) ("50" (postpone) nil nil) ("51" (postpone) nil nil) ("52" (postpone) nil nil) ("53" (postpone) nil nil) ("54" (postpone) nil nil) ("55" (postpone) nil nil) ("56" (postpone) nil nil) ("57" (postpone) nil nil) ("58" (postpone) nil nil) ("59" (postpone) nil nil) ("60" (postpone) nil nil) ("61" (postpone) nil nil) ("62" (postpone) nil nil) ("63" (postpone) nil nil) ("64" (postpone) nil nil) ("65" (postpone) nil nil) ("66" (postpone) nil nil) ("67" (postpone) nil nil) ("68" (postpone) nil nil) ("69" (postpone) nil nil) ("70" (postpone) nil nil) ("71" (postpone) nil nil) ("72" (postpone) nil nil) ("73" (postpone) nil nil) ("74" (postpone) nil nil) ("75" (postpone) nil nil) ("76" (postpone) nil nil) ("77" (postpone) nil nil) ("78" (postpone) nil nil) ("79" (postpone) nil nil) ("80" (postpone) nil nil) ("81" (postpone) nil nil) ("82" (postpone) nil nil) ("83" (postpone) nil nil) ("84" (postpone) nil nil) ("85" (postpone) nil nil) ("86" (postpone) nil nil) ("87" (postpone) nil nil) ("88" (postpone) nil nil) ("89" (postpone) nil nil) ("90" (postpone) nil nil) ("91" (postpone) nil nil) ("92" (postpone) nil nil) ("93" (postpone) nil nil) ("94" (postpone) nil nil) ("95" (postpone) nil nil) ("96" (postpone) nil nil) ("97" (postpone) nil nil) ("98" (postpone) nil nil) ("99" (postpone) nil nil) ("100" (postpone) nil nil) ("101" (postpone) nil nil) ("102" (postpone) nil nil) ("103" (postpone) nil nil) ("104" (postpone) nil nil) ("105" (postpone) nil nil) ("106" (postpone) nil nil) ("107" (postpone) nil nil) ("108" (postpone) nil nil) ("109" (postpone) nil nil) ("110" (postpone) nil nil) ("111" (postpone) nil nil) ("112" (postpone) nil nil) ("113" (postpone) nil nil) ("114" (postpone) nil nil) ("115" (postpone) nil nil) ("116" (postpone) nil nil) ("117" (postpone) nil nil) ("118" (postpone) nil nil) ("119" (postpone) nil nil) ("120" (postpone) nil nil) ("121" (postpone) nil nil) ("122" (postpone) nil nil) ("123" (postpone) nil nil) ("124" (postpone) nil nil) ("125" (postpone) nil nil) ("126" (postpone) nil nil) ("127" (postpone) nil nil) ("128" (postpone) nil nil) ("129" (postpone) nil nil) ("130" (postpone) nil nil) ("131" (postpone) nil nil) ("132" (postpone) nil nil) ("133" (postpone) nil nil) ("134" (postpone) nil nil) ("135" (postpone) nil nil) ("136" (postpone) nil nil) ("137" (postpone) nil nil) ("138" (postpone) nil nil) ("139" (postpone) nil nil) ("140" (postpone) nil nil) ("141" (postpone) nil nil) ("142" (postpone) nil nil) ("143" (postpone) nil nil) ("144" (postpone) nil nil) ("145" (postpone) nil nil) ("146" (postpone) nil nil) ("147" (postpone) nil nil) ("148" (postpone) nil nil) ("149" (postpone) nil nil) ("150" (postpone) nil nil) ("151" (postpone) nil nil) ("152" (postpone) nil nil) ("153" (postpone) nil nil) ("154" (postpone) nil nil) ("155" (postpone) nil nil) ("156" (postpone) nil nil) ("157" (postpone) nil nil) ("158" (postpone) nil nil) ("159" (postpone) nil nil) ("160" (postpone) nil nil) ("161" (postpone) nil nil) ("162" (postpone) nil nil) ("163" (postpone) nil nil) ("164" (postpone) nil nil) ("165" (postpone) nil nil) ("166" (postpone) nil nil) ("167" (postpone) nil nil) ("168" (postpone) nil nil) ("169" (postpone) nil nil) ("170" (postpone) nil nil) ("171" (postpone) nil nil) ("172" (postpone) nil nil) ("173" (postpone) nil nil) ("174" (postpone) nil nil) ("175" (postpone) nil nil) ("176" (postpone) nil nil) ("177" (postpone) nil nil) ("178" (postpone) nil nil) ("179" (postpone) nil nil) ("180" (postpone) nil nil) ("181" (postpone) nil nil) ("182" (postpone) nil nil) ("183" (postpone) nil nil) ("184" (postpone) nil nil) ("185" (postpone) nil nil) ("186" (postpone) nil nil) ("187" (postpone) nil nil) ("188" (postpone) nil nil) ("189" (postpone) nil nil) ("190" (postpone) nil nil) ("191" (postpone) nil nil) ("192" (postpone) nil nil) ("193" (postpone) nil nil) ("194" (postpone) nil nil)) nil) nil shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553605240 ("" (inst 1 " (#
=======
<<<<<<< HEAD
") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553426321 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm state_unchanged 0 (state_unchanged-1 nil 3553427932 ("" (grind) (("1" (postpone) nil nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil) ("4" (postpone) nil nil) ("5" (postpone) nil nil) ("6" (postpone) nil nil) ("7" (postpone) nil nil) ("8" (postpone) nil nil) ("9" (postpone) nil nil) ("10" (postpone) nil nil) ("11" (postpone) nil nil) ("12" (postpone) nil nil)) nil) nil shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553427932 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553445486 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm sequence_invariants 0 (sequence_invariants-1 nil 3553438493 ("" (grind) (("1" (postpone) nil nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil) ("4" (postpone) nil nil) ("5" (postpone) nil nil) ("6" (postpone) nil nil) ("7" (postpone) nil nil) ("8" (postpone) nil nil) ("9" (postpone) nil nil) ("10" (postpone) nil nil) ("11" (postpone) nil nil) ("12" (postpone) nil nil) ("13" (postpone) nil nil) ("14" (postpone) nil nil) ("15" (postpone) nil nil) ("16" (postpone) nil nil) ("17" (postpone) nil nil) ("18" (postpone) nil nil) ("19" (postpone) nil nil) ("20" (postpone) nil nil) ("21" (postpone) nil nil) ("22" (postpone) nil nil) ("23" (postpone) nil nil) ("24" (postpone) nil nil) ("25" (postpone) nil nil) ("26" (postpone) nil nil) ("27" (postpone) nil nil) ("28" (postpone) nil nil) ("29" (postpone) nil nil) ("30" (postpone) nil nil) ("31" (postpone) nil nil) ("32" (postpone) nil nil) ("33" (postpone) nil nil) ("34" (postpone) nil nil) ("35" (postpone) nil nil) ("36" (postpone) nil nil) ("37" (postpone) nil nil) ("38" (postpone) nil nil) ("39" (postpone) nil nil) ("40" (postpone) nil nil) ("41" (postpone) nil nil) ("42" (postpone) nil nil) ("43" (postpone) nil nil) ("44" (postpone) nil nil) ("45" (postpone) nil nil) ("46" (postpone) nil nil) ("47" (postpone) nil nil) ("48" (postpone) nil nil) ("49" (postpone) nil nil) ("50" (postpone) nil nil) ("51" (postpone) nil nil) ("52" (postpone) nil nil) ("53" (postpone) nil nil) ("54" (postpone) nil nil) ("55" (postpone) nil nil) ("56" (postpone) nil nil) ("57" (postpone) nil nil) ("58" (postpone) nil nil) ("59" (postpone) nil nil) ("60" (postpone) nil nil) ("61" (postpone) nil nil) ("62" (postpone) nil nil) ("63" (postpone) nil nil) ("64" (postpone) nil nil) ("65" (postpone) nil nil) ("66" (postpone) nil nil) ("67" (postpone) nil nil) ("68" (postpone) nil nil) ("69" (postpone) nil nil) ("70" (postpone) nil nil) ("71" (postpone) nil nil) ("72" (postpone) nil nil) ("73" (postpone) nil nil) ("74" (postpone) nil nil) ("75" (postpone) nil nil) ("76" (postpone) nil nil) ("77" (postpone) nil nil) ("78" (postpone) nil nil) ("79" (postpone) nil nil) ("80" (postpone) nil nil) ("81" (postpone) nil nil) ("82" (postpone) nil nil) ("83" (postpone) nil nil) ("84" (postpone) nil nil) ("85" (postpone) nil nil) ("86" (postpone) nil nil) ("87" (postpone) nil nil) ("88" (postpone) nil nil) ("89" (postpone) nil nil) ("90" (postpone) nil nil) ("91" (postpone) nil nil) ("92" (postpone) nil nil) ("93" (postpone) nil nil) ("94" (postpone) nil nil) ("95" (postpone) nil nil) ("96" (postpone) nil nil) ("97" (postpone) nil nil) ("98" (postpone) nil nil) ("99" (postpone) nil nil) ("100" (postpone) nil nil) ("101" (postpone) nil nil) ("102" (postpone) nil nil) ("103" (postpone) nil nil) ("104" (postpone) nil nil) ("105" (postpone) nil nil) ("106" (postpone) nil nil) ("107" (postpone) nil nil) ("108" (postpone) nil nil) ("109" (postpone) nil nil) ("110" (postpone) nil nil) ("111" (postpone) nil nil) ("112" (postpone) nil nil) ("113" (postpone) nil nil) ("114" (postpone) nil nil) ("115" (postpone) nil nil) ("116" (postpone) nil nil) ("117" (postpone) nil nil) ("118" (postpone) nil nil) ("119" (postpone) nil nil) ("120" (postpone) nil nil) ("121" (postpone) nil nil) ("122" (postpone) nil nil) ("123" (postpone) nil nil) ("124" (postpone) nil nil) ("125" (postpone) nil nil) ("126" (postpone) nil nil) ("127" (postpone) nil nil) ("128" (postpone) nil nil) ("129" (postpone) nil nil) ("130" (postpone) nil nil) ("131" (postpone) nil nil) ("132" (postpone) nil nil) ("133" (postpone) nil nil) ("134" (postpone) nil nil) ("135" (postpone) nil nil) ("136" (postpone) nil nil) ("137" (postpone) nil nil) ("138" (postpone) nil nil) ("139" (postpone) nil nil) ("140" (postpone) nil nil) ("141" (postpone) nil nil) ("142" (postpone) nil nil) ("143" (postpone) nil nil) ("144" (postpone) nil nil) ("145" (postpone) nil nil) ("146" (postpone) nil nil) ("147" (postpone) nil nil) ("148" (postpone) nil nil) ("149" (postpone) nil nil) ("150" (postpone) nil nil) ("151" (postpone) nil nil) ("152" (postpone) nil nil) ("153" (postpone) nil nil) ("154" (postpone) nil nil) ("155" (postpone) nil nil) ("156" (postpone) nil nil) ("157" (postpone) nil nil) ("158" (postpone) nil nil) ("159" (postpone) nil nil) ("160" (postpone) nil nil) ("161" (postpone) nil nil) ("162" (postpone) nil nil) ("163" (postpone) nil nil) ("164" (postpone) nil nil) ("165" (postpone) nil nil) ("166" (postpone) nil nil) ("167" (postpone) nil nil) ("168" (postpone) nil nil) ("169" (postpone) nil nil) ("170" (postpone) nil nil) ("171" (postpone) nil nil) ("172" (postpone) nil nil) ("173" (postpone) nil nil) ("174" (postpone) nil nil) ("175" (postpone) nil nil) ("176" (postpone) nil nil) ("177" (postpone) nil nil) ("178" (postpone) nil nil) ("179" (postpone) nil nil) ("180" (postpone) nil nil) ("181" (postpone) nil nil) ("182" (postpone) nil nil) ("183" (postpone) nil nil) ("184" (postpone) nil nil) ("185" (postpone) nil nil) ("186" (postpone) nil nil) ("187" (postpone) nil nil) ("188" (postpone) nil nil) ("189" (postpone) nil nil) ("190" (postpone) nil nil) ("191" (postpone) nil nil) ("192" (postpone) nil nil) ("193" (postpone) nil nil) ("194" (postpone) nil nil)) nil) nil shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553605240 ("" (inst 1 " (#
=======
<<<<<<< HEAD
") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553426321 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm state_unchanged 0 (state_unchanged-1 nil 3553427932 ("" (grind) (("1" (postpone) nil nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil) ("4" (postpone) nil nil) ("5" (postpone) nil nil) ("6" (postpone) nil nil) ("7" (postpone) nil nil) ("8" (postpone) nil nil) ("9" (postpone) nil nil) ("10" (postpone) nil nil) ("11" (postpone) nil nil) ("12" (postpone) nil nil)) nil) nil shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553427932 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553445486 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm sequence_invariants 0 (sequence_invariants-1 nil 3553438493 ("" (grind) (("1" (postpone) nil nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil) ("4" (postpone) nil nil) ("5" (postpone) nil nil) ("6" (postpone) nil nil) ("7" (postpone) nil nil) ("8" (postpone) nil nil) ("9" (postpone) nil nil) ("10" (postpone) nil nil) ("11" (postpone) nil nil) ("12" (postpone) nil nil) ("13" (postpone) nil nil) ("14" (postpone) nil nil) ("15" (postpone) nil nil) ("16" (postpone) nil nil) ("17" (postpone) nil nil) ("18" (postpone) nil nil) ("19" (postpone) nil nil) ("20" (postpone) nil nil) ("21" (postpone) nil nil) ("22" (postpone) nil nil) ("23" (postpone) nil nil) ("24" (postpone) nil nil) ("25" (postpone) nil nil) ("26" (postpone) nil nil) ("27" (postpone) nil nil) ("28" (postpone) nil nil) ("29" (postpone) nil nil) ("30" (postpone) nil nil) ("31" (postpone) nil nil) ("32" (postpone) nil nil) ("33" (postpone) nil nil) ("34" (postpone) nil nil) ("35" (postpone) nil nil) ("36" (postpone) nil nil) ("37" (postpone) nil nil) ("38" (postpone) nil nil) ("39" (postpone) nil nil) ("40" (postpone) nil nil) ("41" (postpone) nil nil) ("42" (postpone) nil nil) ("43" (postpone) nil nil) ("44" (postpone) nil nil) ("45" (postpone) nil nil) ("46" (postpone) nil nil) ("47" (postpone) nil nil) ("48" (postpone) nil nil) ("49" (postpone) nil nil) ("50" (postpone) nil nil) ("51" (postpone) nil nil) ("52" (postpone) nil nil) ("53" (postpone) nil nil) ("54" (postpone) nil nil) ("55" (postpone) nil nil) ("56" (postpone) nil nil) ("57" (postpone) nil nil) ("58" (postpone) nil nil) ("59" (postpone) nil nil) ("60" (postpone) nil nil) ("61" (postpone) nil nil) ("62" (postpone) nil nil) ("63" (postpone) nil nil) ("64" (postpone) nil nil) ("65" (postpone) nil nil) ("66" (postpone) nil nil) ("67" (postpone) nil nil) ("68" (postpone) nil nil) ("69" (postpone) nil nil) ("70" (postpone) nil nil) ("71" (postpone) nil nil) ("72" (postpone) nil nil) ("73" (postpone) nil nil) ("74" (postpone) nil nil) ("75" (postpone) nil nil) ("76" (postpone) nil nil) ("77" (postpone) nil nil) ("78" (postpone) nil nil) ("79" (postpone) nil nil) ("80" (postpone) nil nil) ("81" (postpone) nil nil) ("82" (postpone) nil nil) ("83" (postpone) nil nil) ("84" (postpone) nil nil) ("85" (postpone) nil nil) ("86" (postpone) nil nil) ("87" (postpone) nil nil) ("88" (postpone) nil nil) ("89" (postpone) nil nil) ("90" (postpone) nil nil) ("91" (postpone) nil nil) ("92" (postpone) nil nil) ("93" (postpone) nil nil) ("94" (postpone) nil nil) ("95" (postpone) nil nil) ("96" (postpone) nil nil) ("97" (postpone) nil nil) ("98" (postpone) nil nil) ("99" (postpone) nil nil) ("100" (postpone) nil nil) ("101" (postpone) nil nil) ("102" (postpone) nil nil) ("103" (postpone) nil nil) ("104" (postpone) nil nil) ("105" (postpone) nil nil) ("106" (postpone) nil nil) ("107" (postpone) nil nil) ("108" (postpone) nil nil) ("109" (postpone) nil nil) ("110" (postpone) nil nil) ("111" (postpone) nil nil) ("112" (postpone) nil nil) ("113" (postpone) nil nil) ("114" (postpone) nil nil) ("115" (postpone) nil nil) ("116" (postpone) nil nil) ("117" (postpone) nil nil) ("118" (postpone) nil nil) ("119" (postpone) nil nil) ("120" (postpone) nil nil) ("121" (postpone) nil nil) ("122" (postpone) nil nil) ("123" (postpone) nil nil) ("124" (postpone) nil nil) ("125" (postpone) nil nil) ("126" (postpone) nil nil) ("127" (postpone) nil nil) ("128" (postpone) nil nil) ("129" (postpone) nil nil) ("130" (postpone) nil nil) ("131" (postpone) nil nil) ("132" (postpone) nil nil) ("133" (postpone) nil nil) ("134" (postpone) nil nil) ("135" (postpone) nil nil) ("136" (postpone) nil nil) ("137" (postpone) nil nil) ("138" (postpone) nil nil) ("139" (postpone) nil nil) ("140" (postpone) nil nil) ("141" (postpone) nil nil) ("142" (postpone) nil nil) ("143" (postpone) nil nil) ("144" (postpone) nil nil) ("145" (postpone) nil nil) ("146" (postpone) nil nil) ("147" (postpone) nil nil) ("148" (postpone) nil nil) ("149" (postpone) nil nil) ("150" (postpone) nil nil) ("151" (postpone) nil nil) ("152" (postpone) nil nil) ("153" (postpone) nil nil) ("154" (postpone) nil nil) ("155" (postpone) nil nil) ("156" (postpone) nil nil) ("157" (postpone) nil nil) ("158" (postpone) nil nil) ("159" (postpone) nil nil) ("160" (postpone) nil nil) ("161" (postpone) nil nil) ("162" (postpone) nil nil) ("163" (postpone) nil nil) ("164" (postpone) nil nil) ("165" (postpone) nil nil) ("166" (postpone) nil nil) ("167" (postpone) nil nil) ("168" (postpone) nil nil) ("169" (postpone) nil nil) ("170" (postpone) nil nil) ("171" (postpone) nil nil) ("172" (postpone) nil nil) ("173" (postpone) nil nil) ("174" (postpone) nil nil) ("175" (postpone) nil nil) ("176" (postpone) nil nil) ("177" (postpone) nil nil) ("178" (postpone) nil nil) ("179" (postpone) nil nil) ("180" (postpone) nil nil) ("181" (postpone) nil nil) ("182" (postpone) nil nil) ("183" (postpone) nil nil) ("184" (postpone) nil nil) ("185" (postpone) nil nil) ("186" (postpone) nil nil) ("187" (postpone) nil nil) ("188" (postpone) nil nil) ("189" (postpone) nil nil) ("190" (postpone) nil nil) ("191" (postpone) nil nil) ("192" (postpone) nil nil) ("193" (postpone) nil nil) ("194" (postpone) nil nil)) nil) nil shostak))("tpm" tpm cert_and_quote_with_prev_key 0 (cert_and_quote_with_prev_key-1 nil 3551028543 ("" (skosimp*) (("" (assert) (("" (grind) nil nil)) nil)) nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (saveState const-decl "tpmAbsState" tpm nil) (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" tpm nil) (useOutputStateOutput const-decl "[A -> State]" StateMonad nil) (>>= const-decl "State" StateMonad nil) (caVal const-decl "KEY" tpm nil) (certOut const-decl "tpmAbsOutput" tpm nil) (CA_certify const-decl "State" tpm nil) (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (activateIdentityState const-decl "tpmAbsState" tpm nil) (checkKeyRoot const-decl "bool" key nil) (activateIdentityOut const-decl "tpmAbsOutput" tpm nil) (modifyOutput const-decl "State" StateMonad nil) (TPM_ActivateIdentity const-decl "State" tpm nil) (readOut const-decl "tpmAbsOutput" tpm nil) (CPU_read const-decl "State" tpm nil) (getPCRs const-decl "list[PCR]" pcr nil) (quoteOut const-decl "tpmAbsOutput" tpm nil) (TPM_Quote const-decl "State" tpm nil) (buildQuote const-decl "tpmAbsOutput" tpm nil) (CPU_BuildQuoteFromMem const-decl "State" tpm nil) (updateLoc const-decl "mem" memory nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553605240 ("" (inst 1 " (#
=======
") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553426321 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm state_unchanged 0 (state_unchanged-1 nil 3553427932 ("" (grind) (("1" (postpone) nil nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil) ("4" (postpone) nil nil) ("5" (postpone) nil nil) ("6" (postpone) nil nil) ("7" (postpone) nil nil) ("8" (postpone) nil nil) ("9" (postpone) nil nil) ("10" (postpone) nil nil) ("11" (postpone) nil nil) ("12" (postpone) nil nil)) nil) nil shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553427932 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553445486 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm sequence_invariants 0 (sequence_invariants-1 nil 3553438493 ("" (grind) (("1" (postpone) nil nil) ("2" (postpone) nil nil) ("3" (postpone) nil nil) ("4" (postpone) nil nil) ("5" (postpone) nil nil) ("6" (postpone) nil nil) ("7" (postpone) nil nil) ("8" (postpone) nil nil) ("9" (postpone) nil nil) ("10" (postpone) nil nil) ("11" (postpone) nil nil) ("12" (postpone) nil nil) ("13" (postpone) nil nil) ("14" (postpone) nil nil) ("15" (postpone) nil nil) ("16" (postpone) nil nil) ("17" (postpone) nil nil) ("18" (postpone) nil nil) ("19" (postpone) nil nil) ("20" (postpone) nil nil) ("21" (postpone) nil nil) ("22" (postpone) nil nil) ("23" (postpone) nil nil) ("24" (postpone) nil nil) ("25" (postpone) nil nil) ("26" (postpone) nil nil) ("27" (postpone) nil nil) ("28" (postpone) nil nil) ("29" (postpone) nil nil) ("30" (postpone) nil nil) ("31" (postpone) nil nil) ("32" (postpone) nil nil) ("33" (postpone) nil nil) ("34" (postpone) nil nil) ("35" (postpone) nil nil) ("36" (postpone) nil nil) ("37" (postpone) nil nil) ("38" (postpone) nil nil) ("39" (postpone) nil nil) ("40" (postpone) nil nil) ("41" (postpone) nil nil) ("42" (postpone) nil nil) ("43" (postpone) nil nil) ("44" (postpone) nil nil) ("45" (postpone) nil nil) ("46" (postpone) nil nil) ("47" (postpone) nil nil) ("48" (postpone) nil nil) ("49" (postpone) nil nil) ("50" (postpone) nil nil) ("51" (postpone) nil nil) ("52" (postpone) nil nil) ("53" (postpone) nil nil) ("54" (postpone) nil nil) ("55" (postpone) nil nil) ("56" (postpone) nil nil) ("57" (postpone) nil nil) ("58" (postpone) nil nil) ("59" (postpone) nil nil) ("60" (postpone) nil nil) ("61" (postpone) nil nil) ("62" (postpone) nil nil) ("63" (postpone) nil nil) ("64" (postpone) nil nil) ("65" (postpone) nil nil) ("66" (postpone) nil nil) ("67" (postpone) nil nil) ("68" (postpone) nil nil) ("69" (postpone) nil nil) ("70" (postpone) nil nil) ("71" (postpone) nil nil) ("72" (postpone) nil nil) ("73" (postpone) nil nil) ("74" (postpone) nil nil) ("75" (postpone) nil nil) ("76" (postpone) nil nil) ("77" (postpone) nil nil) ("78" (postpone) nil nil) ("79" (postpone) nil nil) ("80" (postpone) nil nil) ("81" (postpone) nil nil) ("82" (postpone) nil nil) ("83" (postpone) nil nil) ("84" (postpone) nil nil) ("85" (postpone) nil nil) ("86" (postpone) nil nil) ("87" (postpone) nil nil) ("88" (postpone) nil nil) ("89" (postpone) nil nil) ("90" (postpone) nil nil) ("91" (postpone) nil nil) ("92" (postpone) nil nil) ("93" (postpone) nil nil) ("94" (postpone) nil nil) ("95" (postpone) nil nil) ("96" (postpone) nil nil) ("97" (postpone) nil nil) ("98" (postpone) nil nil) ("99" (postpone) nil nil) ("100" (postpone) nil nil) ("101" (postpone) nil nil) ("102" (postpone) nil nil) ("103" (postpone) nil nil) ("104" (postpone) nil nil) ("105" (postpone) nil nil) ("106" (postpone) nil nil) ("107" (postpone) nil nil) ("108" (postpone) nil nil) ("109" (postpone) nil nil) ("110" (postpone) nil nil) ("111" (postpone) nil nil) ("112" (postpone) nil nil) ("113" (postpone) nil nil) ("114" (postpone) nil nil) ("115" (postpone) nil nil) ("116" (postpone) nil nil) ("117" (postpone) nil nil) ("118" (postpone) nil nil) ("119" (postpone) nil nil) ("120" (postpone) nil nil) ("121" (postpone) nil nil) ("122" (postpone) nil nil) ("123" (postpone) nil nil) ("124" (postpone) nil nil) ("125" (postpone) nil nil) ("126" (postpone) nil nil) ("127" (postpone) nil nil) ("128" (postpone) nil nil) ("129" (postpone) nil nil) ("130" (postpone) nil nil) ("131" (postpone) nil nil) ("132" (postpone) nil nil) ("133" (postpone) nil nil) ("134" (postpone) nil nil) ("135" (postpone) nil nil) ("136" (postpone) nil nil) ("137" (postpone) nil nil) ("138" (postpone) nil nil) ("139" (postpone) nil nil) ("140" (postpone) nil nil) ("141" (postpone) nil nil) ("142" (postpone) nil nil) ("143" (postpone) nil nil) ("144" (postpone) nil nil) ("145" (postpone) nil nil) ("146" (postpone) nil nil) ("147" (postpone) nil nil) ("148" (postpone) nil nil) ("149" (postpone) nil nil) ("150" (postpone) nil nil) ("151" (postpone) nil nil) ("152" (postpone) nil nil) ("153" (postpone) nil nil) ("154" (postpone) nil nil) ("155" (postpone) nil nil) ("156" (postpone) nil nil) ("157" (postpone) nil nil) ("158" (postpone) nil nil) ("159" (postpone) nil nil) ("160" (postpone) nil nil) ("161" (postpone) nil nil) ("162" (postpone) nil nil) ("163" (postpone) nil nil) ("164" (postpone) nil nil) ("165" (postpone) nil nil) ("166" (postpone) nil nil) ("167" (postpone) nil nil) ("168" (postpone) nil nil) ("169" (postpone) nil nil) ("170" (postpone) nil nil) ("171" (postpone) nil nil) ("172" (postpone) nil nil) ("173" (postpone) nil nil) ("174" (postpone) nil nil) ("175" (postpone) nil nil) ("176" (postpone) nil nil) ("177" (postpone) nil nil) ("178" (postpone) nil nil) ("179" (postpone) nil nil) ("180" (postpone) nil nil) ("181" (postpone) nil nil) ("182" (postpone) nil nil) ("183" (postpone) nil nil) ("184" (postpone) nil nil) ("185" (postpone) nil nil) ("186" (postpone) nil nil) ("187" (postpone) nil nil) ("188" (postpone) nil nil) ("189" (postpone) nil nil) ("190" (postpone) nil nil) ("191" (postpone) nil nil) ("192" (postpone) nil nil) ("193" (postpone) nil nil) ("194" (postpone) nil nil)) nil) nil shostak))("key" key sigCheckSym_TCC1 0 (sigCheckSym_TCC1-1 nil 3555864797 ("" (subtype-tcc) nil nil) nil nil))("key" key unseal_TCC2 0 (unseal_TCC2-1 nil 3555864797 ("" (subtype-tcc) nil nil) nil nil))("key" key unseal_TCC1 0 (unseal_TCC1-1 nil 3555864797 ("" (subtype-tcc) nil nil) nil nil))("key" key decryptAsym_TCC2 0 (decryptAsym_TCC2-1 nil 3555864797 ("" (subtype-tcc) nil nil) nil nil))("key" key decryptAsym_TCC1 0 (decryptAsym_TCC1-1 nil 3555864797 ("" (subtype-tcc) nil nil) nil nil))("key" key decryptSym_TCC2 0 (decryptSym_TCC2-1 nil 3555864771 ("" (subtype-tcc) nil nil) nil nil))("key" key decryptSym_TCC1 0 (decryptSym_TCC1-1 nil 3555864771 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553605240 ("" (inst 1 " (#
>>>>>>> refs/heads/ReturnCodes
>>>>>>> refs/heads/master
>>>>>>> refs/heads/master
                         pcrs:=pcrsPower
			 , postInit:=true
                         , locality:=4
			 , keys:=emptyset
			 , srk:=private(srkVal)
			 , ek:=private(ekVal)
			 , memory:=empty
<<<<<<< HEAD
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm make_identity_success_TCC1 0 (make_identity_success_TCC1-1 nil 3553968501 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3553968856 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm make_identity_success_TCC1 0 (make_identity_success_TCC1-1 nil 3553969076 ("" (subtype-tcc) nil nil) nil nil))
=======
<<<<<<< HEAD
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm make_identity_success_TCC1 0 (make_identity_success_TCC1-1 nil 3555089763 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3555089995 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm quote_post_TCC1 0 (quote_post_TCC1-1 nil 3555159296 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm take_ownership_post 0 (take_ownership_post-1 nil 3555089593 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_TakeOwnership const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) shostak))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3555164707 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm takeOwnership_post 0 (takeOwnership_post-1 nil 3555164783 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_TakeOwnership const-decl "State" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil)) shostak))("tpm" tpm pcrRead_post 0 (pcrRead_post-1 nil 3555090216 ("" (grind) nil nil) ((pcrReadOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_PcrRead const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil)) shostak))
=======
<<<<<<< HEAD
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))
=======
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm makeIdentityOut_TCC1 0 (makeIdentityOut_TCC1-1 nil 3555870836 ("" (subtype-tcc) nil nil) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm makeIdentityOut_TCC1 0 (makeIdentityOut_TCC1-1 nil 3555944410 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_secret_success 0 (unseal_secret_success-2 "attempt 2" 3555944730 ("" (assert) (("" (grind) (("1" (postpone) nil nil) ("2" (rewrite double_private) nil nil) ("3" (rewrite double_private) nil nil)) nil)) nil) nil shostak) (unseal_secret_success-1 nil 3536975666 ("" (assert) (("" (grind) (("1" (rewrite "double_private") nil nil) ("2" (rewrite "double_private") nil nil)) nil)) nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (TPM_Extend const-decl "State" tpm nil) (unseal const-decl "BLOB" key nil) (unsealOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_Unseal const-decl "State" tpm nil) (unit const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (NOT const-decl "[bool -> bool]" booleans nil) (double_private formula-decl nil key nil)) shostak))("tpm" tpm unseal_prev_success 0 (unseal_prev_success-1 nil 3552912140 ("" (grind) (("" (rewrite "double_private") nil nil)) nil) ((double_private formula-decl nil key nil) (NOT const-decl "[bool -> bool]" booleans nil) (>>= const-decl "State" StateMonad nil) (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil) (TPM_Unseal const-decl "State" tpm nil) (unsealOut const-decl "tpmAbsOutput" tpm nil) (unseal const-decl "BLOB" key nil) (TPM_Seal const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)) shostak))
>>>>>>> refs/heads/ReturnCodes
<<<<<<< HEAD
>>>>>>> refs/heads/master
("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556038177 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556038419 ("" (subtype-tcc) nil nil) ((ekVal const-decl "KEY" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (srkVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil)) nil))
=======
("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3555946127 ("" (inst 1 " (#
                         pcrs:=pcrsPower
             , postInit:=true
                         , locality:=4
             , keys:=emptyset
             , srk:=private(srkVal)
             , ek:=private(ekVal)
             , memory:=empty
             #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3555946127 ("" (inst 1 " (#
                         pcrs:=pcrsPower
             , postInit:=true
                         , locality:=4
             , keys:=emptyset
             , srk:=private(srkVal)
             , ek:=private(ekVal)
             , memory:=empty
             #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3555946127 ("" (inst 1 " (#
                         pcrs:=pcrsPower
             , postInit:=true
                         , locality:=4
             , keys:=emptyset
             , srk:=private(srkVal)
             , ek:=private(ekVal)
             , memory:=empty
             #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm cert_and_quote_with_prev_key_TCC2 0 (cert_and_quote_with_prev_key_TCC2-1 nil 3556044237 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3555946127 ("" (inst 1 " (#
                         pcrs:=pcrsPower
             , postInit:=true
                         , locality:=4
             , keys:=emptyset
             , srk:=private(srkVal)
             , ek:=private(ekVal)
             , memory:=empty
             #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm cert_and_quote_with_prev_key_TCC2 0 (cert_and_quote_with_prev_key_TCC2-1 nil 3556044237 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3555946127 ("" (inst 1 " (#
                         pcrs:=pcrsPower
             , postInit:=true
                         , locality:=4
             , keys:=emptyset
             , srk:=private(srkVal)
             , ek:=private(ekVal)
             , memory:=empty
             #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm cert_and_quote_with_prev_key_TCC2 0 (cert_and_quote_with_prev_key_TCC2-1 nil 3556044237 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm cert_and_quote_with_prev_key_TCC1 0 (cert_and_quote_with_prev_key_TCC1-1 nil 3556044237 ("" (subtype-tcc) nil nil) nil nil))
>>>>>>> refs/heads/master
("tpm" tpm gen_cert)("tpm" tpm startup_after_init)("tpm" tpm resetMonad)("tpm" tpm take_ownership_post)("tpm" tpm create_wrap_key_post)("tpm" tpm load_key_post)("tpm" tpm load_key_success2)("tpm" tpm load_prev_key_success)("tpm" tpm nested_wrapped_keys_success)("tpm" tpm make_identity_post)("tpm" tpm activate_identity_post)("tpm" tpm activate_prev_success)("tpm" tpm sign_post)("tpm" tpm pcr_read_post)("tpm" tpm check_PCRS)("tpm" tpm quote_post)("tpm" tpm quote_with_prev_key)("tpm" tpm seal_post)("tpm" tpm unBind_post)("tpm" tpm monotonic_locality)("tpm" tpm pcrs_unchanged)("tpm" tpm srk_unchanged)("tpm" tpm ek_unchanged)("tpm" tpm keys_unchanged)("tpm" tpm postInit_unchanged)("tpm" tpm no_senter)("tpm" tpm cert_and_quote_with_prev_key)("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556286006 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil)) nil))("tpm" tpm outputCom_TCC1 0 (outputCom_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil)) nil))("tpm" tpm outputCom_TCC1 0 (outputCom_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil)) nil))("tpm" tpm outputCom_TCC1 0 (outputCom_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil)) nil))("tpm" tpm outputCom_TCC1 0 (outputCom_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil)) nil))("tpm" tpm outputCom_TCC1 0 (outputCom_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil)) nil))("tpm" tpm outputCom_TCC1 0 (outputCom_TCC1-1 nil 3556291051 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm load_prev_key_success 0 (load_prev_key_success-1 nil 3556286099 ("" (grind) nil nil) ((add const-decl "(nonempty?)" sets nil) (>>= const-decl "State" StateMonad nil) (emptyset const-decl "set" sets nil) (TPM_Noop const-decl "[tpmAbsOutput -> State]" tpm nil) (TPM_LoadKey2 const-decl "State" tpm nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (checkKey const-decl "bool" key nil) (member const-decl "bool" sets nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (NOT const-decl "[bool -> bool]" booleans nil)) shostak))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556292260 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556292260 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556292260 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556292260 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556302681 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556302681 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556302681 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556302681 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556302681 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556302681 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556379692 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556380282 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556381248 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556381445 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_success_TCC2 0 (unseal_prev_success_TCC2-1 nil 3556381540 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success_TCC3 0 (unBind_prev_success_TCC3-1 nil 3556382569 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success_TCC2 0 (unBind_prev_success_TCC2-1 nil 3556382569 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unBind_prev_success_TCC1 0 (unBind_prev_success_TCC1-1 nil 3556382569 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (tpmAbsOutput type-decl nil tpm nil) (outBlob? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)) nil))("tpm" tpm unseal_prev_success_TCC2 0 (unseal_prev_success_TCC2-1 nil 3556382369 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm unseal_prev_success_TCC1 0 (unseal_prev_success_TCC1-1 nil 3556381540 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (tpmAbsState type-eq-decl nil tpm nil) (afterStartup? const-decl "bool" tpm nil) (outBlob? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)) nil))("tpm" tpm quote_with_prev_key_TCC1 0 (quote_with_prev_key_TCC1-1 nil 3556382369 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm activate_prev_success_TCC1 0 (activate_prev_success_TCC1-1 nil 3556382330 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556382239 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm nested_wrapped_keys_success_TCC1 0 (nested_wrapped_keys_success_TCC1-1 nil 3556382239 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm load_prev_key_success_TCC1 0 (load_prev_key_success_TCC1-1 nil 3556382141 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556382992 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556382992 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm take_ownership_success 0 (take_ownership_success-1 nil 3556384188 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_TakeOwnership const-decl "State" tpm nil)) shostak))("tpm" tpm take_ownership_success 0 (take_ownership_success-1 nil 3556384188 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_TakeOwnership const-decl "State" tpm nil)) shostak))("tpm" tpm take_ownership_success 0 (take_ownership_success-1 nil 3556384188 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_TakeOwnership const-decl "State" tpm nil)) shostak))("tpm" tpm take_ownership_success 0 (take_ownership_success-1 nil 3556384188 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_TakeOwnership const-decl "State" tpm nil)) shostak))("tpm" tpm take_ownership_success 0 (take_ownership_success-1 nil 3556384188 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_TakeOwnership const-decl "State" tpm nil)) shostak))("tpm" tpm load_prev_key_success 0 (load_prev_key_success-1 nil 3556286099 ("" (grind) nil nil) ((afterStartup? const-decl "bool" tpm nil) (NOT const-decl "[bool -> bool]" booleans nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_LoadKey2 const-decl "State" tpm nil) (add const-decl "(nonempty?)" sets nil) (afterInit? const-decl "bool" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (>>= const-decl "State" StateMonad nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil)) shostak))("tpm" tpm take_ownership_success 0 (take_ownership_success-1 nil 3556384188 ("" (grind) nil nil) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (put const-decl "State" StateMonad nil) (TPM_Init const-decl "State" tpm nil) (afterInit? const-decl "bool" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (>> const-decl "State" StateMonad nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsExtend const-decl "PCRS" pcr nil) (extendState const-decl "tpmAbsState" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (CPU_senter const-decl "State" tpm nil) (CPU_sinit const-decl "State" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (output const-decl "State" StateMonad nil) (TPM_TakeOwnership const-decl "State" tpm nil)) shostak))("tpm" tpm load_key_success2 0 (load_key_success2-1 nil 3556286099 ("" (grind) nil nil) ((afterStartup? const-decl "bool" tpm nil) (NOT const-decl "[bool -> bool]" booleans nil) (afterInit? const-decl "bool" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (member const-decl "bool" sets nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (checkKey const-decl "bool" key nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (tpmAbsOutput type-decl nil tpm nil) (modify const-decl "State" StateMonad nil) (TPM_LoadKey2 const-decl "State" tpm nil) (add const-decl "(nonempty?)" sets nil) (>> const-decl "State" StateMonad nil)) shostak))("tpm" tpm load_prev_key_post 0 (load_prev_key_post-1 nil 3556384716 ("" (grind) nil nil) ((afterStartup? const-decl "bool" tpm nil) (NOT const-decl "[bool -> bool]" booleans nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_LoadKey2 const-decl "State" tpm nil) (add const-decl "(nonempty?)" sets nil) (afterInit? const-decl "bool" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (>>= const-decl "State" StateMonad nil) (member const-decl "bool" sets nil) (checkKey const-decl "bool" key nil)) shostak))("tpm" tpm activate_prev_success 0 (activate_prev_success-1 nil 3556286100 ("" (grind) nil nil) ((afterStartup? const-decl "bool" tpm nil) (symKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (NOT const-decl "[bool -> bool]" booleans nil) (add const-decl "(nonempty?)" sets nil) (TPM_ActivateIdentity const-decl "State" tpm nil) (modifyOutput const-decl "State" StateMonad nil) (activateIdentityOut const-decl "tpmAbsOutput" tpm nil) (checkKeyRoot const-decl "bool" key nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (activateIdentityState const-decl "tpmAbsState" tpm nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (checkKey const-decl "bool" key nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (ekVal const-decl "KEY" tpm nil) (makeIdentityOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (>>= const-decl "State" StateMonad nil) (member const-decl "bool" sets nil)) shostak))("tpm" tpm unseal_prev_success 0 (unseal_prev_success-1 nil 3556286101 ("" (assert) (("" (grind) (("" (rewrite double_private) nil nil)) nil)) nil) ((afterInit? const-decl "bool" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (sealOut const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_Seal const-decl "State" tpm nil) (>>= const-decl "State" StateMonad nil) (NOT const-decl "[bool -> bool]" booleans nil) (afterStartup? const-decl "bool" tpm nil) (TPM_Unseal const-decl "State" tpm nil) (unsealOut const-decl "tpmAbsOutput" tpm nil) (unseal const-decl "BLOB" key nil) (double_private formula-decl nil key nil)) shostak))("tpm" tpm unseal_prev_success_TCC2 0 (unseal_prev_success_TCC2-1 nil 3556383258 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (tpmAbsState type-eq-decl nil tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm unseal_prev_success_TCC1 0 (unseal_prev_success_TCC1-1 nil 3556383258 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (tpmAbsOutput type-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (tpmAbsState type-eq-decl nil tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm unBind_prev_success 0 (unBind_prev_success-1 nil 3556286364 ("" (grind) (("" (rewrite double_private) nil nil)) nil) ((double_private formula-decl nil key nil) (decryptSym const-decl "BLOB" key nil) (decryptAsym const-decl "BLOB" key nil) (NOT const-decl "[bool -> bool]" booleans nil) (add const-decl "(nonempty?)" sets nil) (emptyset const-decl "set" sets nil) (TPM_UnBind const-decl "State" tpm nil) (unBindOut const-decl "tpmAbsOutput" tpm nil) (decrypt const-decl "BLOB" key nil) (TPM_LoadKey2 const-decl "State" tpm nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (checkKey const-decl "bool" key nil) (member const-decl "bool" sets nil) (>>= const-decl "State" StateMonad nil) (Tspi_Data_Bind const-decl "State" tpm nil) (dataBindOut const-decl "tpmAbsOutput" tpm nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (CPU_sinit const-decl "State" tpm nil) (CPU_senter const-decl "State" tpm nil) (changeLocalityState const-decl "tpmAbsState" tpm nil) (extendState const-decl "tpmAbsState" tpm nil) (pcrsExtend const-decl "PCRS" pcr nil) (pcrsReset const-decl "PCRS" pcr nil) (pcrsResetSenterState const-decl "tpmAbsState" tpm nil) (>> const-decl "State" StateMonad nil) (TPM_Startup const-decl "State" tpm nil) (modify const-decl "State" StateMonad nil) (executeCom const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (tpmStartup const-decl "tpmAbsState" tpm nil) (afterInit? const-decl "bool" tpm nil) (TPM_Init const-decl "State" tpm nil) (put const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (tpmPostInit const-decl "tpmAbsState" tpm nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil)) shostak))("tpm" tpm unBind_prev_success_TCC1 0 (unBind_prev_success_TCC1-1 nil 3556383440 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm nested_wrapped_keys_success 0 (nested_wrapped_keys_success-1 nil 3556286100 ("" (grind) nil nil) ((checkKey const-decl "bool" key nil) (member const-decl "bool" sets nil) (>> const-decl "State" StateMonad nil) (>>= const-decl "State" StateMonad nil) (TPM_CreateWrapKey const-decl "State" tpm nil) (output const-decl "State" StateMonad nil) (tpmAbsOutput type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (HV formal-nonempty-type-decl nil tpm nil) (KEY type-decl nil key nil) (boolean nonempty-type-decl nil booleans nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (KEYSET type-eq-decl nil key nil) (LOCALITY type-eq-decl nil tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (mem type-eq-decl nil memory nil) (PCRS type-eq-decl nil pcr nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsState type-eq-decl nil tpm nil) (outputCom const-decl "tpmAbsOutput" tpm nil) (outputComStartup const-decl "tpmAbsOutput" tpm nil) (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil) (outputComPostInit const-decl "tpmAbsOutput" tpm nil) (afterInit? const-decl "bool" tpm nil) (executeComPostInit const-decl "tpmAbsState" tpm nil) (addKey const-decl "KEYSET" key nil) (loadKey2State const-decl "tpmAbsState" tpm nil) (executeComStartup const-decl "tpmAbsState" tpm nil) (executeCom const-decl "tpmAbsState" tpm nil) (modify const-decl "State" StateMonad nil) (TPM_LoadKey2 const-decl "State" tpm nil) (add const-decl "(nonempty?)" sets nil) (NOT const-decl "[bool -> bool]" booleans nil) (afterStartup? const-decl "bool" tpm nil)) shostak))
>>>>>>> refs/heads/master
("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556463486 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556463486 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm gen_cert)("tpm" tpm startup_after_init)("tpm" tpm resetMonad)("tpm" tpm take_ownership_post)("tpm" tpm owner_clear_post)("tpm" tpm disable_owner_clear_post)("tpm" tpm disable_force_clear_post)("tpm" tpm create_wrap_key_post)("tpm" tpm load_key_post)("tpm" tpm load_key_post2)("tpm" tpm load_key_prev_post)("tpm" tpm nested_wrapped_keys_post)("tpm" tpm make_identity_post)("tpm" tpm activate_identity_post)("tpm" tpm activate_prev_post)("tpm" tpm sign_post)("tpm" tpm pcr_read_post)("tpm" tpm check_PCRS)("tpm" tpm quote_post)("tpm" tpm quote_with_prev_key)("tpm" tpm seal_post)("tpm" tpm unBind_post)("tpm" tpm monotonic_locality)("tpm" tpm pcrs_unchanged)("tpm" tpm srk_unchanged)("tpm" tpm ek_unchanged)("tpm" tpm postInit_unchanged)("tpm" tpm no_senter)("tpm" tpm aik_binding)("tpm" tpm cert_and_quote_with_prev_key)("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556463622 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PermFlags type-eq-decl nil PermanentFlags nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556466726 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556472510 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PermFlags type-eq-decl nil PermanentFlags nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm outputCom_TCC1 0 (outputCom_TCC1-1 nil 3556472510 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556472510 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (tpmAbsState type-eq-decl nil tpm nil) (PermFlags type-eq-decl nil PermanentFlags nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (LOCALITY type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (tpmAbsOutput type-decl nil tpm nil) (output const-decl "State" StateMonad nil) (TPM_MakeIdentity const-decl "State" tpm nil) (ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm outputCom_TCC1 0 (outputCom_TCC1-1 nil 3556472510 ("" (subtype-tcc) nil nil) ((afterInit? const-decl "bool" tpm nil) (afterStartup? const-decl "bool" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556473604 ("" (inst 1 "(#
                         pcrs:=pcrsPower
			 , postInit:=true
                         , locality:=4
			 , keys:=emptyset
			 , srk:=private(srkVal)
			 , ek:=private(ekVal)
			 , memory:=empty
			 , restore:=initSaveData
			 , permFlags:=permFlagsInit
			 , permData:=permDataInit
			 , disableForceClear:=FALSE
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((FALSE const-decl "bool" booleans nil) (permDataInit const-decl "PermData" PermanentData nil) (PCRFLAGS type-eq-decl nil pcr nil) (permFlagsInit const-decl "PermFlags" PermanentFlags nil) (initSaveData const-decl "restoreStateData" startupData nil) (empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (restoreStateData type-eq-decl nil startupData nil) (PermFlags type-eq-decl nil PermanentFlags nil) (PermData type-eq-decl nil PermanentData nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil pcr nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556473604 ("" (inst 1 "(#
                         pcrs:=pcrsPower
			 , postInit:=true
                         , locality:=4
			 , keys:=emptyset
			 , srk:=private(srkVal)
			 , ek:=private(ekVal)
			 , memory:=empty
			 , restore:=initSaveData
			 , permFlags:=permFlagsInit
			 , permData:=permDataInit
			 , disableForceClear:=FALSE
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((FALSE const-decl "bool" booleans nil) (permDataInit const-decl "PermData" PermanentData nil) (PCRFLAGS type-eq-decl nil pcr nil) (permFlagsInit const-decl "PermFlags" PermanentFlags nil) (initSaveData const-decl "restoreStateData" startupData nil) (empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (restoreStateData type-eq-decl nil startupData nil) (PermFlags type-eq-decl nil PermanentFlags nil) (PermData type-eq-decl nil PermanentData nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil pcr nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556473604 ("" (inst 1 "(#
                         pcrs:=pcrsPower
			 , postInit:=true
                         , locality:=4
			 , keys:=emptyset
			 , srk:=private(srkVal)
			 , ek:=private(ekVal)
			 , memory:=empty
			 , restore:=initSaveData
			 , permFlags:=permFlagsInit
			 , permData:=permDataInit
			 , disableForceClear:=FALSE
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((FALSE const-decl "bool" booleans nil) (permDataInit const-decl "PermData" PermanentData nil) (PCRFLAGS type-eq-decl nil pcr nil) (permFlagsInit const-decl "PermFlags" PermanentFlags nil) (initSaveData const-decl "restoreStateData" startupData nil) (empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (restoreStateData type-eq-decl nil startupData nil) (PermFlags type-eq-decl nil PermanentFlags nil) (PermData type-eq-decl nil PermanentData nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil pcr nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556473604 ("" (inst 1 "(#
                         pcrs:=pcrsPower
			 , postInit:=true
                         , locality:=4
			 , keys:=emptyset
			 , srk:=private(srkVal)
			 , ek:=private(ekVal)
			 , memory:=empty
			 , restore:=initSaveData
			 , permFlags:=permFlagsInit
			 , permData:=permDataInit
			 , disableForceClear:=FALSE
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((FALSE const-decl "bool" booleans nil) (permDataInit const-decl "PermData" PermanentData nil) (PCRFLAGS type-eq-decl nil pcr nil) (permFlagsInit const-decl "PermFlags" PermanentFlags nil) (initSaveData const-decl "restoreStateData" startupData nil) (empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (restoreStateData type-eq-decl nil startupData nil) (PermFlags type-eq-decl nil PermanentFlags nil) (PermData type-eq-decl nil PermanentData nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil pcr nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556473604 ("" (inst 1 "(#
                         pcrs:=pcrsPower
			 , postInit:=true
                         , locality:=4
			 , keys:=emptyset
			 , srk:=private(srkVal)
			 , ek:=private(ekVal)
			 , memory:=empty
			 , restore:=initSaveData
			 , permFlags:=permFlagsInit
			 , permData:=permDataInit
			 , disableForceClear:=FALSE
			 #)") (("1" (grind) nil nil) ("2" (grind) nil nil)) nil) ((FALSE const-decl "bool" booleans nil) (permDataInit const-decl "PermData" PermanentData nil) (PCRFLAGS type-eq-decl nil pcr nil) (permFlagsInit const-decl "PermFlags" PermanentFlags nil) (initSaveData const-decl "restoreStateData" startupData nil) (empty const-decl "mem" memory nil) (ekVal const-decl "KEY" tpm nil) (srkVal const-decl "KEY" tpm nil) (private const-decl "(asymKey?)" key nil) (emptyset const-decl "set" sets nil) (set type-eq-decl nil sets nil) (TRUE const-decl "bool" booleans nil) (pcrsPower const-decl "PCRS" pcr nil) (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil) (<= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (tpmAbsState type-eq-decl nil tpm nil) (restoreStateData type-eq-decl nil startupData nil) (PermFlags type-eq-decl nil PermanentFlags nil) (PermData type-eq-decl nil PermanentData nil) (PCRS type-eq-decl nil pcr nil) (mem type-eq-decl nil memory nil) (outNothing adt-constructor-decl "(outNothing?)" tpm nil) (outNothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil) (tpmAbsOutput type-decl nil tpm nil) (LOCALITY type-eq-decl nil pcr nil) (KEYSET type-eq-decl nil key nil) (asymKey? adt-recognizer-decl "[KEY -> boolean]" key nil) (boolean nonempty-type-decl nil booleans nil) (KEY type-decl nil key nil) (HV formal-nonempty-type-decl nil tpm nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (bool nonempty-type-eq-decl nil booleans nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556631822 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556631822 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm make_identity_post_TCC1 0 (make_identity_post_TCC1-1 nil 3556631822 ("" (subtype-tcc) nil nil) nil nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556710215 ("" (existence-tcc) nil nil) nil nil))("tpm" tpm tpmPostInit_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm tpmPostInit_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm tpmPostInit_TCC3 "" (grind) nil nil)("tpm" tpm tpmStartup_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm tpmStartup_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm tpmStartup_TCC3 "" (subtype-tcc) nil nil)("tpm" tpm tpmRestore_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm tpmRestore_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm changeLocalityState_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm executeCom_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm certOut_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm unseal_prev_post_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm unseal_prev_post_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm unBind_prev_post_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm tpmPostInit_TCC1 "" (grind))("tpm" tpm tpmPostInit_TCC2 "" (grind))("tpm" tpm tpmPostInit_TCC3 "" (grind))("tpm" tpm tpmStartup_TCC1 "" (grind))("tpm" tpm tpmStartup_TCC2 "" (grind))("tpm" tpm tpmStartup_TCC3 "" (grind))("tpm" tpm tpmRestore_TCC1 "" (grind))("tpm" tpm tpmRestore_TCC2 "" (grind))("tpm" tpm changeLocalityState_TCC1 "" (grind))("tpm" tpm executeCom_TCC1 "" (grind))("tpm" tpm makeIdentityOut_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm certOut_TCC1 "" (grind))("tpm" tpm unseal_prev_post_TCC1 "" (grind))("tpm" tpm unseal_prev_post_TCC2 "" (grind))("tpm" tpm unBind_prev_post_TCC1 "" (grind))("startupData" startupData saveState_TCC1 "" (grind) nil nil)("startupData" startupData initSaveData_TCC1 "" (grind) nil nil)("tpm" tpm makeIdentityOut_TCC1 0 (makeIdentityOut_TCC1-1 nil 3556724779 ("" (grind)) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm tpmRestore_TCC3 0 (tpmRestore_TCC3-1 nil 3556724519 ("" (subtype-tcc) nil nil) nil shostak))("tpm" tpm tpmRestore_TCC2 0 (tpmRestore_TCC2-1 nil 3556724519 ("" (grind)) ((srkVal const-decl "KEY" tpm nil)) nil))("tpm" tpm tpmStartup_TCC3 0 (tpmStartup_TCC3-1 nil 3556724396 ("" (grind)) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (permFlagsInit const-decl "PermFlags" PermanentFlags nil) (HV formal-nonempty-type-decl nil tpm nil) (permDataInit const-decl "PermData" PermanentData nil) (K formal-nonempty-type-decl nil tpm nil) (B formal-nonempty-type-decl nil tpm nil) (initSaveData const-decl "(wellFormed?)" startupData nil) (wellFormed? const-decl "bool" startupData nil) (wellFormed? const-decl "bool" tpm nil) (finite_emptyset name-judgement "finite_set" finite_sets nil)) nil))("tpm" tpm tpmStartup_TCC2 0 (tpmStartup_TCC2-1 nil 3556724396 ("" (grind)) ((srkVal const-decl "KEY" tpm nil)) nil))("tpm" tpm tpmPostInit_TCC1 "" (grind))("tpm" tpm tpmPostInit_TCC2 "" (grind))("tpm" tpm tpmPostInit_TCC3 "" (grind))("tpm" tpm tpmStartup_TCC1 "" (grind))("tpm" tpm changeLocalityState_TCC1 "" (grind))("tpm" tpm executeCom_TCC1 "" (grind))("tpm" tpm certOut_TCC1 "" (grind))("tpm" tpm unseal_prev_post_TCC1 "" (grind))("tpm" tpm unseal_prev_post_TCC2 "" (grind))("tpm" tpm unBind_prev_post_TCC1 "" (grind))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556725200 ("" (existence-tcc) nil nil) nil shostak))("tpm" tpm tpmPostInit_TCC1 "" (grind))("tpm" tpm tpmPostInit_TCC2 "" (grind))("tpm" tpm tpmPostInit_TCC3 "" (grind))("tpm" tpm tpmStartup_TCC1 "" (grind))("tpm" tpm tpmRestore_TCC1 "" (grind))("tpm" tpm tpmRestore_TCC2 "" (subtype-tcc) nil nil)("tpm" tpm tpmRestore_TCC3 "" (subtype-tcc) nil nil)("tpm" tpm changeLocalityState_TCC1 "" (grind))("tpm" tpm executeCom_TCC1 "" (grind))("tpm" tpm makeIdentityOut_TCC1 "" (subtype-tcc) nil nil)("tpm" tpm certOut_TCC1 "" (grind))("tpm" tpm unseal_prev_post_TCC1 "" (grind))("tpm" tpm unseal_prev_post_TCC2 "" (grind))("tpm" tpm unBind_prev_post_TCC1 "" (grind))("tpm" tpm pcrsResetSenterState_TCC1 0 (pcrsResetSenterState_TCC1-1 nil 3556724779 ("" (subtype-tcc) nil nil) nil shostak))("tpm" tpm tpmPostInit_TCC1 "" (grind))("tpm" tpm tpmPostInit_TCC2 "" (grind))("tpm" tpm tpmPostInit_TCC3 "" (grind))("tpm" tpm tpmStartup_TCC1 "" (grind))("tpm" tpm tpmRestore_TCC1 "" (grind))("tpm" tpm tpmRestore_TCC2 "" (grind))("tpm" tpm tpmRestore_TCC3 "" (grind))("tpm" tpm changeLocalityState_TCC1 "" (grind))("tpm" tpm executeCom_TCC1 "" (grind))("tpm" tpm makeIdentityOut_TCC1 "" (grind))("tpm" tpm certOut_TCC1 "" (grind))("tpm" tpm unseal_prev_post_TCC1 "" (grind))("tpm" tpm unseal_prev_post_TCC2 "" (grind))("tpm" tpm unBind_prev_post_TCC1 "" (grind))("tpm" tpm makeIdentityOut_TCC1 0 (makeIdentityOut_TCC1-1 nil 3556725791 ("" (grind)) ((ekVal const-decl "KEY" tpm nil)) nil))("tpm" tpm tpmRestore_TCC3 0 (tpmRestore_TCC3-1 nil 3556725791 ("" (grind)) ((srkVal const-decl "KEY" tpm nil) (ekVal const-decl "KEY" tpm nil) (wellFormed? const-decl "bool" tpm nil)) nil))("tpm" tpm tpmRestore_TCC2 0 (tpmRestore_TCC2-1 nil 3556725791 ("" (grind)) ((srkVal const-decl "KEY" tpm nil)) nil))("tpm" tpm IMP_StateMonad_TCC1 0 (IMP_StateMonad_TCC1-1 nil 3556897124 ("" (existence-tcc) nil nil) nil nil))