(lemmas
 (takeOwnership_SRK 0
  (takeOwnership_SRK-1 nil 3588702529 ("" (grind) nil nil)
   ((modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (set type-eq-decl nil sets nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil lemmas nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (checkEncrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil))
   shostak)))

