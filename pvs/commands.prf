(commands
 (gen_quote_TCC1 0
  (gen_quote_TCC1-1 nil 3596456996
   ("" (grind) (("" (lemma sigQuote) (("" (grind) nil nil)) nil)) nil)
   ((sigQuote formula-decl nil tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CPU_BuildQuoteFromMem const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (buildQuoteFromMemOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (buildQuoteFromMemState const-decl "tpmAbsState" tpm nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (gen_quote_TCC2 0
  (gen_quote_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil) nil
   shostak))
 (gen_quote 0
  (gen_quote-1 nil 3596460481
   ("" (grind) (("" (lemma sigQuote) (("" (grind) nil nil)) nil)) nil)
   ((sigQuote formula-decl nil tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CPU_BuildQuoteFromMem const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (buildQuoteFromMemOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (buildQuoteFromMemState const-decl "tpmAbsState" tpm nil)
    (buildQuoteFromMem? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (gen_cert_TCC1 0
  (gen_cert_TCC1-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" commands nil))
   nil))
 (gen_cert_TCC2 0
  (gen_cert_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" commands nil))
   nil))
 (gen_cert_TCC3 0
  (gen_cert_TCC3-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (initSessKeyVal const-decl "K" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" commands nil))
   nil))
 (gen_cert 0
  (gen_cert-1 nil 3596460484 ("" (grind))
   ((signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (inverse const-decl "integer" keydata nil)
    (checkSig? const-decl "bool" key nil)
    (certify? const-decl "bool" tpm nil)
    (initSessKeyVal const-decl "K" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (certOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (CA_certify const-decl "State" commands nil))
   shostak))
 (init_post 0
  (init_post-1 nil 3596460486 ("" (grind))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" commands nil))
   shostak))
 (startup_post 0
  (startup_post-1 nil 3596460487 ("" (grind))
   ((deactivateState const-decl "tpmAbsState" tpm nil)
    (wellFormedRestore? const-decl "bool" startupData nil)
    (restoreState const-decl "tpmAbsState" tpm nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (private const-decl "privKVAL" key nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (initKeyVal const-decl "K" tpm nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" commands nil))
   shostak))
 (startup_after_init 0
  (startup_after_init-1 nil 3596460488 ("" (grind))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (resetMonad 0
  (resetMonad-1 nil 3596460490 ("" (grind))
   ((keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" commands nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" commands nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (add const-decl "(nonempty?)" sets nil)
    (restrict const-decl "R" restrict nil)
    (CPU_sinit const-decl "State" commands nil)
    (finite_restrict application-judgement "finite_set[S]"
     restrict_set_props nil))
   shostak))
 (save_state_post 0
  (save_state_post-1 nil 3596460492 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (saveState const-decl "(wellFormedRestore?)" startupData nil)
    (saveState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_SaveState const-decl "State" commands nil))
   shostak))
 (set_owner_install_post 0
  (set_owner_install_post-1 nil 3596460494 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (invalidAuth? const-decl "bool" data nil)
    (setOwnerInstallState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setOwnerInstallOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_SetOwnerInstall const-decl "State" commands nil))
   shostak))
 (owner_set_disable_post 0
  (owner_set_disable_post-1 nil 3596460496 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (ownerSetDisableState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerSetDisableOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerSetDisable const-decl "State" commands nil))
   shostak))
 (physical_enable_post 0
  (physical_enable_post-1 nil 3596460498 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (physicalEnableState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalEnableOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PhysicalEnable const-decl "State" commands nil))
   shostak))
 (physical_disable_post 0
  (physical_disable_post-1 nil 3596460500 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (physicalDisableState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalDisableOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PhysicalDisable const-decl "State" commands nil))
   shostak))
 (physical_set_deactivated_post 0
  (physical_set_deactivated_post-1 nil 3596460502 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (physicalSetDeactivatedState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalSetDeactivatedOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PhysicalSetDeactivated const-decl "State" commands nil))
   shostak))
 (set_temp_deactivated_post 0
  (set_temp_deactivated_post-1 nil 3596460504 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (setTempDeactivatedState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setTempDeactivatedOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_SetTempDeactivated const-decl "State" commands nil))
   shostak))
 (set_operator_auth_post 0
  (set_operator_auth_post-1 nil 3596460506 ("" (grind))
   ((tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (setOperatorAuthState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (setOperatorAuthOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_SetOperatorAuth const-decl "State" commands nil))
   shostak))
 (take_ownership_post_TCC1 0
  (take_ownership_post_TCC1-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   nil shostak))
 (take_ownership_post_TCC2 0
  (take_ownership_post_TCC2-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" commands nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   shostak))
 (take_ownership_post_TCC3 0
  (take_ownership_post_TCC3-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (take_ownership_post_TCC4 0
  (take_ownership_post_TCC4-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   nil shostak))
 (take_ownership_post_TCC5 0
  (take_ownership_post_TCC5-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   nil shostak))
 (take_ownership_post 0
  (take_ownership_post-1 nil 3596460508 ("" (grind))
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" commands nil))
   shostak))
 (take_ownership_post2 0
  (take_ownership_post2-1 nil 3596460514
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil)
     ("6" (lemma unique_error) (("6" (grind) nil nil)) nil)
     ("7" (lemma unique_error) (("7" (grind) nil nil)) nil)
     ("8" (lemma unique_error) (("8" (grind) nil nil)) nil)
     ("9" (lemma unique_error) (("9" (grind) nil nil)) nil))
    nil)
   ((TPM_OWNER_SET adt-constructor-decl "(TPM_OWNER_SET?)" ReturnCodes
     nil)
    (TPM_OWNER_SET? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INSTALL_DISABLED adt-constructor-decl
     "(TPM_INSTALL_DISABLED?)" ReturnCodes nil)
    (TPM_INSTALL_DISABLED? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT adt-constructor-decl "(TPM_NO_ENDORSEMENT?)"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_TakeOwnership const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (owner_clear_post_TCC1 0
  (owner_clear_post_TCC1-1 nil 3596456996 ("" (tcc))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerClear const-decl "State" commands nil)
    (afterStartup? const-decl "bool" tpm nil))
   nil))
 (owner_clear_post 0
  (owner_clear_post-1 nil 3596460516 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (ownerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerClear const-decl "State" commands nil)
    (clear_post const-decl "bool" commands nil))
   shostak))
 (force_clear_post_TCC1 0
  (force_clear_post_TCC1-1 nil 3596456996 ("" (tcc))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (forceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ForceClear const-decl "State" commands nil)
    (afterStartup? const-decl "bool" tpm nil))
   nil))
 (force_clear_post 0
  (force_clear_post-1 nil 3596460519 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (forceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (forceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ForceClear const-decl "State" commands nil)
    (clear_post const-decl "bool" commands nil))
   shostak))
 (disable_owner_clear_post 0
  (disable_owner_clear_post-1 nil 3596460522 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableOwnerClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableOwnerClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableOwnerClear const-decl "State" commands nil))
   shostak))
 (disable_force_clear_post 0
  (disable_force_clear_post-1 nil 3596460524 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (disableForceClearState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (disableForceClearOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_DisableForceClear const-decl "State" commands nil))
   shostak))
 (physical_presence_post 0
  (physical_presence_post-1 nil 3596460526 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (member const-decl "bool" sets nil)
    (physicalPresenceState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (physicalPresenceOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TSC_PhysicalPresence const-decl "State" commands nil))
   shostak))
 (reset_establishment_post 0
  (reset_establishment_post-1 nil 3596460530 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (resetEstablishment? const-decl "bool" tpm nil)
    (resetEstablishmentBitState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (resetEstablishmentBitOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TSC_ResetEstablishmentBit const-decl "State" commands nil))
   shostak))
 (seal_post_TCC1 0
  (seal_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (seal? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" commands nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   shostak))
 (seal_post_TCC2 0
  (seal_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (seal? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" commands nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil))
   nil))
 (seal_post 0
  (seal_post-1 nil 3596460534 ("" (grind))
   ((tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (seal? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" commands nil))
   shostak))
 (unseal_post_TCC1 0
  (unseal_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" commands nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   shostak))
 (unseal_post_TCC2 0
  (unseal_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (unseal? const-decl "bool" tpm nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (unseal_post 0
  (unseal_post-1 nil 3596460537 ("" (grind))
   ((minus_int_is_int application-judgement "int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Unseal const-decl "State" commands nil))
   shostak))
 (unseal_prev_post_TCC1 0
  (unseal_prev_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (updateLoc const-decl "mem" memory nil)
    (seal? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" commands nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" commands nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" commands nil)
    (unsealState const-decl "tpmAbsState" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Unseal const-decl "State" commands nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil))
   nil))
 (unseal_prev_post_TCC2 0
  (unseal_prev_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmAuthData? const-decl "bool" data nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (TPM_Unseal const-decl "State" commands nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (seal? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (unseal? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" commands nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" commands nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil))
   nil))
 (unseal_prev_post 0
  (unseal_prev_post-1 nil 3596460546
   ("" (grind)
    (("1" (decompose-equality 6)
      (("1" (decompose-equality)
        (("1" (grind)
          (("1" (lemma pubInversePriv)
            (("1" (grind)
              (("1" (lemma pubInversePriv)
                (("1" (inst -1 j!1) (("1" (grind) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (decompose-equality 6)
      (("2" (lemma pubInversePriv)
        (("2" (grind)
          (("2" (grind)
            (("2" (lemma pubInversePriv)
              (("2" (grind)
                (("2" (lemma pubInversePriv)
                  (("2" (inst -1 j!1) (("2" (grind) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (seal? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (encrypt const-decl "tpmData" key nil)
    (sealState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (sealOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Seal const-decl "State" commands nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" commands nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unseal? const-decl "bool" tpm nil)
    (unsealState const-decl "tpmAbsState" tpm nil)
    (unsealOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Unseal const-decl "State" commands nil)
    (updateLoc const-decl "mem" memory nil)
    (/= const-decl "boolean" notequal nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (list_cons_extensionality formula-decl nil list_adt nil)
    (pubInversePriv formula-decl nil data nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (encrypted?)]" data nil)
    (encData adt-accessor-decl "[(encrypted?) -> tpmData]" data nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (FALSE const-decl "bool" booleans nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (OUT_Seal adt-constructor-decl
     "[[(tpmStoredData?), authOut, ReturnCode] -> (OUT_Seal?)]" tpm
     nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (authOut type-eq-decl nil data nil)
    (tpmAuthData? const-decl "bool" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (key adt-accessor-decl "[(tpmKey?) -> KVAL]" data nil)
    (storedDigest adt-accessor-decl
     "[(tpmSealedData?) -> (tpmDigest?)]" data nil)
    (authData adt-accessor-decl "[(tpmEncAuth?) -> int]" data nil)
    (tpmSecret adt-constructor-decl "[int -> (tpmSecret?)]" data nil)
    (tpmSealedData adt-constructor-decl
     "[[(tpmSecret?), (tpmSecret?), (tpmDigest?), tpmData] -> (tpmSealedData?)]"
     data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted adt-constructor-decl "[[tpmData, KVAL] -> (encrypted?)]"
     data nil)
    (KVAL type-eq-decl nil keydata nil)
    (digAtRelease shared-adt-accessor-decl
     "[{x: tpmData | tpmPCRInfoLong?(x) OR tpmPCRInfoShort?(x)} ->
   (tpmCompositeHash?)]" data nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmPCRComposite adt-constructor-decl
     "[[PCR_SELECTION, PCRVALUES] -> (tpmPCRComposite?)]" data nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (tpmCompositeHash adt-constructor-decl
     "[(tpmPCRComposite?) -> (tpmCompositeHash?)]" data nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (releasePCRSelect adt-accessor-decl
     "[(tpmPCRInfoLong?) -> PCR_SELECTION[HV]]" data nil)
    (creationPCRSelect adt-accessor-decl
     "[(tpmPCRInfoLong?) -> PCR_SELECTION[HV]]" data nil)
    (tpmPCRInfoLong adt-constructor-decl
     "[[LOCALITY, LOCALITY, PCR_SELECTION, PCR_SELECTION, (tpmCompositeHash?),
  (tpmCompositeHash?)] ->
   (tpmPCRInfoLong?)]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (<= const-decl "bool" reals nil)
    (tpmStoredData adt-constructor-decl
     "[[(tpmPCRInfoLong?), (encrypted?)] -> (tpmStoredData?)]" data
     nil)
    (tpmStoredData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (badData const-decl "tpmData" data nil)
    (sealedData adt-accessor-decl "[(tpmSealedData?) -> tpmData]" data
     nil)
    (tpmSealedData? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmAbsOutput_OUT_Unseal_extensionality formula-decl nil tpm nil)
    (OUT_Unseal adt-constructor-decl
     "[[tpmData, authOut, authOut, ReturnCode] -> (OUT_Unseal?)]" tpm
     nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (unBind_post_TCC1 0
  (unBind_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (unBindState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" commands nil)
    (encStoreAsymkey? const-decl "bool" data nil))
   nil))
 (unBind_post_TCC2 0
  (unBind_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (unBind? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (unBind_post_TCC3 0
  (unBind_post_TCC3-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (unBind? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (unBind_post 0
  (unBind_post-1 nil 3596460553 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unBind? const-decl "bool" tpm nil)
    (unBindState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_UnBind const-decl "State" commands nil))
   shostak))
 (data_bind_post_TCC1 0
  (data_bind_post_TCC1-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" commands nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (data_bind_post 0
  (data_bind_post-1 nil 3596460558 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" commands nil))
   shostak))
 (unBind_prev_post_TCC1 0
  (unBind_prev_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (>>= const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" commands nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil))
   nil))
 (unBind_prev_post_TCC2 0
  (unBind_prev_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmAuthData? const-decl "bool" data nil)
    (/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" commands nil)
    (>>= const-decl "State" StateMonad nil))
   nil))
 (unBind_prev_post 0
  (unBind_prev_post-1 nil 3596460560
   ("" (grind)
    (("1" (lemma inverse_private) (("1" (grind) nil nil)) nil)
     ("2" (lemma inverse_private) (("2" (grind) nil nil)) nil)
     ("3" (lemma inverse_private) (("3" (grind) nil nil)) nil)
     ("4" (lemma inverse_private) (("4" (grind) nil nil)) nil)
     ("5" (lemma inverse_private) (("5" (grind) nil nil)) nil)
     ("6" (lemma inverse_private) (("6" (grind) nil nil)) nil)
     ("7" (lemma inverse_private) (("7" (grind) nil nil)) nil)
     ("8" (lemma inverse_private) (("8" (grind) nil nil)) nil))
    nil)
   ((inverse_private formula-decl nil key nil)
    (public const-decl "KVAL" key nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (TPM_UnBind const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (unBindOut const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (unBindState const-decl "tpmAbsState" tpm nil)
    (unBind? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (inverse const-decl "integer" keydata nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (/= const-decl "boolean" notequal nil)
    (>>= const-decl "State" StateMonad nil)
    (Tspi_Data_Bind const-decl "State" commands nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (dataBindOut const-decl "tpmAbsOutput" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (create_wrap_key_post_TCC1 0
  (create_wrap_key_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" commands nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (create_wrap_key_post_TCC2 0
  (create_wrap_key_post_TCC2-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" commands nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (create_wrap_key_post_TCC3 0
  (create_wrap_key_post_TCC3-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" commands nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil))
   nil))
 (create_wrap_key_post_TCC4 0
  (create_wrap_key_post_TCC4-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" commands nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil))
   nil))
 (create_wrap_key_post 0
  (create_wrap_key_post-1 nil 3596460564 ("" (grind))
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" commands nil))
   shostak))
 (load_key_post_TCC1 0
  (load_key_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (b2n const-decl "nbit" bit nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_LoadKey2 const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validEncScheme const-decl "bool" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (load_key_post_TCC2 0
  (load_key_post_TCC2-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (b2n const-decl "nbit" bit nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_LoadKey2 const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validEncScheme const-decl "bool" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (load_key_post 0
  (load_key_post-1 nil 3596460568 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (b2n const-decl "nbit" bit nil)
    (/= const-decl "boolean" notequal nil)
    (validEncScheme const-decl "bool" keydata nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" commands nil))
   shostak))
 (load_key_pred_test_TCC1 0
  (load_key_pred_test_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validEncScheme const-decl "bool" keydata nil)
    (/= const-decl "boolean" notequal nil)
    (b2n const-decl "nbit" bit nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (loadKey2? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" commands nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (load_key_pred_test 0
  (load_key_pred_test-1 nil 3596460621 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_LoadKey2 const-decl "State" commands nil)
    (loadKey2? const-decl "bool" tpm nil)
    (b2n const-decl "nbit" bit nil)
    (validEncScheme const-decl "bool" keydata nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil))
   shostak))
 (load_key_post2 0
  (load_key_post2-1 nil 3596460723
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil)
     ("6" (lemma unique_error) (("6" (grind) nil nil)) nil)
     ("7" (lemma unique_error) (("7" (grind) nil nil)) nil)
     ("8" (lemma unique_error) (("8" (grind) nil nil)) nil)
     ("9" (lemma unique_error) (("9" (grind) nil nil)) nil)
     ("10" (lemma unique_error) (("10" (grind) nil nil)) nil)
     ("11" (lemma unique_error) (("11" (grind) nil nil)) nil)
     ("12" (lemma unique_error) (("12" (grind) nil nil)) nil)
     ("13" (lemma unique_error) (("13" (grind) nil nil)) nil)
     ("14" (lemma unique_error) (("14" (grind) nil nil)) nil)
     ("15" (lemma unique_error) (("15" (grind) nil nil)) nil)
     ("16" (lemma unique_error) (("16" (grind) nil nil)) nil)
     ("17" (lemma unique_error) (("17" (grind) nil nil)) nil)
     ("18" (lemma unique_error) (("18" (grind) nil nil)) nil)
     ("19" (lemma unique_error) (("19" (grind) nil nil)) nil)
     ("20" (lemma unique_error) (("20" (grind) nil nil)) nil)
     ("21" (lemma unique_error) (("21" (grind) nil nil)) nil)
     ("22" (lemma unique_error) (("22" (grind) nil nil)) nil)
     ("23" (lemma unique_error) (("23" (grind) nil nil)) nil)
     ("24" (lemma unique_error) (("24" (grind) nil nil)) nil)
     ("25" (lemma unique_error) (("25" (grind) nil nil)) nil)
     ("26" (lemma unique_error) (("26" (grind) nil nil)) nil)
     ("27" (lemma unique_error) (("27" (grind) nil nil)) nil)
     ("28" (lemma unique_error) (("28" (grind) nil nil)) nil)
     ("29" (lemma unique_error) (("29" (grind) nil nil)) nil)
     ("30" (lemma unique_error) (("30" (grind) nil nil)) nil)
     ("31" (lemma unique_error) (("31" (grind) nil nil)) nil)
     ("32" (lemma unique_error) (("32" (grind) nil nil)) nil)
     ("33" (lemma unique_error) (("33" (grind) nil nil)) nil)
     ("34" (lemma unique_error) (("34" (grind) nil nil)) nil)
     ("35" (lemma unique_error) (("35" (grind) nil nil)) nil)
     ("36" (lemma unique_error) (("36" (grind) nil nil)) nil)
     ("37" (lemma unique_error) (("37" (grind) nil nil)) nil)
     ("38" (lemma unique_error) (("38" (grind) nil nil)) nil)
     ("39" (lemma unique_error) (("39" (grind) nil nil)) nil)
     ("40" (lemma unique_error) (("40" (grind) nil nil)) nil)
     ("41" (lemma unique_error) (("41" (grind) nil nil)) nil)
     ("42" (lemma unique_error) (("42" (grind) nil nil)) nil)
     ("43" (lemma unique_error) (("43" (grind) nil nil)) nil)
     ("44" (lemma unique_error) (("44" (grind) nil nil)) nil)
     ("45" (lemma unique_error) (("45" (grind) nil nil)) nil)
     ("46" (lemma unique_error) (("46" (grind) nil nil)) nil)
     ("47" (lemma unique_error) (("47" (grind) nil nil)) nil)
     ("48" (lemma unique_error) (("48" (grind) nil nil)) nil)
     ("49" (lemma unique_error) (("49" (grind) nil nil)) nil)
     ("50" (lemma unique_error) (("50" (grind) nil nil)) nil)
     ("51" (lemma unique_error) (("51" (grind) nil nil)) nil)
     ("52" (lemma unique_error) (("52" (grind) nil nil)) nil)
     ("53" (lemma unique_error) (("53" (grind) nil nil)) nil)
     ("54" (lemma unique_error) (("54" (grind) nil nil)) nil)
     ("55" (lemma unique_error) (("55" (grind) nil nil)) nil)
     ("56" (lemma unique_error) (("56" (grind) nil nil)) nil)
     ("57" (lemma unique_error) (("57" (grind) nil nil)) nil)
     ("58" (lemma unique_error) (("58" (grind) nil nil)) nil)
     ("59" (lemma unique_error) (("59" (grind) nil nil)) nil)
     ("60" (lemma unique_error) (("60" (grind) nil nil)) nil)
     ("61" (lemma unique_error) (("61" (grind) nil nil)) nil)
     ("62" (lemma unique_error) (("62" (grind) nil nil)) nil)
     ("63" (lemma unique_error) (("63" (grind) nil nil)) nil)
     ("64" (lemma unique_error) (("64" (grind) nil nil)) nil)
     ("65" (lemma unique_error) (("65" (grind) nil nil)) nil)
     ("66" (lemma unique_error) (("66" (grind) nil nil)) nil)
     ("67" (lemma unique_error) (("67" (grind) nil nil)) nil)
     ("68" (lemma unique_error) (("68" (grind) nil nil)) nil)
     ("69" (lemma unique_error) (("69" (grind) nil nil)) nil)
     ("70" (lemma unique_error) (("70" (grind) nil nil)) nil)
     ("71" (lemma unique_error) (("71" (grind) nil nil)) nil)
     ("72" (lemma unique_error) (("72" (grind) nil nil)) nil)
     ("73" (lemma unique_error) (("73" (grind) nil nil)) nil)
     ("74" (lemma unique_error) (("74" (grind) nil nil)) nil)
     ("75" (lemma unique_error) (("75" (grind) nil nil)) nil)
     ("76" (lemma unique_error) (("76" (grind) nil nil)) nil)
     ("77" (lemma unique_error) (("77" (grind) nil nil)) nil)
     ("78" (lemma unique_error) (("78" (grind) nil nil)) nil)
     ("79" (lemma unique_error) (("79" (grind) nil nil)) nil)
     ("80" (lemma unique_error) (("80" (grind) nil nil)) nil)
     ("81" (lemma unique_error) (("81" (grind) nil nil)) nil)
     ("82" (lemma unique_error) (("82" (grind) nil nil)) nil)
     ("83" (lemma unique_error) (("83" (grind) nil nil)) nil)
     ("84" (lemma unique_error) (("84" (grind) nil nil)) nil)
     ("85" (lemma unique_error) (("85" (grind) nil nil)) nil)
     ("86" (lemma unique_error) (("86" (grind) nil nil)) nil)
     ("87" (lemma unique_error) (("87" (grind) nil nil)) nil)
     ("88" (lemma unique_error) (("88" (grind) nil nil)) nil)
     ("89" (lemma unique_error) (("89" (grind) nil nil)) nil)
     ("90" (lemma unique_error) (("90" (grind) nil nil)) nil)
     ("91" (lemma unique_error) (("91" (grind) nil nil)) nil)
     ("92" (lemma unique_error) (("92" (grind) nil nil)) nil)
     ("93" (lemma unique_error) (("93" (grind) nil nil)) nil)
     ("94" (lemma unique_error) (("94" (grind) nil nil)) nil)
     ("95" (lemma unique_error) (("95" (grind) nil nil)) nil)
     ("96" (lemma unique_error) (("96" (grind) nil nil)) nil)
     ("97" (lemma unique_error) (("97" (grind) nil nil)) nil)
     ("98" (lemma unique_error) (("98" (grind) nil nil)) nil)
     ("99" (lemma unique_error) (("99" (grind) nil nil)) nil)
     ("100" (lemma unique_error) (("100" (grind) nil nil)) nil)
     ("101" (lemma unique_error) (("101" (grind) nil nil)) nil)
     ("102" (lemma unique_error) (("102" (grind) nil nil)) nil)
     ("103" (lemma unique_error) (("103" (grind) nil nil)) nil)
     ("104" (lemma unique_error) (("104" (grind) nil nil)) nil)
     ("105" (lemma unique_error) (("105" (grind) nil nil)) nil)
     ("106" (lemma unique_error) (("106" (grind) nil nil)) nil)
     ("107" (lemma unique_error) (("107" (grind) nil nil)) nil)
     ("108" (lemma unique_error) (("108" (grind) nil nil)) nil)
     ("109" (lemma unique_error) (("109" (grind) nil nil)) nil)
     ("110" (lemma unique_error) (("110" (grind) nil nil)) nil)
     ("111" (lemma unique_error) (("111" (grind) nil nil)) nil)
     ("112" (lemma unique_error) (("112" (grind) nil nil)) nil)
     ("113" (lemma unique_error) (("113" (grind) nil nil)) nil)
     ("114" (lemma unique_error) (("114" (grind) nil nil)) nil)
     ("115" (lemma unique_error) (("115" (grind) nil nil)) nil)
     ("116" (lemma unique_error) (("116" (grind) nil nil)) nil)
     ("117" (lemma unique_error) (("117" (grind) nil nil)) nil)
     ("118" (lemma unique_error) (("118" (grind) nil nil)) nil)
     ("119" (lemma unique_error) (("119" (grind) nil nil)) nil)
     ("120" (lemma unique_error) (("120" (grind) nil nil)) nil)
     ("121" (lemma unique_error) (("121" (grind) nil nil)) nil)
     ("122" (lemma unique_error) (("122" (grind) nil nil)) nil)
     ("123" (lemma unique_error) (("123" (grind) nil nil)) nil)
     ("124" (lemma unique_error) (("124" (grind) nil nil)) nil)
     ("125" (lemma unique_error) (("125" (grind) nil nil)) nil)
     ("126" (lemma unique_error) (("126" (grind) nil nil)) nil)
     ("127" (lemma unique_error) (("127" (grind) nil nil)) nil)
     ("128" (lemma unique_error) (("128" (grind) nil nil)) nil)
     ("129" (lemma unique_error) (("129" (grind) nil nil)) nil)
     ("130" (lemma unique_error) (("130" (grind) nil nil)) nil)
     ("131" (lemma unique_error) (("131" (grind) nil nil)) nil)
     ("132" (lemma unique_error) (("132" (grind) nil nil)) nil)
     ("133" (lemma unique_error) (("133" (grind) nil nil)) nil)
     ("134" (lemma unique_error) (("134" (grind) nil nil)) nil)
     ("135" (lemma unique_error) (("135" (grind) nil nil)) nil)
     ("136" (lemma unique_error) (("136" (grind) nil nil)) nil)
     ("137" (lemma unique_error) (("137" (grind) nil nil)) nil)
     ("138" (lemma unique_error) (("138" (grind) nil nil)) nil)
     ("139" (lemma unique_error) (("139" (grind) nil nil)) nil)
     ("140" (lemma unique_error) (("140" (grind) nil nil)) nil)
     ("141" (lemma unique_error) (("141" (grind) nil nil)) nil)
     ("142" (lemma unique_error) (("142" (grind) nil nil)) nil)
     ("143" (lemma unique_error) (("143" (grind) nil nil)) nil)
     ("144" (lemma unique_error) (("144" (grind) nil nil)) nil)
     ("145" (lemma unique_error) (("145" (grind) nil nil)) nil)
     ("146" (lemma unique_error) (("146" (grind) nil nil)) nil)
     ("147" (lemma unique_error) (("147" (grind) nil nil)) nil)
     ("148" (lemma unique_error) (("148" (grind) nil nil)) nil)
     ("149" (lemma unique_error) (("149" (grind) nil nil)) nil)
     ("150" (lemma unique_error) (("150" (grind) nil nil)) nil)
     ("151" (lemma unique_error) (("151" (grind) nil nil)) nil)
     ("152" (lemma unique_error) (("152" (grind) nil nil)) nil)
     ("153" (lemma unique_error) (("153" (grind) nil nil)) nil)
     ("154" (lemma unique_error) (("154" (grind) nil nil)) nil)
     ("155" (lemma unique_error) (("155" (grind) nil nil)) nil)
     ("156" (lemma unique_error) (("156" (grind) nil nil)) nil)
     ("157" (lemma unique_error) (("157" (grind) nil nil)) nil)
     ("158" (lemma unique_error) (("158" (grind) nil nil)) nil)
     ("159" (lemma unique_error) (("159" (grind) nil nil)) nil)
     ("160" (lemma unique_error) (("160" (grind) nil nil)) nil)
     ("161" (lemma unique_error) (("161" (grind) nil nil)) nil)
     ("162" (lemma unique_error) (("162" (grind) nil nil)) nil)
     ("163" (lemma unique_error) (("163" (grind) nil nil)) nil)
     ("164" (lemma unique_error) (("164" (grind) nil nil)) nil)
     ("165" (lemma unique_error) (("165" (grind) nil nil)) nil)
     ("166" (lemma unique_error) (("166" (grind) nil nil)) nil)
     ("167" (lemma unique_error) (("167" (grind) nil nil)) nil)
     ("168" (lemma unique_error) (("168" (grind) nil nil)) nil)
     ("169" (lemma unique_error) (("169" (grind) nil nil)) nil)
     ("170" (lemma unique_error) (("170" (grind) nil nil)) nil)
     ("171" (lemma unique_error) (("171" (grind) nil nil)) nil)
     ("172" (lemma unique_error) (("172" (grind) nil nil)) nil)
     ("173" (lemma unique_error) (("173" (grind) nil nil)) nil)
     ("174" (lemma unique_error) (("174" (grind) nil nil)) nil)
     ("175" (lemma unique_error) (("175" (grind) nil nil)) nil)
     ("176" (lemma unique_error) (("176" (grind) nil nil)) nil)
     ("177" (lemma unique_error) (("177" (grind) nil nil)) nil)
     ("178" (lemma unique_error) (("178" (grind) nil nil)) nil)
     ("179" (lemma unique_error) (("179" (grind) nil nil)) nil)
     ("180" (lemma unique_error) (("180" (grind) nil nil)) nil)
     ("181" (lemma unique_error) (("181" (grind) nil nil)) nil)
     ("182" (lemma unique_error) (("182" (grind) nil nil)) nil)
     ("183" (lemma unique_error) (("183" (grind) nil nil)) nil)
     ("184" (lemma unique_error) (("184" (grind) nil nil)) nil)
     ("185" (lemma unique_error) (("185" (grind) nil nil)) nil)
     ("186" (lemma unique_error) (("186" (grind) nil nil)) nil)
     ("187" (lemma unique_error) (("187" (grind) nil nil)) nil)
     ("188" (lemma unique_error) (("188" (grind) nil nil)) nil)
     ("189" (lemma unique_error) (("189" (grind) nil nil)) nil)
     ("190" (lemma unique_error) (("190" (grind) nil nil)) nil)
     ("191" (lemma unique_error) (("191" (grind) nil nil)) nil)
     ("192" (lemma unique_error) (("192" (grind) nil nil)) nil)
     ("193" (lemma unique_error) (("193" (grind) nil nil)) nil)
     ("194" (lemma unique_error) (("194" (grind) nil nil)) nil)
     ("195" (lemma unique_error) (("195" (grind) nil nil)) nil)
     ("196" (lemma unique_error) (("196" (grind) nil nil)) nil)
     ("197" (lemma unique_error) (("197" (grind) nil nil)) nil)
     ("198" (lemma unique_error) (("198" (grind) nil nil)) nil)
     ("199" (lemma unique_error) (("199" (grind) nil nil)) nil)
     ("200" (lemma unique_error) (("200" (grind) nil nil)) nil)
     ("201" (lemma unique_error) (("201" (grind) nil nil)) nil)
     ("202" (lemma unique_error) (("202" (grind) nil nil)) nil)
     ("203" (lemma unique_error) (("203" (grind) nil nil)) nil)
     ("204" (lemma unique_error) (("204" (grind) nil nil)) nil)
     ("205" (lemma unique_error) (("205" (grind) nil nil)) nil)
     ("206" (lemma unique_error) (("206" (grind) nil nil)) nil)
     ("207" (lemma unique_error) (("207" (grind) nil nil)) nil)
     ("208" (lemma unique_error) (("208" (grind) nil nil)) nil)
     ("209" (lemma unique_error) (("209" (grind) nil nil)) nil)
     ("210" (lemma unique_error) (("210" (grind) nil nil)) nil)
     ("211" (lemma unique_error) (("211" (grind) nil nil)) nil)
     ("212" (lemma unique_error) (("212" (grind) nil nil)) nil)
     ("213" (lemma unique_error) (("213" (grind) nil nil)) nil)
     ("214" (lemma unique_error) (("214" (grind) nil nil)) nil)
     ("215" (lemma unique_error) (("215" (grind) nil nil)) nil)
     ("216" (lemma unique_error) (("216" (grind) nil nil)) nil)
     ("217" (lemma unique_error) (("217" (grind) nil nil)) nil)
     ("218" (lemma unique_error) (("218" (grind) nil nil)) nil)
     ("219" (lemma unique_error) (("219" (grind) nil nil)) nil)
     ("220" (lemma unique_error) (("220" (grind) nil nil)) nil)
     ("221" (lemma unique_error) (("221" (grind) nil nil)) nil)
     ("222" (lemma unique_error) (("222" (grind) nil nil)) nil)
     ("223" (lemma unique_error) (("223" (grind) nil nil)) nil)
     ("224" (lemma unique_error) (("224" (grind) nil nil)) nil)
     ("225" (lemma unique_error) (("225" (grind) nil nil)) nil)
     ("226" (lemma unique_error) (("226" (grind) nil nil)) nil)
     ("227" (lemma unique_error) (("227" (grind) nil nil)) nil)
     ("228" (lemma unique_error) (("228" (grind) nil nil)) nil)
     ("229" (lemma unique_error) (("229" (grind) nil nil)) nil)
     ("230" (lemma unique_error) (("230" (grind) nil nil)) nil)
     ("231" (lemma unique_error) (("231" (grind) nil nil)) nil)
     ("232" (lemma unique_error) (("232" (grind) nil nil)) nil)
     ("233" (lemma unique_error) (("233" (grind) nil nil)) nil)
     ("234" (lemma unique_error) (("234" (grind) nil nil)) nil)
     ("235" (lemma unique_error) (("235" (grind) nil nil)) nil)
     ("236" (lemma unique_error) (("236" (grind) nil nil)) nil)
     ("237" (lemma unique_error) (("237" (grind) nil nil)) nil)
     ("238" (lemma unique_error) (("238" (grind) nil nil)) nil)
     ("239" (lemma unique_error) (("239" (grind) nil nil)) nil)
     ("240" (lemma unique_error) (("240" (grind) nil nil)) nil)
     ("241" (lemma unique_error) (("241" (grind) nil nil)) nil)
     ("242" (lemma unique_error) (("242" (grind) nil nil)) nil)
     ("243" (lemma unique_error) (("243" (grind) nil nil)) nil)
     ("244" (lemma unique_error) (("244" (grind) nil nil)) nil)
     ("245" (lemma unique_error) (("245" (grind) nil nil)) nil)
     ("246" (lemma unique_error) (("246" (grind) nil nil)) nil)
     ("247" (lemma unique_error) (("247" (grind) nil nil)) nil))
    nil)
   ((TPM_FAIL adt-constructor-decl "(TPM_FAIL?)" ReturnCodes nil)
    (TPM_FAIL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (b2n const-decl "nbit" bit nil)
    (/= const-decl "boolean" notequal nil)
    (validEncScheme const-decl "bool" keydata nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (loadKey2? const-decl "bool" tpm nil)
    (TPM_LoadKey2 const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey const-decl "KEYSET" key nil)
    (addKey const-decl "KEYSET" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (load_key_prev_post 0
  (load_key_prev_post-1 nil 3596460761 ("" (grind))
   ((tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (updateLoc const-decl "mem" memory nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (loadKey2State const-decl "tpmAbsState" tpm nil)
    (loadKey2Out const-decl "tpmAbsOutput" tpm nil)
    (TPM_LoadKey2 const-decl "State" commands nil)
    (b2n const-decl "nbit" bit nil)
    (validEncScheme const-decl "bool" keydata nil)
    (validSigScheme const-decl "bool" keydata nil)
    (validateEncrSigSchemes const-decl "bool" tpm nil)
    (checkKeyUsage const-decl "bool" tpm nil)
    (validateKeyConsistency const-decl "nat" tpm nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" commands nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" commands nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" commands nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (validateLoadKey2 const-decl "nat" tpm nil)
    (loadKey2? const-decl "bool" tpm nil))
   shostak))
 (get_pub_key_post_TCC1 0
  (get_pub_key_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_GetPubKey const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (getPubKeyState const-decl "tpmAbsState" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (getPubKey? const-decl "bool" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (get_pub_key_post_TCC2 0
  (get_pub_key_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (getPubKeyState const-decl "tpmAbsState" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (getPubKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_GetPubKey const-decl "State" commands nil))
   nil))
 (get_pub_key_post 0
  (get_pub_key_post-1 nil 3596460828 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (getPubKey? const-decl "bool" tpm nil)
    (getPubKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_GetPubKey const-decl "State" commands nil))
   shostak))
 (get_pub_key_post2 0
  (get_pub_key_post2-1 nil 3596460831
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil))
    nil)
   ((TPM_AUTHFAIL adt-constructor-decl "(TPM_AUTHFAIL?)" ReturnCodes
     nil)
    (TPM_AUTHFAIL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYHANDLE adt-constructor-decl
     "(TPM_INVALID_KEYHANDLE?)" ReturnCodes nil)
    (TPM_INVALID_KEYHANDLE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL adt-constructor-decl "(TPM_WRONGPCRVAL?)"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_GetPubKey const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (getPubKeyOut const-decl "tpmAbsOutput" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (getPubKeyState const-decl "tpmAbsState" tpm nil)
    (getPubKey? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (create_mig_blob_post_TCC1 0
  (create_mig_blob_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CreateMigrationBlob const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (create_mig_blob_post_TCC2 0
  (create_mig_blob_post_TCC2-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" commands nil))
   nil))
 (create_mig_blob_post_TCC3 0
  (create_mig_blob_post_TCC3-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CreateMigrationBlob const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (key adt-accessor-decl "[(tpmMigKeyAuth?) -> (tpmKey?)]" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (create_mig_blob_post_TCC4 0
  (create_mig_blob_post_TCC4-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" commands nil))
   nil))
 (create_mig_blob_post_TCC5 0
  (create_mig_blob_post_TCC5-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CreateMigrationBlob const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (encrypt const-decl "tpmData" key nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (create_mig_blob_post_TCC6 0
  (create_mig_blob_post_TCC6-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CreateMigrationBlob const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (encrypt const-decl "tpmData" key nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (create_mig_blob_post 0
  (create_mig_blob_post-1 nil 3596460833 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (randState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (checkMigKeyAuth? const-decl "bool" tpm nil)
    (createMigBlob? const-decl "bool" tpm nil)
    (createMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateMigrationBlob const-decl "State" commands nil))
   shostak))
 (convert_mig_blob_post_TCC1 0
  (convert_mig_blob_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_ConvertMigrationBlob const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (convert_mig_blob_post_TCC2 0
  (convert_mig_blob_post_TCC2-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_ConvertMigrationBlob const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (convert_mig_blob_post_TCC3 0
  (convert_mig_blob_post_TCC3-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ConvertMigrationBlob const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (convert_mig_blob_post 0
  (convert_mig_blob_post-1 nil 3596460841 ("" (grind))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ConvertMigrationBlob const-decl "State" commands nil))
   shostak))
 (convert_mig_blob_pred_test 0
  (convert_mig_blob_pred_test-1 nil 3596460856 ("" (grind))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (convertMigBlob? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (convertMigBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (convertMigBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ConvertMigrationBlob const-decl "State" commands nil))
   shostak))
 (authorize_migration_key_post 0
  (authorize_migration_key_post-1 nil 3596460866 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (authorizeMigKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (authorizeMigKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_AuthorizeMigrationKey const-decl "State" commands nil))
   shostak))
 (migrate_key_post_TCC1 0
  (migrate_key_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_MigrateKey const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (migrateKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (migrate_key_post_TCC2 0
  (migrate_key_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKeyState const-decl "tpmAbsState" tpm nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MigrateKey const-decl "State" commands nil)
    (migrateKey? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (migrate_key_post 0
  (migrate_key_post-1 nil 3596460868 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (migrateKey? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (migrateKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (migrateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MigrateKey const-decl "State" commands nil))
   shostak))
 (cmk_set_restr_post 0
  (cmk_set_restr_post-1 nil 3596460871 ("" (grind))
   ((tpmCMKDelegate? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (CMKSetRestr? const-decl "bool" tpm nil)
    (CMKSetRestrState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKSetRestrOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_SetRestrictions const-decl "State" commands nil))
   shostak))
 (cmk_approve_ma_post 0
  (cmk_approve_ma_post-1 nil 3596460873 ("" (grind))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (CMKApproveMAState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKApproveMAOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_ApproveMA const-decl "State" commands nil))
   shostak))
 (cmk_create_key_post_TCC1 0
  (cmk_create_key_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CMK_CreateKey const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (cmk_create_key_post_TCC2 0
  (cmk_create_key_post_TCC2-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CMK_CreateKey const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (cmk_create_key_post_TCC3 0
  (cmk_create_key_post_TCC3-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateKey const-decl "State" commands nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil))
   nil))
 (cmk_create_key_post 0
  (cmk_create_key_post-1 nil 3596460875 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKCreateKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateKey const-decl "State" commands nil))
   shostak))
 (cmk_create_key_post2 0
  (cmk_create_key_post2-1 nil 3596460880
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil)
     ("6" (lemma unique_error) (("6" (grind) nil nil)) nil)
     ("7" (lemma unique_error) (("7" (grind) nil nil)) nil)
     ("8" (lemma unique_error) (("8" (grind) nil nil)) nil)
     ("9" (lemma unique_error) (("9" (grind) nil nil)) nil)
     ("10" (lemma unique_error) (("10" (grind) nil nil)) nil)
     ("11" (lemma unique_error) (("11" (grind) nil nil)) nil)
     ("12" (lemma unique_error) (("12" (grind) nil nil)) nil)
     ("13" (lemma unique_error) (("13" (grind) nil nil)) nil))
    nil)
   ((TPM_MA_AUTHORITY adt-constructor-decl "(TPM_MA_AUTHORITY?)"
     ReturnCodes nil)
    (TPM_MA_AUTHORITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_CMK_CreateKey const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (private const-decl "privKVAL" key nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (CMKCreateKey? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (validateKeyParams? const-decl "bool" tpm nil)
    (validateMigrateAuthority? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (cmk_create_ticket_post 0
  (cmk_create_ticket_post-1 nil 3596460884 ("" (grind))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validateKeyAlgo? const-decl "bool" tpm nil)
    (checkSig? const-decl "bool" key nil)
    (CMKCreateTicket? const-decl "bool" tpm nil)
    (CMKCreateTicketState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateTicketOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateTicket const-decl "State" commands nil))
   shostak))
 (cmk_create_ticket_post2 0
  (cmk_create_ticket_post2-1 nil 3596460887
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil))
    nil)
   ((TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_SIGNATURE adt-constructor-decl "(TPM_BAD_SIGNATURE?)"
     ReturnCodes nil)
    (TPM_BAD_SIGNATURE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_CMK_CreateTicket const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateTicketOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateTicketState const-decl "tpmAbsState" tpm nil)
    (CMKCreateTicket? const-decl "bool" tpm nil)
    (checkSig? const-decl "bool" key nil)
    (validateKeyAlgo? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (cmk_create_blob_post_TCC1 0
  (cmk_create_blob_post_TCC1-1 nil 3596456996 ("" (grind) nil nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (CMKCreateBlob? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (CMKCreateBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateBlob const-decl "State" commands nil))
   nil))
 (cmk_create_blob_post_TCC2 0
  (cmk_create_blob_post_TCC2-1 nil 3596456996 ("" (grind) nil nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (CMKCreateBlob? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (CMKCreateBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateBlob const-decl "State" commands nil))
   nil))
 (cmk_create_blob_post 0
  (cmk_create_blob_post-1 nil 3596460888 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (CMKCreateBlob? const-decl "bool" tpm nil)
    (CMKCreateBlobState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_CreateBlob const-decl "State" commands nil))
   shostak))
 (cmk_create_blob_post2 0
  (cmk_create_blob_post2-1 nil 3596460891
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil))
    nil)
   ((TPM_MA_AUTHORITY adt-constructor-decl "(TPM_MA_AUTHORITY?)"
     ReturnCodes nil)
    (TPM_MA_AUTHORITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_MODE adt-constructor-decl "(TPM_BAD_MODE?)" ReturnCodes
     nil)
    (TPM_BAD_MODE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmMigScheme? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_CMK_CreateBlob const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKCreateBlobOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKCreateBlobState const-decl "tpmAbsState" tpm nil)
    (CMKCreateBlob? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (cmk_convert_migration_post_TCC1 0
  (cmk_convert_migration_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CMK_ConvertMigration const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (cmk_convert_migration_post_TCC2 0
  (cmk_convert_migration_post_TCC2-1 nil 3596456996
   ("" (subtype-tcc) nil nil) nil shostak))
 (cmk_convert_migration_post_TCC3 0
  (cmk_convert_migration_post_TCC3-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CMK_ConvertMigration const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (cmk_convert_migration_post_TCC4 0
  (cmk_convert_migration_post_TCC4-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (<= const-decl "bool" reals nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_ConvertMigration const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (/= const-decl "boolean" notequal nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKConvertMigration? const-decl "bool" tpm nil))
   nil))
 (cmk_convert_migration_post_TCC5 0
  (cmk_convert_migration_post_TCC5-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CMK_ConvertMigration const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (cmk_convert_migration_post_TCC6 0
  (cmk_convert_migration_post_TCC6-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CMK_ConvertMigration const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKMigAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPubkey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (cmk_convert_migration_post 0
  (cmk_convert_migration_post-1 nil 3596460893 ("" (grind))
   ((RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (unXOR const-decl "tpmData" data nil)
    (/= const-decl "boolean" notequal nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CMK_ConvertMigration const-decl "State" commands nil))
   shostak))
 (cmk_convert_migration_post2_TCC1 0
  (cmk_convert_migration_post2_TCC1-1 nil 3596456996
   ("" (subtype-tcc) nil nil) nil shostak))
 (cmk_convert_migration_post2 0
  (cmk_convert_migration_post2-1 nil 3596460981
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil)
     ("6" (lemma unique_error) (("6" (grind) nil nil)) nil)
     ("7" (lemma unique_error) (("7" (grind) nil nil)) nil)
     ("8" (lemma unique_error) (("8" (grind) nil nil)) nil)
     ("9" (lemma unique_error) (("9" (grind) nil nil)) nil)
     ("10" (lemma unique_error) (("10" (grind) nil nil)) nil)
     ("11" (lemma unique_error) (("11" (grind) nil nil)) nil)
     ("12" (lemma unique_error) (("12" (grind) nil nil)) nil)
     ("13" (lemma unique_error) (("13" (grind) nil nil)) nil)
     ("14" (lemma unique_error) (("14" (grind) nil nil)) nil)
     ("15" (lemma unique_error) (("15" (grind) nil nil)) nil)
     ("16" (lemma unique_error) (("16" (grind) nil nil)) nil)
     ("17" (lemma unique_error) (("17" (grind) nil nil)) nil)
     ("18" (lemma unique_error) (("18" (grind) nil nil)) nil)
     ("19" (lemma unique_error) (("19" (grind) nil nil)) nil)
     ("20" (lemma unique_error) (("20" (grind) nil nil)) nil)
     ("21" (lemma unique_error) (("21" (grind) nil nil)) nil)
     ("22" (lemma unique_error) (("22" (grind) nil nil)) nil)
     ("23" (lemma unique_error) (("23" (grind) nil nil)) nil)
     ("24" (lemma unique_error) (("24" (grind) nil nil)) nil)
     ("25" (lemma unique_error) (("25" (grind) nil nil)) nil)
     ("26" (lemma unique_error) (("26" (grind) nil nil)) nil)
     ("27" (lemma unique_error) (("27" (grind) nil nil)) nil)
     ("28" (lemma unique_error) (("28" (grind) nil nil)) nil)
     ("29" (lemma unique_error) (("29" (grind) nil nil)) nil)
     ("30" (lemma unique_error) (("30" (grind) nil nil)) nil)
     ("31" (lemma unique_error) (("31" (grind) nil nil)) nil)
     ("32" (lemma unique_error) (("32" (grind) nil nil)) nil)
     ("33" (lemma unique_error) (("33" (grind) nil nil)) nil)
     ("34" (lemma unique_error) (("34" (grind) nil nil)) nil)
     ("35" (lemma unique_error) (("35" (grind) nil nil)) nil)
     ("36" (lemma unique_error) (("36" (grind) nil nil)) nil)
     ("37" (lemma unique_error) (("37" (grind) nil nil)) nil)
     ("38" (lemma unique_error) (("38" (grind) nil nil)) nil)
     ("39" (lemma unique_error) (("39" (grind) nil nil)) nil)
     ("40" (lemma unique_error) (("40" (grind) nil nil)) nil)
     ("41" (lemma unique_error) (("41" (grind) nil nil)) nil)
     ("42" (lemma unique_error) (("42" (grind) nil nil)) nil)
     ("43" (lemma unique_error) (("43" (grind) nil nil)) nil)
     ("44" (lemma unique_error) (("44" (grind) nil nil)) nil)
     ("45" (lemma unique_error) (("45" (grind) nil nil)) nil)
     ("46" (lemma unique_error) (("46" (grind) nil nil)) nil)
     ("47" (lemma unique_error) (("47" (grind) nil nil)) nil)
     ("48" (lemma unique_error) (("48" (grind) nil nil)) nil)
     ("49" (lemma unique_error) (("49" (grind) nil nil)) nil)
     ("50" (lemma unique_error) (("50" (grind) nil nil)) nil)
     ("51" (lemma unique_error) (("51" (grind) nil nil)) nil)
     ("52" (lemma unique_error) (("52" (grind) nil nil)) nil)
     ("53" (lemma unique_error) (("53" (grind) nil nil)) nil)
     ("54" (lemma unique_error) (("54" (grind) nil nil)) nil)
     ("55" (lemma unique_error) (("55" (grind) nil nil)) nil)
     ("56" (lemma unique_error) (("56" (grind) nil nil)) nil)
     ("57" (lemma unique_error) (("57" (grind) nil nil)) nil)
     ("58" (lemma unique_error) (("58" (grind) nil nil)) nil)
     ("59" (lemma unique_error) (("59" (grind) nil nil)) nil)
     ("60" (lemma unique_error) (("60" (grind) nil nil)) nil)
     ("61" (lemma unique_error) (("61" (grind) nil nil)) nil)
     ("62" (lemma unique_error) (("62" (grind) nil nil)) nil)
     ("63" (lemma unique_error) (("63" (grind) nil nil)) nil)
     ("64" (lemma unique_error) (("64" (grind) nil nil)) nil)
     ("65" (lemma unique_error) (("65" (grind) nil nil)) nil)
     ("66" (lemma unique_error) (("66" (grind) nil nil)) nil)
     ("67" (lemma unique_error) (("67" (grind) nil nil)) nil)
     ("68" (lemma unique_error) (("68" (grind) nil nil)) nil)
     ("69" (lemma unique_error) (("69" (grind) nil nil)) nil)
     ("70" (lemma unique_error) (("70" (grind) nil nil)) nil)
     ("71" (lemma unique_error) (("71" (grind) nil nil)) nil)
     ("72" (lemma unique_error) (("72" (grind) nil nil)) nil)
     ("73" (lemma unique_error) (("73" (grind) nil nil)) nil)
     ("74" (lemma unique_error) (("74" (grind) nil nil)) nil)
     ("75" (lemma unique_error) (("75" (grind) nil nil)) nil)
     ("76" (lemma unique_error) (("76" (grind) nil nil)) nil)
     ("77" (lemma unique_error) (("77" (grind) nil nil)) nil)
     ("78" (lemma unique_error) (("78" (grind) nil nil)) nil)
     ("79" (lemma unique_error) (("79" (grind) nil nil)) nil)
     ("80" (lemma unique_error) (("80" (grind) nil nil)) nil)
     ("81" (lemma unique_error) (("81" (grind) nil nil)) nil)
     ("82" (lemma unique_error) (("82" (grind) nil nil)) nil)
     ("83" (lemma unique_error) (("83" (grind) nil nil)) nil)
     ("84" (lemma unique_error) (("84" (grind) nil nil)) nil)
     ("85" (lemma unique_error) (("85" (grind) nil nil)) nil)
     ("86" (lemma unique_error) (("86" (grind) nil nil)) nil)
     ("87" (lemma unique_error) (("87" (grind) nil nil)) nil)
     ("88" (lemma unique_error) (("88" (grind) nil nil)) nil)
     ("89" (lemma unique_error) (("89" (grind) nil nil)) nil)
     ("90" (lemma unique_error) (("90" (grind) nil nil)) nil)
     ("91" (lemma unique_error) (("91" (grind) nil nil)) nil)
     ("92" (lemma unique_error) (("92" (grind) nil nil)) nil)
     ("93" (lemma unique_error) (("93" (grind) nil nil)) nil)
     ("94" (lemma unique_error) (("94" (grind) nil nil)) nil)
     ("95" (lemma unique_error) (("95" (grind) nil nil)) nil)
     ("96" (lemma unique_error) (("96" (grind) nil nil)) nil)
     ("97" (lemma unique_error) (("97" (grind) nil nil)) nil)
     ("98" (lemma unique_error) (("98" (grind) nil nil)) nil)
     ("99" (lemma unique_error) (("99" (grind) nil nil)) nil)
     ("100" (lemma unique_error) (("100" (grind) nil nil)) nil)
     ("101" (lemma unique_error) (("101" (grind) nil nil)) nil)
     ("102" (lemma unique_error) (("102" (grind) nil nil)) nil)
     ("103" (lemma unique_error) (("103" (grind) nil nil)) nil)
     ("104" (lemma unique_error) (("104" (grind) nil nil)) nil)
     ("105" (lemma unique_error) (("105" (grind) nil nil)) nil)
     ("106" (lemma unique_error) (("106" (grind) nil nil)) nil)
     ("107" (lemma unique_error) (("107" (grind) nil nil)) nil)
     ("108" (lemma unique_error) (("108" (grind) nil nil)) nil)
     ("109" (lemma unique_error) (("109" (grind) nil nil)) nil))
    nil)
   ((TPM_MA_DESTINATION adt-constructor-decl "(TPM_MA_DESTINATION?)"
     ReturnCodes nil)
    (TPM_MA_DESTINATION? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (TPM_MA_SOURCE adt-constructor-decl "(TPM_MA_SOURCE?)" ReturnCodes
     nil)
    (TPM_MA_SOURCE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_MIGRATION adt-constructor-decl "(TPM_BAD_MIGRATION?)"
     ReturnCodes nil)
    (TPM_BAD_MIGRATION? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SHA_ERROR adt-constructor-decl "(TPM_SHA_ERROR?)" ReturnCodes
     nil)
    (TPM_SHA_ERROR? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY adt-constructor-decl
     "(TPM_BAD_KEY_PROPERTY?)" ReturnCodes nil)
    (TPM_BAD_KEY_PROPERTY? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (RNG? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMSAComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCMKAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_CMK_ConvertMigration const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (CMKConvertMigrationOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigrationState const-decl "tpmAbsState" tpm nil)
    (CMKConvertMigration? const-decl "bool" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (OAEPdecode const-decl "tpmData" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (unXOR const-decl "tpmData" data nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (sign_post 0
  (sign_post-1 nil 3596461042 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (sign? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil)
    (signState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (signOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Sign const-decl "State" commands nil))
   shostak))
 (sign_pred_test 0
  (sign_pred_test-1 nil 3596461044 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (sign? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil)
    (signState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (signOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Sign const-decl "State" commands nil))
   shostak))
 (certify_key_post_TCC1 0
  (certify_key_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CertifyKey const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (certifyKey? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (certify_key_post_TCC2 0
  (certify_key_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (private const-decl "privKVAL" key nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CertifyKey const-decl "State" commands nil))
   nil))
 (certify_key_post_TCC3 0
  (certify_key_post_TCC3-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_CertifyKey const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (certifyKey? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (certify_key_post_TCC4 0
  (certify_key_post_TCC4-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (private const-decl "privKVAL" key nil)
    (tpmCertifyInfo? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CertifyKey const-decl "State" commands nil))
   nil))
 (certify_key_post 0
  (certify_key_post-1 nil 3596461047 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (certifyKey? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (certifyKeyOut2 const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (certifyKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CertifyKey const-decl "State" commands nil))
   shostak))
 (create_endorsement_key_pair_post 0
  (create_endorsement_key_pair_post-1 nil 3596461050 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (createEKPairState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createEKPairOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateEndorsementKeyPair const-decl "State" commands nil))
   shostak))
 (create_revocable_ek_post 0
  (create_revocable_ek_post-1 nil 3596461053 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (createEKPairState const-decl "tpmAbsState" tpm nil)
    (createEKPairOut const-decl "tpmAbsOutput" tpm nil)
    (createRevEKState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createRevEKOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateRevocableEK const-decl "State" commands nil))
   shostak))
 (revoke_trust_post 0
  (revoke_trust_post-1 nil 3596461055 ("" (grind))
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (revokeTrustOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_RevokeTrust const-decl "State" commands nil)
    (revokeTrust? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (revoke_trust_post2 0
  (revoke_trust_post2-1 nil 3596461058
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil))
    nil)
   ((TPM_PERMANENTEK adt-constructor-decl "(TPM_PERMANENTEK?)"
     ReturnCodes nil)
    (TPM_PERMANENTEK? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_AUTHFAIL adt-constructor-decl "(TPM_AUTHFAIL?)" ReturnCodes
     nil)
    (TPM_AUTHFAIL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_MODE adt-constructor-decl "(TPM_BAD_MODE?)" ReturnCodes
     nil)
    (TPM_BAD_MODE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (revokeTrust? const-decl "bool" tpm nil)
    (TPM_RevokeTrust const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (revokeTrustOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (revokeTrustState const-decl "tpmAbsState" tpm nil)
    (clear const-decl "tpmAbsState" tpm nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (read_pub_ek_post 0
  (read_pub_ek_post-1 nil 3596461060 ("" (grind))
   ((tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ReadPubek const-decl "State" commands nil)
    (readPubek? const-decl "bool" tpm nil))
   shostak))
 (read_pub_ek_post2 0
  (read_pub_ek_post2-1 nil 3596461062
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil))
    nil)
   ((TPM_DISABLED_CMD adt-constructor-decl "(TPM_DISABLED_CMD?)"
     ReturnCodes nil)
    (TPM_DISABLED_CMD? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT adt-constructor-decl "(TPM_NO_ENDORSEMENT?)"
     ReturnCodes nil)
    (TPM_NO_ENDORSEMENT? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (readPubek? const-decl "bool" tpm nil)
    (TPM_ReadPubek const-decl "State" commands nil)
    (output const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (goodkey? const-decl "bool" keydata nil)
    (badkey const-decl "KVAL" keydata nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (read_pub_ek_take_ownership 0
  (read_pub_ek_take_ownership-1 nil 3596461063 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (badkey const-decl "KVAL" keydata nil)
    (goodkey? const-decl "bool" keydata nil)
    (takeOwnership? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (takeOwnershipState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (takeOwnershipOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_TakeOwnership const-decl "State" commands nil)
    (readPubekOut const-decl "tpmAbsOutput" tpm nil)
    (output const-decl "State" StateMonad nil)
    (TPM_ReadPubek const-decl "State" commands nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (owner_read_internal_pub_post 0
  (owner_read_internal_pub_post-1 nil 3596461067 ("" (grind))
   ((afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (ekKeyVal const-decl "K" tpm nil)
    (srkKeyVal const-decl "K" tpm nil)
    (ownerReadInternalPubState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (ownerReadInternalPubOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_OwnerReadInternalPub const-decl "State" commands nil))
   shostak))
 (make_identity_post_TCC1 0
  (make_identity_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_MakeIdentity const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (make_identity_post_TCC2 0
  (make_identity_post_TCC2-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_MakeIdentity const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (make_identity_post_TCC3 0
  (make_identity_post_TCC3-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmAuthData? const-decl "bool" data nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" commands nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil))
   nil))
 (make_identity_post_TCC4 0
  (make_identity_post_TCC4-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoLong? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" commands nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil))
   nil))
 (make_identity_post 0
  (make_identity_post-1 nil 3596461069 ("" (grind))
   ((tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (sign const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_MakeIdentity const-decl "State" commands nil))
   shostak))
 (make_identity_post2 0
  (make_identity_post2-1 nil 3596461072
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil))
    nil)
   ((TPM_INVALID_KEYUSAGE adt-constructor-decl
     "(TPM_INVALID_KEYUSAGE?)" ReturnCodes nil)
    (TPM_INVALID_KEYUSAGE? adt-recognizer-decl
     "[ReturnCode -> boolean]" ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTFIPS adt-constructor-decl "(TPM_NOTFIPS?)" ReturnCodes nil)
    (TPM_NOTFIPS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_MakeIdentity const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (makeIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (makeIdentityState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (encrypt const-decl "tpmData" key nil)
    (setDigAtCreation const-decl "(tpmCompositeHash?)" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (makeIdentity? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (activate_identity_post_TCC1 0
  (activate_identity_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_ActivateIdentity const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (activate_identity_post_TCC2 0
  (activate_identity_post_TCC2-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmAuthData? const-decl "bool" data nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (activate_identity_post_TCC3 0
  (activate_identity_post_TCC3-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (activate_identity_post_TCC4 0
  (activate_identity_post_TCC4-1 nil 3596456996
   ("" (subtype-tcc) nil nil) nil shostak))
 (activate_identity_post_TCC5 0
  (activate_identity_post_TCC5-1 nil 3596456996
   ("" (subtype-tcc) nil nil) nil shostak))
 (activate_identity_post_TCC6 0
  (activate_identity_post_TCC6-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (activate_identity_post_TCC7 0
  (activate_identity_post_TCC7-1 nil 3596456996
   ("" (subtype-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmPCRInfoShort? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSessKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAuthData? const-decl "bool" data nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (activate_identity_post_TCC8 0
  (activate_identity_post_TCC8-1 nil 3596456996
   ("" (cases-tcc) nil nil)
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" commands nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (activate_identity_post 0
  (activate_identity_post-1 nil 3596461074 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (/= const-decl "boolean" notequal nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" commands nil))
   shostak))
 (activate_identity_pred_test 0
  (activate_identity_pred_test-1 nil 3596461080 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ActivateIdentity const-decl "State" commands nil))
   shostak))
 (activate_identity_post2 0
  (activate_identity_post2-1 nil 3596461087
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error) (("3" (grind) nil nil)) nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil)
     ("6" (lemma unique_error) (("6" (grind) nil nil)) nil)
     ("7" (lemma unique_error) (("7" (grind) nil nil)) nil)
     ("8" (lemma unique_error) (("8" (grind) nil nil)) nil)
     ("9" (lemma unique_error) (("9" (grind) nil nil)) nil)
     ("10" (lemma unique_error) (("10" (grind) nil nil)) nil)
     ("11" (lemma unique_error) (("11" (grind) nil nil)) nil)
     ("12" (lemma unique_error) (("12" (grind) nil nil)) nil)
     ("13" (lemma unique_error) (("13" (grind) nil nil)) nil)
     ("14" (lemma unique_error) (("14" (grind) nil nil)) nil)
     ("15" (lemma unique_error) (("15" (grind) nil nil)) nil)
     ("16" (lemma unique_error) (("16" (grind) nil nil)) nil)
     ("17" (lemma unique_error) (("17" (grind) nil nil)) nil)
     ("18" (lemma unique_error) (("18" (grind) nil nil)) nil)
     ("19" (lemma unique_error) (("19" (grind) nil nil)) nil))
    nil)
   ((TPM_BAD_TYPE adt-constructor-decl "(TPM_BAD_TYPE?)" ReturnCodes
     nil)
    (TPM_BAD_TYPE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_PARAMETER adt-constructor-decl "(TPM_BAD_PARAMETER?)"
     ReturnCodes nil)
    (TPM_BAD_PARAMETER? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL adt-constructor-decl "(TPM_WRONGPCRVAL?)"
     ReturnCodes nil)
    (TPM_WRONGPCRVAL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY adt-constructor-decl "(TPM_BAD_LOCALITY?)"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (/= const-decl "boolean" notequal nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_ActivateIdentity const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (activateIdentityOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (activateIdentityState const-decl "tpmAbsState" tpm nil)
    (activateIdentity? const-decl "bool" tpm nil)
    (decrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (private const-decl "privKVAL" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (extend_post 0
  (extend_post-1 nil 3596461093 ("" (grind))
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" commands nil))
   shostak))
 (extend_post2 0
  (extend_post2-1 nil 3596461095
   ("" (grind) (("" (lemma unique_error) (("" (grind) nil nil)) nil))
    nil)
   ((unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY adt-constructor-decl "(TPM_BAD_LOCALITY?)"
     ReturnCodes nil)
    (TPM_BAD_LOCALITY? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Extend const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (antisymmetryMonad 0
  (antisymmetryMonad-1 nil 3596461097
   ("" (grind)
    (("" (decompose-equality)
      (("" (grind) (("" (decompose-equality) nil nil)) nil)) nil))
    nil)
   ((extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (pcrsPower const-decl "PCRVALUES" pcr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PCR type-decl nil pcr nil)
    (hash adt-accessor-decl "[(extend?) -> PCRVAL]" pcr nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (addKey const-decl "KEYSET" key nil)
    (private const-decl "privKVAL" key nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (initKeyVal const-decl "K" tpm nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (>>= const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (modify const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (antisymmetryMonad2 0
  (antisymmetryMonad2-1 nil 3596461097
   ("" (grind)
    (("" (decompose-equality -3)
      (("" (decompose-equality)
        (("" (decompose-equality)
          (("" (decompose-equality -4)
            (("" (decompose-equality)
              (("" (decompose-equality -3)
                (("" (decompose-equality -3)
                  (("" (decompose-equality -3)
                    (("" (grind)
                      (("1" (decompose-equality)
                        (("1" (decompose-equality)
                          (("1" (decompose-equality -2) nil nil)) nil))
                        nil)
                       ("2" (decompose-equality)
                        (("2" (decompose-equality -2) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (outDigest shared-adt-accessor-decl
     "[{x: tpmAbsOutput | OUT_Extend?(x) OR OUT_PCRRead?(x)} -> (tpmDigest?)]"
     tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Extend adt-constructor-decl
     "[[(tpmDigest?), ReturnCode] -> (OUT_Extend?)]" tpm nil)
    (PCR type-decl nil pcr nil)
    (tpmPCRValue const-decl "(tpmDigest?)" data nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (hash adt-accessor-decl "[(extend?) -> PCRVAL]" pcr nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (set type-eq-decl nil sets nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (tpmCMKDelegate? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (digest adt-accessor-decl "[(tpmDigest?) -> list[tpmData]]" data
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (>> const-decl "State" StateMonad nil)
    (/= const-decl "boolean" notequal nil)
    (TPM_Extend const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (antisymmetryMonad3 0
  (antisymmetryMonad3-1 nil 3596461100
   ("" (grind)
    (("" (decompose-equality -3)
      (("" (decompose-equality)
        (("" (decompose-equality)
          (("" (decompose-equality)
            (("" (grind)
              (("1" (decompose-equality -2)
                (("1" (grind) (("1" (decompose-equality) nil nil))
                  nil))
                nil)
               ("2" (decompose-equality -2)
                (("2" (decompose-equality)
                  (("2" (grind)
                    (("2" (decompose-equality)
                      (("2" (decompose-equality -2) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (outDigest shared-adt-accessor-decl
     "[{x: tpmAbsOutput | OUT_Extend?(x) OR OUT_PCRRead?(x)} -> (tpmDigest?)]"
     tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Extend adt-constructor-decl
     "[[(tpmDigest?), ReturnCode] -> (OUT_Extend?)]" tpm nil)
    (PCR type-decl nil pcr nil)
    (tpmPCRValue const-decl "(tpmDigest?)" data nil)
    (extend? adt-recognizer-decl "[PCR -> boolean]" pcr nil)
    (extend adt-constructor-decl "[[PCR, PCRVAL] -> (extend?)]" pcr
     nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (pcr adt-accessor-decl "[(extend?) -> PCR]" pcr nil)
    (hash adt-accessor-decl "[(extend?) -> PCRVAL]" pcr nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (set type-eq-decl nil sets nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PCR_ATTRIBUTES type-eq-decl nil pcr nil)
    (tpmCMKDelegate? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (digest adt-accessor-decl "[(tpmDigest?) -> list[tpmData]]" data
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (/= const-decl "boolean" notequal nil)
    (extend? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (member const-decl "bool" sets nil)
    (b2n const-decl "nbit" bit nil))
   shostak))
 (pcr_read_post 0
  (pcr_read_post-1 nil 3596461102 ("" (grind))
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (pcrReadState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (pcrReadOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PCRRead const-decl "State" commands nil))
   shostak))
 (quote_post_TCC1 0
  (quote_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_Quote const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (quote_post_TCC2 0
  (quote_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmAuthData? const-decl "bool" data nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (quote? const-decl "bool" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" commands nil))
   nil))
 (quote_post 0
  (quote_post-1 nil 3596461104 ("" (grind))
   ((PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" commands nil))
   shostak))
 (bad_nonce 0
  (bad_nonce-1 nil 3596461107
   ("" (grind)
    (("1" (decompose-equality)
      (("1" (decompose-equality -7)
        (("1" (decompose-equality) (("1" (decompose-equality) nil nil))
          nil))
        nil))
      nil)
     ("2" (decompose-equality -7)
      (("2" (decompose-equality) (("2" (decompose-equality) nil nil))
        nil))
      nil)
     ("3" (decompose-equality -7)
      (("3" (decompose-equality) (("3" (decompose-equality) nil nil))
        nil))
      nil))
    nil)
   ((tpmData_tpmNonce_extensionality formula-decl nil data nil)
    (sigkey adt-accessor-decl "[(signed?) -> privKVAL]" data nil)
    (signData adt-accessor-decl "[(signed?) -> tpmData]" data nil)
    (tpmMigKeyAuth? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmIdContents? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (tpmDigest? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (digest shared-adt-accessor-decl "[d:
   {x: tpmData | tpmMigKeyAuth?(x) OR tpmQuote?(x) OR tpmIdContents?(x)} ->
   {x: tpmData |
            IF tpmMigKeyAuth?(d) OR tpmIdContents?(d) THEN tpmDigest?(x)
            ELSE tpmCompositeHash?(x)
            ENDIF}]" data nil)
    (tpmQuote2? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (externalData shared-adt-accessor-decl
     "[{x: tpmData | tpmQuote?(x) OR tpmQuote2?(x)} -> (tpmNonce?)]"
     data nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (a shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_SetTempDeactivated?(x) OR OUT_TakeOwnership?(x)
           OR OUT_OwnerClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_Seal?(x) OR OUT_Unseal?(x) OR OUT_UnBind?(x)
           OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_ConvertMigrationBlob?(x) OR OUT_AuthorizeMigrationKey?(x)
           OR OUT_MigrateKey?(x) OR OUT_CMK_SetRestrictions?(x)
           OR OUT_CMK_ApproveMA?(x) OR OUT_CMK_CreateKey?(x)
           OR OUT_CMK_CreateTicket?(x) OR OUT_CMK_CreateBlob?(x)
           OR OUT_CMK_ConvertMigration?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_Quote?(x) OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   authOut[HV]]" tpm nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (sigD adt-accessor-decl "[(OUT_Quote?) -> (signed?)]" tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (encrypted?)]" data nil)
    (encData adt-accessor-decl "[(encrypted?) -> tpmData]" data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (privKey adt-accessor-decl "[(tpmStoreAsymkey?) -> privKVAL]" data
     nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmCompositeHash adt-constructor-decl
     "[(tpmPCRComposite?) -> (tpmCompositeHash?)]" data nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?)] -> (tpmQuote?)]" data nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (signed adt-constructor-decl "[[tpmData, privKVAL] -> (signed?)]"
     data nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (tpmPCRComposite adt-constructor-decl
     "[[PCR_SELECTION, PCRVALUES] -> (tpmPCRComposite?)]" data nil)
    (PCR type-decl nil pcr nil) (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (OUT_Quote adt-constructor-decl
     "[[(tpmPCRComposite?), (signed?), authOut, ReturnCode] -> (OUT_Quote?)]"
     tpm nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (authOut type-eq-decl nil data nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> (tpmPCRComposite?)]"
     tpm nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (tpmAuthData? const-decl "bool" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Quote const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (quote? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (bad_signing_key 0
  (bad_signing_key-1 nil 3596461110
   ("" (grind)
    (("1" (decompose-equality -9) (("1" (decompose-equality) nil nil))
      nil)
     ("2" (decompose-equality) (("2" (decompose-equality) nil nil))
      nil)
     ("3" (decompose-equality) (("3" (decompose-equality) nil nil))
      nil)
     ("4" (decompose-equality -9) (("4" (decompose-equality) nil nil))
      nil)
     ("5" (decompose-equality) (("5" (decompose-equality) nil nil))
      nil)
     ("6" (decompose-equality -9) (("6" (decompose-equality) nil nil))
      nil)
     ("7" (decompose-equality) (("7" (decompose-equality) nil nil))
      nil)
     ("8" (decompose-equality) (("8" (decompose-equality) nil nil))
      nil)
     ("9" (decompose-equality) (("9" (decompose-equality) nil nil))
      nil))
    nil)
   ((tpmAuthData? const-decl "bool" data nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> (tpmPCRComposite?)]"
     tpm nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (authOut type-eq-decl nil data nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Quote adt-constructor-decl
     "[[(tpmPCRComposite?), (signed?), authOut, ReturnCode] -> (OUT_Quote?)]"
     tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil) (PCR type-decl nil pcr nil)
    (tpmPCRComposite adt-constructor-decl
     "[[PCR_SELECTION, PCRVALUES] -> (tpmPCRComposite?)]" data nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (signed adt-constructor-decl "[[tpmData, privKVAL] -> (signed?)]"
     data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?)] -> (tpmQuote?)]" data nil)
    (tpmCompositeHash adt-constructor-decl
     "[(tpmPCRComposite?) -> (tpmCompositeHash?)]" data nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (privKey adt-accessor-decl "[(tpmStoreAsymkey?) -> privKVAL]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encData adt-accessor-decl "[(encrypted?) -> tpmData]" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (encrypted?)]" data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (TRUE const-decl "bool" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (sigD adt-accessor-decl "[(OUT_Quote?) -> (signed?)]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (a shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_SetTempDeactivated?(x) OR OUT_TakeOwnership?(x)
           OR OUT_OwnerClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_Seal?(x) OR OUT_Unseal?(x) OR OUT_UnBind?(x)
           OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_ConvertMigrationBlob?(x) OR OUT_AuthorizeMigrationKey?(x)
           OR OUT_MigrateKey?(x) OR OUT_CMK_SetRestrictions?(x)
           OR OUT_CMK_ApproveMA?(x) OR OUT_CMK_CreateKey?(x)
           OR OUT_CMK_CreateTicket?(x) OR OUT_CMK_CreateBlob?(x)
           OR OUT_CMK_ConvertMigration?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_Quote?(x) OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   authOut[HV]]" tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (signData adt-accessor-decl "[(signed?) -> tpmData]" data nil)
    (sigkey adt-accessor-decl "[(signed?) -> privKVAL]" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Quote const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (quote? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (bad_pcrs 0
  (bad_pcrs-1 nil 3596461114
   ("" (grind)
    (("1" (decompose-equality -7) (("1" (decompose-equality) nil nil))
      nil)
     ("2" (decompose-equality -7) (("2" (decompose-equality) nil nil))
      nil)
     ("3" (decompose-equality -7) (("3" (decompose-equality) nil nil))
      nil))
    nil)
   ((tpmAuthData? const-decl "bool" data nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OUT_Quote? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (tpmPCRComposite? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (pcrData adt-accessor-decl "[(OUT_Quote?) -> (tpmPCRComposite?)]"
     tpm nil)
    (signed? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (authOut type-eq-decl nil data nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (OUT_Quote adt-constructor-decl
     "[[(tpmPCRComposite?), (signed?), authOut, ReturnCode] -> (OUT_Quote?)]"
     tpm nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil) (PCR type-decl nil pcr nil)
    (tpmPCRComposite adt-constructor-decl
     "[[PCR_SELECTION, PCRVALUES] -> (tpmPCRComposite?)]" data nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (signed adt-constructor-decl "[[tpmData, privKVAL] -> (signed?)]"
     data nil)
    (tpmCompositeHash? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmQuote? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmQuote adt-constructor-decl
     "[[(tpmCompositeHash?), (tpmNonce?)] -> (tpmQuote?)]" data nil)
    (tpmCompositeHash adt-constructor-decl
     "[(tpmPCRComposite?) -> (tpmCompositeHash?)]" data nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (privKey adt-accessor-decl "[(tpmStoreAsymkey?) -> privKVAL]" data
     nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (encData adt-accessor-decl "[(encrypted?) -> tpmData]" data nil)
    (encDat adt-accessor-decl "[(tpmKey?) -> (encrypted?)]" data nil)
    (EVEN const-decl "(tpmNonce?)" data nil)
    (ODD const-decl "(tpmNonce?)" data nil)
    (TRUE const-decl "bool" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tpmMigrateAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (tpmSecret? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (usageAuth shared-adt-accessor-decl
     "[{x: tpmData | tpmStoreAsymkey?(x) OR tpmMigrateAsymkey?(x)} ->
   (tpmSecret?)]" data nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (sigD adt-accessor-decl "[(OUT_Quote?) -> (signed?)]" tpm nil)
    (OUT_SetTempDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_TakeOwnership? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_OwnerClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableOwnerClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Seal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Unseal? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_UnBind? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_CreateWrapKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_LoadKey2? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_GetPubKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ConvertMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_AuthorizeMigrationKey? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_MigrateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_SetRestrictions? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ApproveMA? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CMK_CreateTicket? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_CreateBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CMK_ConvertMigration? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerReadInternalPub? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_DAA_Join? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_DAA_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (a shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_SetTempDeactivated?(x) OR OUT_TakeOwnership?(x)
           OR OUT_OwnerClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_Seal?(x) OR OUT_Unseal?(x) OR OUT_UnBind?(x)
           OR OUT_CreateWrapKey?(x) OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_ConvertMigrationBlob?(x) OR OUT_AuthorizeMigrationKey?(x)
           OR OUT_MigrateKey?(x) OR OUT_CMK_SetRestrictions?(x)
           OR OUT_CMK_ApproveMA?(x) OR OUT_CMK_CreateKey?(x)
           OR OUT_CMK_CreateTicket?(x) OR OUT_CMK_CreateBlob?(x)
           OR OUT_CMK_ConvertMigration?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_Quote?(x) OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   authOut[HV]]" tpm nil)
    (OUT_Error? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Init? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Startup? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SaveState? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SetOwnerInstall? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_OwnerSetDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalEnable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalDisable? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalSetDeactivated? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SetOperatorAuth? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ForceClear? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_DisableForceClear? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_PhysicalPresence? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_ResetEstablishmentBit? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateMigrationBlob? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_SHA1Start? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_SHA1Update? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1Complete? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_SHA1CompleteExtend? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Sign? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_GetRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_StirRandom? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CertifyKey? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_CreateEndorsementKeyPair? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_CreateRevocableEK? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_RevokeTrust? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ReadPubek? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_MakeIdentity? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ActivateIdentity? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_Extend? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCRRead? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_PCR_Reset? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_ChangeAuth? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (OUT_ChangeAuthOwner? adt-recognizer-decl
     "[tpmAbsOutput -> boolean]" tpm nil)
    (OUT_FlushSpecific? adt-recognizer-decl "[tpmAbsOutput -> boolean]"
     tpm nil)
    (m shared-adt-accessor-decl "[{x: tpmAbsOutput |
              OUT_Error?(x) OR OUT_Init?(x) OR OUT_Startup?(x)
           OR OUT_SaveState?(x) OR OUT_SetOwnerInstall?(x)
           OR OUT_OwnerSetDisable?(x) OR OUT_PhysicalEnable?(x)
           OR OUT_PhysicalDisable?(x) OR OUT_PhysicalSetDeactivated?(x)
           OR OUT_SetTempDeactivated?(x) OR OUT_SetOperatorAuth?(x)
           OR OUT_TakeOwnership?(x) OR OUT_OwnerClear?(x)
           OR OUT_ForceClear?(x) OR OUT_DisableOwnerClear?(x)
           OR OUT_DisableForceClear?(x) OR OUT_PhysicalPresence?(x)
           OR OUT_ResetEstablishmentBit?(x) OR OUT_Seal?(x)
           OR OUT_Unseal?(x) OR OUT_UnBind?(x) OR OUT_CreateWrapKey?(x)
           OR OUT_LoadKey2?(x) OR OUT_GetPubKey?(x)
           OR OUT_CreateMigrationBlob?(x) OR OUT_ConvertMigrationBlob?(x)
           OR OUT_AuthorizeMigrationKey?(x) OR OUT_MigrateKey?(x)
           OR OUT_CMK_SetRestrictions?(x) OR OUT_CMK_ApproveMA?(x)
           OR OUT_CMK_CreateKey?(x) OR OUT_CMK_CreateTicket?(x)
           OR OUT_CMK_CreateBlob?(x) OR OUT_CMK_ConvertMigration?(x)
           OR OUT_SHA1Start?(x) OR OUT_SHA1Update?(x)
           OR OUT_SHA1Complete?(x) OR OUT_SHA1CompleteExtend?(x)
           OR OUT_Sign?(x) OR OUT_GetRandom?(x) OR OUT_StirRandom?(x)
           OR OUT_CertifyKey?(x) OR OUT_CreateEndorsementKeyPair?(x)
           OR OUT_CreateRevocableEK?(x) OR OUT_RevokeTrust?(x)
           OR OUT_ReadPubek?(x) OR OUT_OwnerReadInternalPub?(x)
           OR OUT_MakeIdentity?(x) OR OUT_ActivateIdentity?(x)
           OR OUT_Extend?(x) OR OUT_PCRRead?(x) OR OUT_Quote?(x)
           OR OUT_PCR_Reset?(x) OR OUT_ChangeAuth?(x)
           OR OUT_ChangeAuthOwner?(x) OR OUT_FlushSpecific?(x)
           OR OUT_DAA_Join?(x) OR OUT_DAA_Sign?(x)} ->
   ReturnCode]" tpm nil)
    (select adt-accessor-decl
     "[(tpmPCRComposite?) -> PCR_SELECTION[HV]]" data nil)
    (pcrValue adt-accessor-decl "[(tpmPCRComposite?) -> PCRVALUES[HV]]"
     data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_Quote const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (/= const-decl "boolean" notequal nil)
    (quote? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (check_PCRS_TCC1 0
  (check_PCRS_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (>> const-decl "State" StateMonad nil)
    (TPM_Quote const-decl "State" commands nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (sign const-decl "tpmData" key nil)
    (TPM_Extend const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (quote? const-decl "bool" tpm nil)
    (extend? const-decl "bool" tpm nil)
    (member const-decl "bool" sets nil) (b2n const-decl "nbit" bit nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (check_PCRS_TCC2 0
  (check_PCRS_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (tpmAuthData? const-decl "bool" data nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (extend? const-decl "bool" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" commands nil)
    (TPM_Quote const-decl "State" commands nil)
    (>> const-decl "State" StateMonad nil))
   nil))
 (check_PCRS 0
  (check_PCRS-1 nil 3596461117 ("" (grind))
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" commands nil)
    (quote? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" commands nil)
    (>> const-decl "State" StateMonad nil))
   shostak))
 (quote_with_prev_key_TCC1 0
  (quote_with_prev_key_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (member const-decl "bool" sets nil)
    (private const-decl "privKVAL" key nil)
    (quote? const-decl "bool" tpm nil)
    (encStoreAsymkey? const-decl "bool" data nil)
    (encMigrateAsymkey? const-decl "bool" data nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" commands nil)
    (>>= const-decl "State" StateMonad nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" commands nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (TPM_CreateWrapKey const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (encrypt const-decl "tpmData" key nil)
    (inverse const-decl "integer" keydata nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (checkKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (updateLoc const-decl "mem" memory nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" commands nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (quote_with_prev_key_TCC2 0
  (quote_with_prev_key_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (afterStartup? const-decl "bool" tpm nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmAuthData? const-decl "bool" data nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (updateLoc const-decl "mem" memory nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" commands nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (TPM_Quote const-decl "State" commands nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" commands nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" commands nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (quote? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil))
   nil))
 (quote_with_prev_key 0
  (quote_with_prev_key-1 nil 3596461120 ("" (grind))
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (updateLoc const-decl "mem" memory nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" commands nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (createWrapKey? const-decl "bool" tpm nil)
    (checkFIPS? const-decl "bool" tpm nil)
    (checkKey? const-decl "bool" tpm nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (genKeyState const-decl "tpmAbsState" tpm nil)
    (createWrapKeyState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (createWrapKeyOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_CreateWrapKey const-decl "State" commands nil)
    (saveToMemState const-decl "tpmAbsState" tpm nil)
    (CPU_saveOutput const-decl "[tpmAbsOutput -> State]" commands nil)
    (useOutputStateOutput const-decl "[A -> State]" StateMonad nil)
    (>>= const-decl "State" StateMonad nil)
    (TPM_Noop const-decl "[tpmAbsOutput -> State]" commands nil)
    (quote? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil))
   shostak))
 (no_senter 0
  (no_senter-1 nil 3596461176 ("" (grind))
   ((PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (tpmNonce? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_EK const-decl "(tpmKey?)" key nil)
    (initKeyVal const-decl "K" tpm nil)
    (disableDef const-decl "bool" PermanentFlags nil)
    (ownershipDef const-decl "bool" PermanentFlags nil)
    (deactivatedDef const-decl "bool" PermanentFlags nil)
    (readPubekDef const-decl "bool" PermanentFlags nil)
    (disableOwnerClearDef const-decl "bool" PermanentFlags nil)
    (allowMaintenanceDef const-decl "bool" PermanentFlags nil)
    (physPresLLDef const-decl "bool" PermanentFlags nil)
    (physPresHWEDef const-decl "bool" PermanentFlags nil)
    (physPresCMDEDef const-decl "bool" PermanentFlags nil)
    (TPMpostDef const-decl "bool" PermanentFlags nil)
    (operatorDef const-decl "bool" PermanentFlags nil)
    (nvLockedDef const-decl "bool" PermanentFlags nil)
    (readSRKPubDef const-decl "bool" PermanentFlags nil)
    (tpmEstablishedDef const-decl "bool" PermanentFlags nil)
    (disableFullDALogicInfoDef const-decl "bool" PermanentFlags nil)
    (permFlagsDefault const-decl "PermFlags" PermanentFlags nil)
    (tpmCMKDelegateDefault const-decl "(tpmCMKDelegate?)" data nil)
    (permDataDefault const-decl "PermData" PermanentData nil)
    (stanyFlagsDefault const-decl "StanyFlags" StanyFlags nil)
    (stanyDataDefault const-decl "StanyData" StanyData nil)
    (stclear_deactivatedDef const-decl "bool" StclearFlags nil)
    (disableForceClearDef const-decl "bool" StclearFlags nil)
    (physicalPresenceDef const-decl "bool" StclearFlags nil)
    (physicalPresenceLockDef const-decl "bool" StclearFlags nil)
    (bGlobablLockDef const-decl "bool" StclearFlags nil)
    (stclearFlagsDefault const-decl "StclearFlags" StclearFlags nil)
    (stclearDataDefault const-decl "StclearData" StclearData nil)
    (K type-eq-decl nil tpm nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (initSaveData const-decl "(wellFormedRestore?)" startupData nil)
    (tpmDefault const-decl "(wellFormed?)" tpm nil)
    (tpmPostInit const-decl "(wellFormed?)" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (put const-decl "State" StateMonad nil)
    (TPM_Init const-decl "State" commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (private const-decl "privKVAL" key nil)
    (addKey const-decl "KEYSET" key nil)
    (removeKeysStartup const-decl "KEYSET" tpm nil)
    (tpmRestoreUnknown const-decl "restoreStateData" startupData nil)
    (tpmStartup const-decl "(wellFormed?)" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (modify const-decl "State" StateMonad nil)
    (TPM_Startup const-decl "State" commands nil)
    (>> const-decl "State" StateMonad nil)
    (pcrsResetSenterState const-decl "tpmAbsState" tpm nil)
    (b2n const-decl "nbit" bit nil) (member const-decl "bool" sets nil)
    (extend? const-decl "bool" tpm nil)
    (pcrsSenter const-decl "PCRVALUES" pcr nil)
    (pcrsExtend const-decl "PCRVALUES" pcr nil)
    (extendState const-decl "tpmAbsState" tpm nil)
    (changeLocalityState const-decl "tpmAbsState" tpm nil)
    (CPU_senter const-decl "State" commands nil)
    (allLocs const-decl "LOCALITY_SELECTION" pcr nil)
    (allResetAccess const-decl "PCR_ATTRIBUTES" pcr nil)
    (add const-decl "(nonempty?)" sets nil)
    (restrict const-decl "R" restrict nil)
    (CPU_sinit const-decl "State" commands nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (extendOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_Extend const-decl "State" commands nil)
    (quote? const-decl "bool" tpm nil)
    (sign const-decl "tpmData" key nil)
    (quoteState const-decl "tpmAbsState" tpm nil)
    (quoteOut const-decl "tpmAbsOutput" tpm nil)
    (TPM_Quote const-decl "State" commands nil)
    (emptyset const-decl "set" sets nil))
   shostak))
 (pcr_reset_post 0
  (pcr_reset_post-1 nil 3596461180 ("" (grind))
   ((PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (validatePCRVals def-decl "nat" tpm nil)
    (member const-decl "bool" sets nil)
    (pcrResetState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (pcrResetOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_PCR_Reset const-decl "State" commands nil))
   shostak))
 (pcr_reset_post2 0
  (pcr_reset_post2-1 nil 3596461183
   ("" (grind)
    (("1" (lemma unique_error) (("1" (grind) nil nil)) nil)
     ("2" (lemma unique_error) (("2" (grind) nil nil)) nil)
     ("3" (lemma unique_error)
      (("3" (grind)
        (("3" (rewrite validatePCRVals)
          (("3" (grind)
            (("3" (rewrite validatePCRVals)
              (("3" (grind)
                (("3" (lemma validatePCRs) (("3" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (lemma unique_error) (("4" (grind) nil nil)) nil)
     ("5" (lemma unique_error) (("5" (grind) nil nil)) nil))
    nil)
   ((cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (PCRINDEX type-eq-decl nil pcr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (validatePCRs formula-decl nil tpm nil)
    (TPM_NOTLOCAL adt-constructor-decl "(TPM_NOTLOCAL?)" ReturnCodes
     nil)
    (TPM_NOTLOCAL? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (unique_error formula-decl nil tpm nil)
    (TPM_SUCCESS adt-constructor-decl "(TPM_SUCCESS?)" ReturnCodes nil)
    (TPM_SUCCESS? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (TPM_NOTRESETABLE adt-constructor-decl "(TPM_NOTRESETABLE?)"
     ReturnCodes nil)
    (TPM_NOTRESETABLE? adt-recognizer-decl "[ReturnCode -> boolean]"
     ReturnCodes nil)
    (ReturnCode type-decl nil ReturnCodes nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PCR_SELECTION type-eq-decl nil pcr nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TPM_PCR_Reset const-decl "State" commands nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (K type-eq-decl nil tpm nil) (KEYSET type-eq-decl nil key nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (mem type-eq-decl nil memory nil) (list type-decl nil list_adt nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (StanyData type-eq-decl nil StanyData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (pcrResetOut const-decl "tpmAbsOutput" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (pcrResetState const-decl "tpmAbsState" tpm nil)
    (member const-decl "bool" sets nil)
    (validatePCRVals def-decl "nat" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (afterInit? const-decl "bool" tpm nil)
    (HV formal-nonempty-type-decl nil commands nil))
   shostak))
 (change_auth_post_TCC1 0
  (change_auth_post_TCC1-1 nil 3596456996
   ("" (skosimp)
    (("" (lemma keyEncDatStoreAsymkey)
      (("" (lemma keyEncDatMigrateAsymkey) (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (keyEncDatMigrateAsymkey formula-decl nil data nil))
   nil))
 (change_auth_post_TCC2 0
  (change_auth_post_TCC2-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ChangeAuth const-decl "State" commands nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (change_auth_post_TCC3 0
  (change_auth_post_TCC3-1 nil 3596456996 ("" (subtype-tcc) nil nil)
   ((HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ChangeAuth const-decl "State" commands nil)
    (decryptADIP const-decl "(tpmSecret?)" data nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (change_auth_post 0
  (change_auth_post-1 nil 3596461185 ("" (grind))
   ((encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmEncAuth? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (afterStartup? const-decl "bool" tpm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil commands nil)
    (afterInit? const-decl "bool" tpm nil)
    (executeComPostInit const-decl "tpmAbsState" tpm nil)
    (changeAuthState const-decl "tpmAbsState" tpm nil)
    (executeComStartup const-decl "tpmAbsState" tpm nil)
    (executeCom const-decl "tpmAbsState" tpm nil)
    (outputComPostInit const-decl "tpmAbsOutput" tpm nil)
    (changeAuthOut const-decl "tpmAbsOutput" tpm nil)
    (outputComStartup const-decl "tpmAbsOutput" tpm nil)
    (outputCom const-decl "tpmAbsOutput" tpm nil)
    (tpmAbsState type-eq-decl nil tpm nil)
    (StclearFlags type-eq-decl nil StclearFlags nil)
    (StclearData type-eq-decl nil StclearData nil)
    (StanyFlags type-eq-decl nil StanyFlags nil)
    (StanyData type-eq-decl nil StanyData nil)
    (restoreStateData type-eq-decl nil startupData nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (PermFlags type-eq-decl nil PermanentFlags nil)
    (PermData type-eq-decl nil PermanentData nil)
    (PCRVALUES type-eq-decl nil pcr nil)
    (list type-decl nil list_adt nil) (mem type-eq-decl nil memory nil)
    (OUT_Nothing adt-constructor-decl "(OUT_Nothing?)" tpm nil)
    (OUT_Nothing? adt-recognizer-decl "[tpmAbsOutput -> boolean]" tpm
     nil)
    (LOCALITY type-eq-decl nil pcr nil)
    (KEYSET type-eq-decl nil key nil) (K type-eq-decl nil tpm nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (tpmData type-decl nil data nil)
    (tpmAbsOutput type-decl nil tpm nil)
    (modifyOutput const-decl "State" StateMonad nil)
    (TPM_ChangeAuth const-decl "State" commands nil))
   shostak)))

