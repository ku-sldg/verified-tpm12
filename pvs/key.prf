(key
 (private_TCC1 0
  (private_TCC1-1 nil 3583087526
   ("" (lemma keyEncDatStoreAsymkey) (("" (grind) nil nil)) nil)
   ((encStoreAsymkey? const-decl "bool" data nil)
    (keyEncDatStoreAsymkey formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil key nil))
   nil))
 (publicAsymkey_TCC1 0
  (publicAsymkey_TCC1-1 nil 3583081115 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil key nil)
    (tpmData type-decl nil data nil)
    (tpmStoreAsymkey? adt-recognizer-decl "[tpmData -> boolean]" data
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (inverse const-decl "integer" keydata nil))
   nil))
 (double_inverse 0
  (double_inverse-1 nil 3560197474 ("" (grind) nil nil)
   ((inverse const-decl "integer" keydata nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (inverse_private 0
  (inverse_private-1 nil 3560197084
   ("" (lemma pubInversePriv) (("" (grind) nil nil)) nil)
   ((public const-decl "KVAL" key nil)
    (private const-decl "privKVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (pubInversePriv formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil key nil))
   shostak))
 (inverse_public 0
  (inverse_public-1 nil 3560281095
   ("" (lemma pubInversePriv) (("" (grind) nil nil)) nil)
   ((private const-decl "privKVAL" key nil)
    (public const-decl "KVAL" key nil)
    (inverse const-decl "integer" keydata nil)
    (pubInversePriv formula-decl nil data nil)
    (HV formal-nonempty-type-decl nil key nil))
   shostak))
 (equal_inverse 0
  (equal_inverse-1 nil 3560883973 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (inverse const-decl "integer" keydata nil))
   shostak))
 (rewrap_TCC1 0
  (rewrap_TCC1-1 nil 3576843893 ("" (cases-tcc) nil nil) nil nil))
 (rewrap_TCC2 0
  (rewrap_TCC2-1 nil 3576843893 ("" (cases-tcc) nil nil) nil nil))
 (rewrap 0
  (rewrap-1 nil 3577022025 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil key nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (rewrap const-decl "(tpmKey?)" key nil))
   shostak))
 (no_double_encryption 0
  (no_double_encryption-1 nil 3588511247
   ("" (lemma noDoubleEncryption)
    (("" (grind)
      (("1" (lemma noDoubleEncryption) (("1" (grind) nil nil)) nil)
       ("2" (lemma noDoubleEncryption) (("2" (grind) nil nil)) nil))
      nil))
    nil)
   ((inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (HV formal-nonempty-type-decl nil key nil)
    (tpmData type-decl nil data nil)
    (boolean nonempty-type-decl nil booleans nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (badData const-decl "tpmData" data nil)
    (privKVAL type-eq-decl nil keydata nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (noDoubleEncryption formula-decl nil key nil))
   shostak))
 (check_decrypt_TCC1 0
  (check_decrypt_TCC1-1 nil 3583589301 ("" (subtype-tcc) nil nil)
   ((member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil))
   nil))
 (check_decrypt_TCC2 0
  (check_decrypt_TCC2-1 nil 3586007653 ("" (subtype-tcc) nil nil)
   ((member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil))
   nil))
 (check_decrypt 0
  (check_decrypt-1 nil 3583589302 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (check_decrypt2 0
  (check_decrypt2-1 nil 3583590220 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil key nil)
    (tpmData type-decl nil data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (checkDecrypt? const-decl "bool" key nil))
   shostak))
 (check_decrypt3_TCC1 0
  (check_decrypt3_TCC1-1 nil 3583590974 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil key nil)
    (tpmData type-decl nil data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (decrypt const-decl "tpmData" key nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil))
   nil))
 (check_decrypt3 0
  (check_decrypt3-1 nil 3583590890 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (HV formal-nonempty-type-decl nil key nil)
    (tpmData type-decl nil data nil)
    (encrypted? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil))
   shostak))
 (decrypt_encrypt_TCC1 0
  (decrypt_encrypt_TCC1-1 nil 3579889657 ("" (subtype-tcc) nil nil)
   ((inverse const-decl "integer" keydata nil)) nil))
 (decrypt_encrypt_TCC2 0
  (decrypt_encrypt_TCC2-1 nil 3583087526 ("" (subtype-tcc) nil nil)
   ((inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (encrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil))
   nil))
 (decrypt_encrypt 0
  (decrypt_encrypt-1 nil 3560012031 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (encrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (decrypt_equal_keys_TCC1 0
  (decrypt_equal_keys_TCC1-1 nil 3588444843 ("" (subtype-tcc) nil nil)
   ((inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (decrypt_equal_keys 0
  (decrypt_equal_keys-1 nil 3560012037 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (encrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (no_decrypt_unequal_keys_TCC1 0
  (no_decrypt_unequal_keys_TCC1-1 nil 3588444843
   ("" (subtype-tcc) nil nil)
   ((inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (no_decrypt_unequal_keys 0
  (no_decrypt_unequal_keys-1 nil 3560012042 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (encrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (no_decrypt_uninstalled_TCC1 0
  (no_decrypt_uninstalled_TCC1-1 nil 3588444844
   ("" (subtype-tcc) nil nil)
   ((member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil))
   shostak))
 (no_decrypt_uninstalled_TCC2 0
  (no_decrypt_uninstalled_TCC2-1 nil 3588444844
   ("" (subtype-tcc) nil nil)
   ((member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil))
   shostak))
 (no_decrypt_uninstalled 0
  (no_decrypt_uninstalled-1 nil 3588509307 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (encrypt const-decl "tpmData" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (decrypt const-decl "tpmData" key nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (check_sig 0
  (check_sig-1 nil 3588509325 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (inverse const-decl "integer" keydata nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil)
    (checkSig? const-decl "bool" key nil)
    (minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (no_sign_uninstalled 0
  (no_sign_uninstalled-1 nil 3588509330 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (integer nonempty-type-from-decl nil integers nil)
    (privKVAL type-eq-decl nil keydata nil)
    (member const-decl "bool" sets nil)
    (sign const-decl "tpmData" key nil))
   shostak))
 (load_key 0
  (load_key-1 nil 3588509338 ("" (grind) nil nil)
   ((tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil))
   shostak))
 (is_parent_decrypt 0
  (is_parent_decrypt-1 nil 3588509348
   ("" (lemma inverse_private)
    (("" (lemma parentInstalled) (("" (grind) nil nil)) nil)) nil)
   ((parentInstalled formula-decl nil key nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (tpmData type-decl nil data nil)
    (HV formal-nonempty-type-decl nil key nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (KEYSET type-eq-decl nil key nil)
    (privKVAL type-eq-decl nil keydata nil)
    (<= const-decl "bool" reals nil)
    (integer nonempty-type-from-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (set type-eq-decl nil sets nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (isParent? const-decl "bool" key nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "integer" keydata nil)
    (public const-decl "KVAL" key nil)
    (checkDecrypt? const-decl "bool" key nil)
    (inverse_private formula-decl nil key nil))
   shostak))
 (child_if_parent 0
  (child_if_parent-1 nil 3588509398 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tpmData type-decl nil data nil)
    (tpmKey? adt-recognizer-decl "[tpmData -> boolean]" data nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (KVAL type-eq-decl nil keydata nil)
    (private const-decl "privKVAL" key nil)
    (member const-decl "bool" sets nil)
    (keyFlagsF const-decl "KEY_FLAGS" keydata nil)
    (keyParmsDef const-decl "KEY_PARMS" keydata nil)
    (inverse const-decl "integer" keydata nil)
    (HV formal-nonempty-type-decl nil key nil)
    (storeAsymkeyDefault const-decl "(encrypted?)" data nil)
    (TPM_KH_SRK const-decl "(tpmKey?)" key nil)
    (installedOrSRK? const-decl "bool" key nil)
    (addKey const-decl "KEYSET" key nil)
    (loadKey const-decl "KEYSET" key nil)
    (add const-decl "(nonempty?)" sets nil))
   shostak))
 (no_child_if_no_parent 0
  (no_child_if_no_parent-1 nil 3588509404 ("" (grind) nil nil)
   ((private const-decl "privKVAL" key nil)
    (revokeKey const-decl "KEYSET" key nil)
    (member const-decl "bool" sets nil)
    (remove const-decl "set" sets nil))
   shostak)))

